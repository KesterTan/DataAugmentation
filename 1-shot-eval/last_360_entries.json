[
  {
    "question_id": 571,
    "text": "Example:\n\nInstruction:\nThe speed of a boat in still water in 37 km/hr and the rate of current is 13 km/hr. The distance travelled downstream in 10 minutes is:\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 37, \"arg_1\": 13}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 10, \"arg_1\": 60}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n8.33\n\nNow solve:\nHow many gallons of milk that is 10 percent butter-fat must be added to 8 gallons of milk that is 25 percent butterfat to obtain milk that is 20 percent butterfat?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 572,
    "text": "Example:\n\nInstruction:\nDifference between the length &breadth of a rectangle is 10 m. If its perimeter is 206 m, then its area is?\n\nUse this API documentation for reference: [{\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 10, \"arg_1\": 4}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 10, \"arg_1\": 3}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n1200.0\n\nNow solve:\nGiven a string \"Mr. John\", replace the title and then evaluate the Boolean expression (A \u2227 B) \u2228 (\u00acA \u2228 C) where A is True, B is False, and C is the result of the replace_title API.\n\nUse this API documentation for reference: [{\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Evaluates the Boolean expression (A \\u2227 B) \\u2228 (\\u00acA \\u2228 C) and returns the result.\", \"name\": \"evaluate_boolean_expression\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The result of the Boolean expression.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"A Boolean variable.\", \"type\": \"boolean\"}, \"b\": {\"description\": \"A Boolean variable.\", \"type\": \"boolean\"}, \"c\": {\"description\": \"A Boolean variable.\", \"type\": \"boolean\"}}, \"required\": [\"a\", \"b\", \"c\"], \"type\": \"object\"}}, {\"description\": \"Replaces certain titles in a given string.\\n\\nIf the string contains the pattern \\\"Mr. \\\" or \\\"Mrs. \\\", replace it with \\\"Miss. \\\".\\nIf the string contains the pattern \\\"Ms. \\\", replace it with \\\"Mrs. \\\".\", \"name\": \"replace_title\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Extracts the project IDs from a dictionary of projects.\", \"name\": \"get_project_ids\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of project IDs.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"projects\": {\"additionalProperties\": {\"additionalProperties\": {\"type\": \"object\"}, \"type\": \"object\"}, \"description\": \"A dictionary of projects. Each project is a dictionary with keys \\\"id\\\", \\\"name\\\", \\\"status\\\", and \\\"tasks\\\".\", \"type\": \"object\"}}, \"required\": [\"projects\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Splits batch data into batches of size `batch_size`.\", \"name\": \"split_batch_data\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of batches, where each batch is a list of sub-batches.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"batch_data\": {\"description\": \"A list of lists representing the original batch data.\", \"items\": {\"items\": {}, \"type\": \"array\"}, \"type\": \"array\"}, \"batch_size\": {\"description\": \"An integer indicating the desired size of each batch.\", \"type\": \"integer\"}}, \"required\": [\"batch_data\", \"batch_size\"], \"type\": \"object\"}}, {\"description\": \"Determines if an integer is a power of two or a power of two plus one.\", \"name\": \"is_power_of_two_or_two_plus_one\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The integer to check.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Converts a single byte to an integer.\", \"name\": \"int_of_byte\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The integer representation of the byte.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"byte\": {\"description\": \"The byte to convert.\", \"type\": [\"object\", \"object\"]}}, \"required\": [\"byte\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Serializes a datetime object as a string in the format `YYYY-MM-DDTHH:MM:SS`.\\nIf the input is `None`, the function returns an empty string.\", \"name\": \"serialize_datetime\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"datetime_object\": {\"description\": \"The datetime object to be serialized.\", \"nullable\": true, \"type\": \"object\"}}, \"required\": [\"datetime_object\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 573,
    "text": "Example:\n\nInstruction:\nA girl walking at the rate of 9 Km per hour crosses a square field diagonally in 12 seconds. The area of the field is:\n\nUse this API documentation for reference: [{\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 9, \"arg_1\": 1000}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 360, \"arg_1\": 10}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 12, \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 9, \"arg_1\": 1000}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 360, \"arg_1\": 10}}, {\"name\": \"divide\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": \"$var_6.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": 12, \"arg_1\": \"$var_7.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_8.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_9.result$\", \"arg_1\": 2}}]\n\nGold Answer:\n450.0\n\nNow solve:\nA salesman's income consists of a commission and a base salary of $350 per week. Over the past 5 weeks, his weekly income totals have been $556, $413, $420, $436 and $395. What must his average (arithmetic mean) commission be per week over the next two weeks so that his average weekly income is $500 over the 7-week period?\n\nUse this API documentation for reference: [{\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 574,
    "text": "Example:\n\nInstruction:\nIn the new budget the price of wheat rose by 8%. By how much percent must a person reduce his consumption so that his expenditure on it does not increase?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 8, \"arg_1\": 100}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 8, \"arg_1\": 100}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n7.41\n\nNow solve:\nThe difference between two numbers is 1365. When the larger number is divided by the smaller one, the quotient is 6 and the remainder is 15. The smaller number is\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 575,
    "text": "Example:\n\nInstruction:\nN= 1!+2!+3!.....+10!. what is the last digit of N^N?\n\nUse this API documentation for reference: [{\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 10, \"arg_1\": 3}}, {\"name\": \"power\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 1}}]\n\nGold Answer:\n7.0\n\nNow solve:\nGenerate a random character, remove any non-alphanumeric characters from it, and then get the UTF-8 encoding of the resulting character.\n\nUse this API documentation for reference: [{\"description\": \"Removes any non-alphanumeric characters from the input string and removes leading and trailing whitespace.\", \"name\": \"remove_nonalnum\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The filtered string with only alphanumeric characters and no leading or trailing whitespace.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"object\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Formats a word to have a specific style.\", \"name\": \"format_word\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The formatted word.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"word\": {\"description\": \"The word to format.\", \"nullable\": true, \"type\": \"string\"}}, \"required\": [\"word\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Reloads a page object if it has a .reload() method.\", \"name\": \"reload_page\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the page was reloaded, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"page\": {\"description\": \"The page object to reload.\"}}, \"required\": [\"page\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Reads a text file and returns a list of words that are contained in the file and also in the list of global variable `global_words`.\", \"name\": \"read_file_and_filter_words\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of words that are contained in the file and also in the list of global variable `global_words`.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the text file.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Reads the contents of a text file and replaces all occurrences of a given phrase.\", \"name\": \"replace_phrase\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The modified content as a string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the text file.\", \"type\": \"string\"}, \"new_phrase\": {\"description\": \"The phrase to replace the old one.\", \"type\": \"string\"}, \"old_phrase\": {\"description\": \"The phrase to be replaced.\", \"type\": \"string\"}}, \"required\": [\"file_path\", \"old_phrase\", \"new_phrase\"], \"type\": \"object\"}}, {\"description\": \"Concatenates `n` number of `word`s to each string in `words`.\", \"name\": \"concatenate_word\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list of strings with `word` concatenated `n` times to each string in `words`.\\n    If `n` is less than or equal to zero, then the function returns an empty list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The number of times `word` should be concatenated.\", \"type\": \"integer\"}, \"word\": {\"description\": \"The string to be concatenated.\", \"type\": \"string\"}, \"words\": {\"description\": \"The list of strings to which `word` will be concatenated.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"word\", \"n\", \"words\"], \"type\": \"object\"}}, {\"description\": \"Formats min_val and max_val as a string in the format \\\"{min_val:02}-{max_val:02}\\\".\", \"name\": \"min_max_format\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"max_val\": {\"description\": \"The maximum value.\", \"type\": [\"integer\", \"number\"]}, \"min_val\": {\"description\": \"The minimum value.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"min_val\", \"max_val\"], \"type\": \"object\"}}, {\"description\": \"Returns a string containing the name of the character, along with its encoding in UTF-8.\", \"name\": \"get_unicode_character_info\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"char\": {\"description\": \"The Unicode character.\", \"type\": \"string\"}}, \"required\": [\"char\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Generates a random character from a list of lowercase letters and numbers.\", \"name\": \"generate_char\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A random character from the list of lowercase letters and numbers.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Gets a free port on the local machine using TCP socket programming.\", \"name\": \"get_free_port\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The available TCP port number.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Checks if the output of a Python code snippet matches the expected output.\", \"name\": \"check_output\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the output of the snippet matches the expected output, and False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"expected_output\": {\"description\": \"A string representing the expected output of the snippet.\", \"type\": \"string\"}, \"snippet\": {\"description\": \"A string containing a Python code snippet.\", \"type\": \"string\"}}, \"required\": [\"snippet\", \"expected_output\"], \"type\": \"object\"}}, {\"description\": \"Checks if all positional arguments are instances of the class specified in the keyword argument named `class`.\\nReturns `True` if all positional arguments are instances of that class, otherwise returns `False`.\", \"name\": \"hasattrs\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"args\": {\"description\": \"The positional arguments to check.\"}, \"kwargs\": {\"description\": \"The keyword arguments. The keyword argument `class` is required.\"}}, \"required\": [\"args\", \"kwargs\"], \"type\": \"object\"}}, {\"description\": \"Converts a list of strings to a list of their lengths.\", \"name\": \"convert_to_lengths\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"arr\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"arr\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 576,
    "text": "Example:\n\nInstruction:\n125 liters of a mixture of milk and water contains in the ratio 3:2. How much water should now be added so that the ratio of milk and water becomes 3:4?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 125, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 2}}]\n\nGold Answer:\n50.0\n\nNow solve:\nbag contains 7 green and 8 white balls. If two balls are drawn simultaneously, the probability that both are of the same colour is -.\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 577,
    "text": "Example:\n\nInstruction:\nA train running at the speed of 110 km/hr crosses a pole in 9 sec. What is the length of the train?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 110, \"arg_1\": 1000}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 3600}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 9}}]\n\nGold Answer:\n275.0\n\nNow solve:\nGiven a string \"Hello, World!\", remove formatting characters and count the number of uppercase letters.\n\nUse this API documentation for reference: [{\"description\": \"Encodes a URL by replacing all non-alphanumeric and special characters with their percent-encoded representations.\", \"name\": \"encode_url\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The encoded URL string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"url\": {\"description\": \"The URL to be encoded.\", \"type\": \"string\"}}, \"required\": [\"url\"], \"type\": \"object\"}}, {\"description\": \"Splits a positive integer (represented as a string) into individual digits.\", \"name\": \"split_int_to_digits\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Maps each integer in a list to its corresponding character in the ASCII table.\", \"name\": \"map_nums_to_chars\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where each key is a character and each value is its corresponding integer.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Determines if two file paths resolve to the same file.\", \"name\": \"same_file\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the two file paths resolve to the same file, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"path1\": {\"description\": \"The first file path.\", \"type\": \"string\"}, \"path2\": {\"description\": \"The second file path.\", \"type\": \"string\"}}, \"required\": [\"path1\", \"path2\"], \"type\": \"object\"}}, {\"description\": \"Reads a CSV file and returns a dictionary of lists containing station data.\", \"name\": \"get_station_data\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary with keys 'id', 'name', 'lat', and 'lon' and values as lists of corresponding values for each station.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The name of the CSV file to read.\", \"type\": \"string\"}}, \"required\": [\"filename\"], \"type\": \"object\"}}, {\"description\": \"Counts the number of uppercase letters within a given string.\", \"name\": \"count_uppercase_letters\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of uppercase letters in the string, or `None` if the string is empty or consists only of whitespace characters.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Joins a list of tokens together with a given separator, where each token may contain underscores.\\nIf a token contains underscores, the separator is not inserted between the underscores.\", \"name\": \"join_tokens\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"separator\": {\"description\": \"The separator to use between tokens.\", \"type\": \"string\"}, \"tokens\": {\"description\": \"A list of tokens to join together.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"tokens\", \"separator\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Removes formatting characters from a given string.\", \"name\": \"remove_formatting\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input string without formatting characters and the new-line character at the end.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Computes the maximum absolute value of two numbers, without using the `abs` function.\", \"name\": \"max_abs\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The first number.\", \"type\": [\"integer\", \"number\"]}, \"y\": {\"description\": \"The second number.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of simple words from the string, including the first and last word.\\nSimple words are words that do not contain any non-alphabetic characters.\", \"name\": \"get_simple_words_from_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Checks if a CUDA device is available.\", \"name\": \"use_cuda\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if a CUDA device is available, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Returns a string with the key and value separated by a colon and a space.\\nRaises a KeyError if the key is not in the data dictionary.\\nRaises a ValueError if the value is not a string.\", \"name\": \"get_info_with_error_handling\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string with the key and value separated by a colon and a space.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"data\": {\"additionalProperties\": {}, \"description\": \"The data dictionary.\", \"type\": \"object\"}, \"key\": {\"description\": \"The key to look up in the data dictionary.\", \"type\": \"string\"}}, \"required\": [\"key\", \"data\"], \"type\": \"object\"}}, {\"description\": \"Returns the index of the row that contains the largest sum of its elements.\\nIf there is more than one row that satisfies this condition, returns the index of the first one.\", \"name\": \"largest_row_sum_index\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A 2D array representing a matrix.\", \"items\": {\"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Toggles the values in a list of integers or booleans.\\n\\nInverts all the boolean values, while leaving the integers unchanged.\", \"name\": \"toggle_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"A list of integers or booleans.\", \"items\": {\"type\": [\"boolean\", \"integer\"]}, \"type\": \"array\"}}, \"required\": [\"input_list\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 578,
    "text": "Example:\n\nInstruction:\nWhat is the probability that the sum of two dice will yield a 6, and then when both are thrown again, their sum will again yield a 6? assume that each die has 5 sides with faces numbered 1 to 5.\n\nUse this API documentation for reference: [{\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"power\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 5, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 5, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"power\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 5, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 5, \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_4.result$\"}}]\n\nGold Answer:\n0.04\n\nNow solve:\na , b , k start from the same place and travel in the same direction at speeds of 30 km / hr , 40 km / hr , 60 km / hr respectively . b starts 6 hours after a . if b and k overtake a at the same instant , how many hours after a did k start ?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 579,
    "text": "Example:\n\nInstruction:\nGiven a list of points [[1, 2], [3, 4], [5, 6]], calculate the average point. Then, find the index of the first occurrence of the average point in the original list.\n\nUse this API documentation for reference: [{\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Resolves the port number for a given application protocol.\", \"name\": \"resolve_port_for_app_protocol\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The corresponding port number as an integer, or None if the protocol is not recognized.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"app_protocol\": {\"description\": \"The application protocol string.\", \"type\": \"string\"}}, \"required\": [\"app_protocol\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Extracts the feature values of a specified feature from a list of feature-object pairs.\", \"name\": \"extract_feature_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"feat_obj_pairs\": {\"description\": \"A list of feature-object pairs.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}, \"feature\": {\"description\": \"The specified feature name.\", \"type\": \"string\"}}, \"required\": [\"feat_obj_pairs\", \"feature\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Checks if the given lengths of the three sides form a valid triangle.\", \"name\": \"is_valid_triangle\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the three sides form a valid triangle, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The length of the first side.\", \"type\": \"integer\"}, \"b\": {\"description\": \"The length of the second side.\", \"type\": \"integer\"}, \"c\": {\"description\": \"The length of the third side.\", \"type\": \"integer\"}}, \"required\": [\"a\", \"b\", \"c\"], \"type\": \"object\"}}, {\"description\": \"Parses a string and extracts all numbers, converting them to integers if possible.\", \"name\": \"parse_string_to_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of integers extracted from the input string.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string to parse.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the average point of a list of points.\", \"name\": \"average_point\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The average point of the input points, rounded to the nearest integer.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"points\": {\"description\": \"A list of points represented as tuples in the form (x, y).\", \"items\": {\"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"points\"], \"type\": \"object\"}}, {\"description\": \"Performs element-wise multiplication between two tensors of equal dimension.\\nThe function supports broadcasting, and validates the input tensor dimensions and data types using assertions.\", \"name\": \"elementwise_mult\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"tensor1\": {\"description\": \"The first tensor.\", \"type\": \"object\"}, \"tensor2\": {\"description\": \"The second tensor.\", \"type\": \"object\"}}, \"required\": [\"tensor1\", \"tensor2\"], \"type\": \"object\"}}, {\"description\": \"Checks if two dictionaries are equal, including nested dictionaries.\", \"name\": \"are_dicts_equal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing a boolean indicating if the dictionaries are equal and a message.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"dict1\": {\"description\": \"The first dictionary to compare.\", \"type\": \"object\"}, \"dict2\": {\"description\": \"The second dictionary to compare.\", \"type\": \"object\"}}, \"required\": [\"dict1\", \"dict2\"], \"type\": \"object\"}}, {\"description\": \"Strips a line of text of leading and trailing whitespace, or replaces all whitespace with a provided replacement.\", \"name\": \"strip_line\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"line\": {\"description\": \"The line of text to be stripped or modified.\", \"type\": \"string\"}, \"replacement\": {\"description\": \"The character to replace whitespace with. If not provided, defaults to an empty string.\", \"nullable\": true, \"type\": \"string\"}}, \"required\": [\"line\"], \"type\": \"object\"}}, {\"description\": \"Splits a comma-separated list into a list of strings, where each string represents a single item in the list.\\nThe function removes any leading or trailing whitespace from each item.\", \"name\": \"split_comma_separated_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings, where each string represents a single item in the comma-separated list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"A string representing a comma-separated list.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Transposes a list of dictionaries representing rows in a data frame into a dictionary.\\n\\nThe keys of the resulting dictionary are the column names and the values are lists of all the values for that column.\", \"name\": \"transpose_df\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the keys are the column names and the values are lists of all the values for that column.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"rows\": {\"description\": \"A list of dictionaries where each dictionary represents a row in a data frame.\", \"items\": {\"additionalProperties\": {}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"rows\"], \"type\": \"object\"}}, {\"description\": \"Finds the index of the first occurrence of a specific element in a 2D list.\", \"name\": \"find_element\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing the indices of the row and column where the element is found.\\n    If the element is not found, returns `(-1, -1)`.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"array\": {\"description\": \"The 2D list to search.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}, \"element\": {\"description\": \"The element to find.\", \"type\": \"integer\"}}, \"required\": [\"array\", \"element\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"average_point\", \"arguments\": {\"points\": [[1, 2], [3, 4], [5, 6]]}, \"label\": \"$var1\"}, {\"name\": \"find_element\", \"arguments\": {\"array\": [[1, 2], [3, 4], [5, 6]], \"element\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n[-1, -1]\n\nNow solve:\nHow much is 80% of 40 is greater than 4/5 of 30?\n\nUse this API documentation for reference: [{\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 580,
    "text": "Example:\n\nInstruction:\nis two years older than B who is twice as old as C. If the total of the ages of A, B and C be 32, then how old is B?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 32, \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 2}}]\n\nGold Answer:\n12.0\n\nNow solve:\nFind the remainder of the division (3^50)/7.\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 581,
    "text": "Example:\n\nInstruction:\nForks, Spoons, and Knives in drawer are in the ratio of 4: 4 : 3. If there are 16 Forks, the number of Knives in the drawer is:\n\nUse this API documentation for reference: [{\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 16, \"arg_1\": 4}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 3}}]\n\nGold Answer:\n12.0\n\nNow solve:\nA 1 k.m. long wire is held by n poles. If one pole is removed, the length of the gap becomes 12/3m. What is the number of poles initially?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 582,
    "text": "Example:\n\nInstruction:\nI have a list of numbers [1, -2, 3, -4]. I want to find the index of the number that has the smallest absolute value after being exponentiated, and then convert that number to its big endian binary representation.\n\nUse this API documentation for reference: [{\"description\": \"Creates a server socket and starts listening on a specified port.\", \"name\": \"create_tcp_server\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The created server socket object.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"backlog\": {\"description\": \"the number of pending connections that can be queued (default: 10).\", \"type\": \"integer\"}, \"port\": {\"description\": \"the port number to listen on.\", \"type\": \"integer\"}, \"reuse_addr\": {\"description\": \"a boolean indicating whether to set the SO_REUSEADDR flag on the socket (default: True).\", \"type\": \"boolean\"}}, \"required\": [\"port\"], \"type\": \"object\"}}, {\"description\": \"Partitions a pandas data frame into three data frames based on the values in the \\\"label\\\" column.\", \"name\": \"partition_data_frame\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of three data frames.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"df\": {\"description\": \"The input data frame.\", \"type\": \"object\"}}, \"required\": [\"df\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Generates a random boolean value with a given probability `p`.\\nThe function returns True with probability `p` and False with probability `1 - p`.\", \"name\": \"random_boolean\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"p\": {\"description\": \"The probability of returning True.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"p\"], \"type\": \"object\"}}, {\"description\": \"Checks if a person object has a 'name' attribute.\", \"name\": \"check_name_attribute\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the person has a 'name' attribute, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"person\": {\"description\": \"The person object to check.\"}}, \"required\": [\"person\"], \"type\": \"object\"}}, {\"description\": \"Concatenates each string in the input list with its index.\", \"name\": \"concatenate_strings_with_index\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list with each string in the original list concatenated with its index.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"strings\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"strings\"], \"type\": \"object\"}}, {\"description\": \"Returns the index of the number in the input list that has the smallest absolute value after being exponentiated.\", \"name\": \"smallest_absolute_exponent\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"list_of_numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"list_of_numbers\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Converts a signed integer to its big endian binary representation.\", \"name\": \"signed_int_to_big_endian\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The big endian binary representation of the signed integer as a string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"num\": {\"description\": \"The signed integer to convert.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"num\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"smallest_absolute_exponent\", \"arguments\": {\"list_of_numbers\": [1, -2, 3, -4]}, \"label\": \"$var1\"}, {\"name\": \"signed_int_to_big_endian\", \"arguments\": {\"num\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n00000000000000000000000000000000\n\nNow solve:\nGiven a dictionary d = {'a': 1, 'b': 2, 'c': 3}, insert a new key-value pair 'd': 4 into the dictionary and then check if the dictionary is a nested dictionary.\n\nUse this API documentation for reference: [{\"description\": \"Prints type hints for a dictionary of variables and their associated type hints.\", \"name\": \"print_type_hints\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"hints\": {\"additionalProperties\": {\"type\": \"object\"}, \"description\": \"A dictionary of variables and their associated type hints.\", \"type\": \"object\"}}, \"required\": [\"hints\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Flattens a nested array into a single-level array, using recursion.\", \"name\": \"flatten_array\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"array\": {\"description\": \"The nested array to flatten.\", \"items\": {\"type\": [\"array\", \"integer\"]}, \"type\": \"array\"}}, \"required\": [\"array\"], \"type\": \"object\"}}, {\"description\": \"Inserts a key-value pair into a dictionary in-place.\", \"name\": \"insert_into_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The modified dictionary.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"d\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"The dictionary to insert the key-value pair into.\", \"type\": \"object\"}, \"k\": {\"description\": \"The key to be inserted.\", \"type\": \"string\"}, \"v\": {\"description\": \"The value associated with the key.\", \"type\": \"integer\"}}, \"required\": [\"d\", \"k\", \"v\"], \"type\": \"object\"}}, {\"description\": \"Checks if the given object has a function called `search` that takes two arguments (encoding and value).\\nReturns `True` if the call to `search` returns `True`, otherwise it returns `False`.\", \"name\": \"has_search_function\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The object to check.\"}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Checks if the given word is a stopword.\", \"name\": \"check_stopword\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the word is a stopword, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"stopwords\": {\"description\": \"The list of stopwords.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"word\": {\"description\": \"The word to check.\", \"type\": \"string\"}}, \"required\": [\"word\", \"stopwords\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Filters a list of tuples to only include those with at least one truthy value.\", \"name\": \"filter_truthy_tuples\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples, where each tuple has at least one truthy value.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"tuples\": {\"description\": \"A list of tuples, where each tuple has exactly three boolean elements.\", \"items\": {\"prefixItems\": [{\"type\": \"boolean\"}, {\"type\": \"boolean\"}, {\"type\": \"boolean\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"tuples\"], \"type\": \"object\"}}, {\"description\": \"Formats a fully-qualified namespace as a Python module name.\", \"name\": \"format_namespace\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"namespace\": {\"description\": \"The fully-qualified namespace.\", \"type\": \"object\"}}, \"required\": [\"namespace\"], \"type\": \"object\"}}, {\"description\": \"Counts the number of image files with a specific extension in a string of paths.\", \"name\": \"count_images\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"extension\": {\"description\": \"The extension of the image files to count.\", \"type\": \"string\"}, \"paths\": {\"description\": \"A string containing multiple paths to image files separated by a delimiter.\", \"type\": \"string\"}}, \"required\": [\"paths\", \"extension\"], \"type\": \"object\"}}, {\"description\": \"Updates the attributes dictionary based on the given conditions.\", \"name\": \"update_attributes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"attributes\": {\"additionalProperties\": {\"type\": \"boolean\"}, \"description\": \"A dictionary containing the \\\"found\\\" and \\\"verified\\\" attributes.\", \"type\": \"object\"}}, \"required\": [\"attributes\"], \"type\": \"object\"}}, {\"description\": \"Converts a positive integer to a bitwise string.\\nThe function accepts an integer and returns a string containing the binary representation of the integer,\\nwhere the least significant bit is at the beginning of the string.\", \"name\": \"int_to_bitwise_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"num\": {\"description\": \"The positive integer to be converted.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"num\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Gets the address from an object.\", \"name\": \"get_address\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The address attribute of the object if it exists, the location attribute if the object is an instance of a class that inherits from the Location class, or None if neither of these conditions are met.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The object to get the address from.\"}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Performs a specific operation on each element of a list of numbers.\", \"name\": \"perform_operation\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats after performing the operation on each element.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Checks if the input is a nested dictionary.\", \"name\": \"check_nested_dicts\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the input is a nested dictionary and False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"input_dict\": {\"description\": \"The input dictionary to check.\", \"type\": \"object\"}}, \"required\": [\"input_dict\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 583,
    "text": "Example:\n\nInstruction:\nAnne bought doughnuts for a class breakfast party. She bought 12 chocolate doughnuts, 6 coconut doughnuts, and 8 jam-filled doughnuts. How many doughnuts did Anne buy in all?\n\nUse this API documentation for reference: [{\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 12, \"arg_1\": 6}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 8}}]\n\nGold Answer:\n26.0\n\nNow solve:\nIf the wheel is 14 cm then the number of revolutions to cover a distance of 880 cm is?\n\nUse this API documentation for reference: [{\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 584,
    "text": "Example:\n\nInstruction:\nA salesman sold twice as much pears in the afternoon than in the morning. If he sold $450 kilograms of pears that day, how many kilograms did he sell in the afternoon?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 450, \"arg_1\": 3}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}]\n\nGold Answer:\n300.0\n\nNow solve:\nGenerate a random string of length 10, then count the number of uppercase letters in the string.\n\nUse this API documentation for reference: [{\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Converts a hexadecimal string into its binary representation and extracts the sign bit, exponent, and mantissa bits.\", \"name\": \"hex_to_float\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing the sign bit, exponent bits, and mantissa bits.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"hex_string\": {\"description\": \"A hexadecimal string representing a single-precision floating-point number.\", \"type\": \"string\"}}, \"required\": [\"hex_string\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Counts the number of state changes in a system represented by a list of strings.\", \"name\": \"count_state_changes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"states\": {\"description\": \"A list of strings representing the state changes in the system.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"states\"], \"type\": \"object\"}}, {\"description\": \"Converts a float variable to an int variable without any loss of data.\\n\\nThe conversion takes a fixed time of 0.000001 seconds for each float-to-int conversion.\\nThe function is optimized to minimize the number of float-to-int conversions.\", \"name\": \"float_to_int_optimized\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The int variable after conversion.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"f\": {\"description\": \"The float variable to be converted.\", \"type\": \"number\"}}, \"required\": [\"f\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns the phone number of the person if the person is in the phonebook,\\nor a string indicating that the person is not found in the phonebook.\", \"name\": \"get_phone_number\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"name\": {\"description\": \"The name of the person.\", \"type\": \"string\"}, \"phonebook\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary that maps names to phone numbers.\", \"type\": \"object\"}}, \"required\": [\"name\", \"phonebook\"], \"type\": \"object\"}}, {\"description\": \"Generates a pseudo-random string of `num_chars` characters.\\nThe string is composed of lowercase letters, digits, and underscores (`_`).\", \"name\": \"rand_str\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"num_chars\": {\"description\": \"The number of characters in the string.\", \"type\": \"integer\"}}, \"required\": [\"num_chars\"], \"type\": \"object\"}}, {\"description\": \"Calculates the area of a square given its length.\", \"name\": \"calculate_square_area\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"l\": {\"description\": \"The length of the square.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"l\"], \"type\": \"object\"}}, {\"description\": \"Counts the number of uppercase letters in a string.\", \"name\": \"count_upper\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of uppercase letters in the string, or an error message if the input is not a string.\", \"type\": [\"integer\", \"string\"]}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": [\"integer\", \"string\"]}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Generates a random string of length `n`.\", \"name\": \"rand_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A random string of length `n`.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The length of the random string.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 585,
    "text": "Example:\n\nInstruction:\nA car traveled 340 miles per tankful of gasoline on the highway and 336 miles per tankful of gasoline in the city. If the car traveled 6 fewer miles per gallon in the city than on the highway, how many miles per gallon did the car travel in the city?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 340, \"arg_1\": 336}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 6}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 336, \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n504.0\n\nNow solve:\nCreate a dictionary from a list of local variables ['a', 'b', 'c']. Then, add a prefix 'var_' to each key in the dictionary and return the new dictionary.\n\nUse this API documentation for reference: [{\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Creates a dictionary from a list of local variables.\", \"name\": \"import_as_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the keys and values are the local variables.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"local_variables\": {\"description\": \"A list of local variables.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"local_variables\"], \"type\": \"object\"}}, {\"description\": \"Generates a regular expression pattern that matches a string with exactly 20 characters,\\nwhere the first 10 are digits and the last 10 are alphabets.\", \"name\": \"generate_regex_pattern\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A compiled regular expression pattern.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"The input string. This is not used in the function.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Converts a number of seconds to a string representing the equivalent number of days, hours, minutes, and seconds.\", \"name\": \"time_format_convert_d2h\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"seconds\": {\"description\": \"The number of seconds to convert.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"seconds\"], \"type\": \"object\"}}, {\"description\": \"Computes the dimension of an image given a list of pixel coordinates and the origin pixel location.\", \"name\": \"compute_image_dimension\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple representing the dimension of the image.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"origin\": {\"description\": \"The origin pixel location, represented as a tuple of two integers.\", \"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"pixel_coordinates\": {\"description\": \"A list of pixel coordinates, where each coordinate is a tuple of two integers.\", \"items\": {\"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"pixel_coordinates\", \"origin\"], \"type\": \"object\"}}, {\"description\": \"Calculates the logarithm of a tensor.\", \"name\": \"tensor_log\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The input tensor.\", \"type\": \"object\"}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Creates a shallow copy of a list of lists while sharing the same sublists in memory.\", \"name\": \"copy_list_shallow\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A shallow copy of the input list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"nested_list\": {\"description\": \"A list of lists of integers.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"nested_list\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Converts a list of file paths to a list of basenames (i.e., the file name without the directory path),\\nwhich are extracted from the corresponding file paths. The function also removes any leading or trailing\\nspaces from the basenames.\", \"name\": \"convert_paths_to_basenames\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of basenames.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"file_paths\": {\"description\": \"A list of file paths.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"file_paths\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Adds a prefix to each key in the input dictionary and returns a new dictionary.\", \"name\": \"prefix_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"d\": {\"additionalProperties\": {}, \"description\": \"The input dictionary.\", \"type\": \"object\"}, \"prefix\": {\"description\": \"The prefix to be added to each key in the input dictionary.\", \"type\": \"string\"}}, \"required\": [\"d\", \"prefix\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Returns all nodes connected to the given node in the graph.\", \"name\": \"get_connected_nodes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of nodes connected to the start_node.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"graph\": {\"additionalProperties\": {\"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"description\": \"A dictionary representing the graph. Each key is a node, and the value is a list of nodes connected to that node.\", \"type\": \"object\"}, \"start_node\": {\"description\": \"The node to start the search from.\", \"type\": \"string\"}}, \"required\": [\"graph\", \"start_node\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 586,
    "text": "Example:\n\nInstruction:\nI have a list of strings [\"abc\", \"def\", \"ghi\"]. I want to generate a list of cyclic shifts for each string, then check if the string \"abc\" is a prefix of any of the cyclic shifts.\n\nUse this API documentation for reference: [{\"description\": \"Converts a list of ascii codes to the corresponding text.\", \"name\": \"ascii_to_text\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The corresponding text.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"ascii_codes\": {\"description\": \"A list of ascii codes.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"ascii_codes\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Packs a 32-bit unsigned integer into a little-endian byte array.\", \"name\": \"pack_int_to_little_endian\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string of the packed bytes in hexadecimal format.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"num\": {\"description\": \"The integer to pack. Must be a 32-bit unsigned integer in hexadecimal format with leading zeroes.\", \"type\": \"integer\"}}, \"required\": [\"num\"], \"type\": \"object\"}}, {\"description\": \"Gets the names and ages from a list of lines in the format `Name, Age`.\", \"name\": \"get_names_and_ages\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples `(name, age)` where `name` is the string name in the line and `age` is the integer age in the line.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lines\": {\"description\": \"A list of lines in the format `Name, Age`.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"lines\"], \"type\": \"object\"}}, {\"description\": \"Calculates the proper motion of a star given its coordinates in different epochs.\", \"name\": \"compute_pm\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing the proper motion in the x and y directions.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"x1\": {\"description\": \"The x-coordinate of the star in the first epoch.\", \"type\": \"number\"}, \"x2\": {\"description\": \"The x-coordinate of the star in the second epoch.\", \"type\": \"number\"}, \"y1\": {\"description\": \"The y-coordinate of the star in the first epoch.\", \"type\": \"number\"}, \"y2\": {\"description\": \"The y-coordinate of the star in the second epoch.\", \"type\": \"number\"}}, \"required\": [\"x1\", \"y1\", \"x2\", \"y2\"], \"type\": \"object\"}}, {\"description\": \"Determines if the input string is a prefix of any of the strings in the list.\", \"name\": \"prefix_checker\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the input string is a prefix of any of the strings in the list, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string to check.\", \"type\": \"string\"}, \"string_list\": {\"description\": \"The list of strings to check against.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"input_string\", \"string_list\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Converts an XML file to a JSON object.\", \"name\": \"convert_xml_to_json\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of dictionaries, where each dictionary contains the field values of an `element` tag.\\n    If the input XML file is empty, the function returns an empty list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"xml_path\": {\"description\": \"The path to the input XML file.\", \"type\": \"string\"}}, \"required\": [\"xml_path\"], \"type\": \"object\"}}, {\"description\": \"Evaluates an arithmetic expression and returns the result as a string, rounded to 3 decimal places.\", \"name\": \"evaluate_arithmetic\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"expression\": {\"description\": \"A string representing an arithmetic operation.\", \"type\": \"string\"}}, \"required\": [\"expression\"], \"type\": \"object\"}}, {\"description\": \"Generates a list of cyclic shifts of a given string.\\n\\nA cyclic shift is an operation that shifts the characters of a string by some amount.\\nFor example, given the string \\\"abc\\\", the cyclic shifts are \\\"abc\\\", \\\"bca\\\", and \\\"cab\\\".\", \"name\": \"cyclic_shifts\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of cyclic shifts of the input string.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Reads a log file and extracts the last line that matches the regular expression pattern `^ERROR: [0-9]+$`.\\nReturns the number after `ERROR: `. If there is no line that matches this pattern, returns `'No error'`.\", \"name\": \"extract_last_error\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The last error number or `'No error'`.\", \"type\": [\"integer\", \"string\"]}}}, \"parameters\": {\"properties\": {\"log_file_path\": {\"description\": \"The path to the log file.\", \"type\": \"string\"}}, \"required\": [\"log_file_path\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Aligns `y` to the left so that it is a multiple of `x`.\", \"name\": \"align_integer\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The smallest integer that is greater than or equal to `y` and divisible by `x`.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The integer to align `y` to.\", \"type\": \"object\"}, \"y\": {\"description\": \"The integer to be aligned.\", \"type\": \"object\"}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Converts arbitrary keyword arguments into a dictionary.\\nIf the keyword argument is a boolean type, it is converted to a string following the format \\\"keyword=True\\\" or \\\"keyword=False\\\".\\nOtherwise, it is directly converted to a string.\", \"name\": \"dict_of_kwargs\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"kwargs\": {\"additionalProperties\": {\"type\": \"boolean\"}, \"description\": \"Arbitrary keyword arguments.\", \"type\": \"object\"}}, \"required\": [\"kwargs\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"cyclic_shifts\", \"arguments\": {\"string\": \"abc\"}, \"label\": \"$var1\"}, {\"name\": \"prefix_checker\", \"arguments\": {\"input_string\": \"abc\", \"string_list\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\nTrue\n\nNow solve:\nIf the sample interest on a sum of money 10% per annum for 2 years is $1200, find the compound interest on the same sum for the same period at the same rate?\n\nUse this API documentation for reference: [{\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 587,
    "text": "Example:\n\nInstruction:\nA is two years older than B who is twice as old as C.If the total ages of A,B and c be 27 . what is the age of B?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 27, \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}]\n\nGold Answer:\n10.0\n\nNow solve:\nThe pilot of a small aircraft with a 40-gallon fuel tank wants to fly to Cleveland, which is 480 miles away. The pilot recognizes that the current engine, which can fly only 8 miles per gallon, will not get him there. By how many miles per gallon must the aircraft\u2019s fuel efficiency be improved to make the flight to Cleveland possible?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 588,
    "text": "Example:\n\nInstruction:\nAn inspector rejects 15% of the meters as defective. How many will he examine to reject 15?\n\nUse this API documentation for reference: [{\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 15, \"arg_1\": 100}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 15}}]\n\nGold Answer:\n100.0\n\nNow solve:\nAfter decreasing 24% in the price of an article costs Rs.1140. Find the actual cost of an article?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 589,
    "text": "Example:\n\nInstruction:\nA group of n students can be divided into equal groups of 4 with 1 student left over or equal groups of 7 with 3 students left over. What is the sum of the two smallest possible values of n?\n\nUse this API documentation for reference: [{\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 7, \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 3}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 3}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 7, \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 3}}, {\"name\": \"add\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_5.result$\"}}]\n\nGold Answer:\n62.0\n\nNow solve:\nOf the total amount that Jill spent on a shopping trip, excluding taxes, she spent 25 percent on clothing, 25 percent on food, and 50 percent on other items. If Jill paid a 10 percent tax on the clothing, no tax on the food, and an 2 percent tax on all other items, then the total tax that she paid was what percent of the total amount that she spent, excluding taxes?\n\nUse this API documentation for reference: [{\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 590,
    "text": "Example:\n\nInstruction:\nA shopkeeper sold an book offering a discount of 5% and earned a profit of 33%. What would have been the percentage of profit earned if no discount was offered?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 33}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 5}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 100, \"arg_1\": \"$var_3.result$\"}}]\n\nGold Answer:\n140.0\n\nNow solve:\nIn an election between two candidates, one got 55% of the total valid votes, 20% of the votes were invalid. If the total number of votes was 6500, the number of valid votes that the other candidate got, was:\n\nUse this API documentation for reference: [{\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 591,
    "text": "Example:\n\nInstruction:\nA box contains 14 pairs of shoes (28shoes in total). If two shoes are selected at random, what it is the probability that they are matching shoes?\n\nUse this API documentation for reference: [{\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 28, \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_1.result$\"}}]\n\nGold Answer:\n0.037037037037037035\n\nNow solve:\nIf an integer n is to be chosen at random from the integers 1 to 96, inclusive, what is the probability that n(n + 1)(n + 2) will be divisible by 8?\n\nUse this API documentation for reference: [{\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 592,
    "text": "Example:\n\nInstruction:\nA pupil's marks were wrongly entered as 73 instead of 40. Due to the average marks for the class got increased by half. The number of pupils in the class is?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 73, \"arg_1\": 40}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}]\n\nGold Answer:\n66.0\n\nNow solve:\nDan can do a job alone in 15 hours. Annie, working alone, can do the same job in just 10 hours. If Dan works alone for 12 hours and then stops, how many hours will it take Annie, working alone, to complete the job?\n\nUse this API documentation for reference: [{\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 593,
    "text": "Example:\n\nInstruction:\nGenerate a random captcha, then replace the prefix of the captcha string with 'new_prefix'.\n\nUse this API documentation for reference: [{\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Converts a file to a list of strings where each string is a line from the file.\", \"name\": \"convert_file_to_string_array\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings where each string is a line from the file.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the file.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Filters a list of numbers to only include those within a specified range.\", \"name\": \"filter_between\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"threshold\": {\"description\": \"The lower bound of the range.\", \"type\": \"number\"}, \"upper_bound\": {\"description\": \"The upper bound of the range.\", \"type\": \"number\"}}, \"required\": [\"data\", \"threshold\", \"upper_bound\"], \"type\": \"object\"}}, {\"description\": \"Checks if a song is in a list of songs.\", \"name\": \"song_in_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the song is in the list, False otherwise.\\n    If the song name is not provided, the function returns True if the list is empty and False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"song\": {\"description\": \"The name of the song to check.\", \"type\": \"string\"}, \"songs\": {\"description\": \"The list of songs to check against.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"song\"], \"type\": \"object\"}}, {\"description\": \"Mimics the behavior of the original bit_manip function using bitwise operations.\", \"name\": \"bit_manip_mimic\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The result of the bitwise AND operation with the expression `2**8 - 1` to mask the most significant 8 bits of the input `x`.\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The input value.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Generate a random captcha consisting of 4 letters, each of which is randomly chosen from the English alphabet.\", \"name\": \"generate_captcha\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A 4-character string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Calculates the term frequencies in a given text.\", \"name\": \"get_term_freq_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary with the words as keys and their respective frequencies as values.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input text.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Merges the attributes of the character_options with the built-in Fallout 76 character attributes.\", \"name\": \"merge_chars_with_options\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of merged character attributes.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"character_options\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"A dictionary of character attributes to merge with the base attributes.\", \"type\": \"object\"}}, \"required\": [\"character_options\"], \"type\": \"object\"}}, {\"description\": \"Calculates the notation for the joint distribution of a list of random variables.\", \"name\": \"random_variables_notation\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string representing the notation for the joint distribution of the input random variables.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"random_variables\": {\"description\": \"A list of strings representing the random variables.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"random_variables\"], \"type\": \"object\"}}, {\"description\": \"Replaces the old prefix in a string with a new prefix.\", \"name\": \"replace_prefix\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The string with the old prefix replaced with the new prefix.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"new_prefix\": {\"description\": \"The new prefix to replace the old prefix with.\", \"nullable\": true, \"type\": \"string\"}, \"old_prefix\": {\"description\": \"The prefix to replace.\", \"nullable\": true, \"type\": \"string\"}, \"string\": {\"description\": \"The string to replace the prefix in.\", \"type\": \"string\"}}, \"required\": [\"string\", \"old_prefix\", \"new_prefix\"], \"type\": \"object\"}}, {\"description\": \"Removes the final extension from a file path.\", \"name\": \"remove_final_extension\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The file path with the final extension removed.\", \"type\": [\"object\", \"string\"]}}}, \"parameters\": {\"properties\": {\"path\": {\"description\": \"The file path to remove the extension from.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"path\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the total number of seconds in a given number of hours, minutes, and seconds.\", \"name\": \"calculate_total_seconds\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The total number of seconds.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"hours\": {\"description\": \"The number of hours.\", \"type\": [\"integer\", \"number\"]}, \"minutes\": {\"description\": \"The number of minutes.\", \"type\": [\"integer\", \"number\"]}, \"seconds\": {\"description\": \"The number of seconds.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"hours\", \"minutes\", \"seconds\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Determines the orientation of a polygon.\", \"name\": \"polygon_orientation\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"1 if the polygon is clockwise, -1 if the polygon is counterclockwise, and 0 if the polygon is degenerate.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"polygon\": {\"description\": \"A list of tuples representing the vertices of the polygon. Each tuple contains the x and y coordinates of a vertex.\", \"items\": {\"prefixItems\": [{\"type\": \"number\"}, {\"type\": \"number\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"polygon\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"generate_captcha\", \"arguments\": {}, \"label\": \"$var1\"}, {\"name\": \"replace_prefix\", \"arguments\": {\"string\": \"$var1.output_0$\", \"old_prefix\": \"\", \"new_prefix\": \"new_prefix\"}, \"label\": \"$var2\"}]\n\nGold Answer:\nOhbV\n\nNow solve:\nJohn makes $60 a week from his job. He earns a raise and now makes $80 a week. What is the % increase?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 594,
    "text": "Example:\n\nInstruction:\nA no. when divided by the sum of 555 and 445 gives 2times their difference as quotient & 10 as remainder. Find the no. is?\n\nUse this API documentation for reference: [{\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 555, \"arg_1\": 445}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 555, \"arg_1\": 445}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 10}}]\n\nGold Answer:\n220010.0\n\nNow solve:\nSum of 19 odd numbers is?\n\nUse this API documentation for reference: [{\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 595,
    "text": "Example:\n\nInstruction:\nOne pump drains one-half of a pond in 7 hours, and then a second pump starts draining the pond. The two pumps working together finish emptying the pond in one-half hour. How long would it take the second pump to drain the pond if it had to do the job alone?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 7, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_3.result$\"}}]\n\nGold Answer:\n1.1\n\nNow solve:\nBarbata invests $2400 in the National Bank at 5%. How much additional money must she invest at 8% so that the total annual income will be equal to 6% of her entire investment?\n\nUse this API documentation for reference: [{\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 596,
    "text": "Example:\n\nInstruction:\nGiven a list of lists [[1, 2, 3], [4, 5, 6], [7, 8, 9]], select the first and last elements of each sub-list and then sort the elements in each list within the new list.\n\nUse this API documentation for reference: [{\"description\": \"Performs integer division of two numbers.\", \"name\": \"integer_div\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The quotient of the integer division.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"dividend\": {\"description\": \"The number to be divided.\", \"type\": \"object\"}, \"divisor\": {\"description\": \"The number to divide by.\", \"type\": \"object\"}}, \"required\": [\"dividend\", \"divisor\"], \"type\": \"object\"}}, {\"description\": \"Sorts the elements in each list within a list of lists and returns a new list.\", \"name\": \"sort_and_add\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list containing the sorted lists.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst_of_lst\": {\"description\": \"A list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"lst_of_lst\"], \"type\": \"object\"}}, {\"description\": \"Converts a string of lowercase English letters to a string of ASCII values.\", \"name\": \"convert_string_ascii\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string of ASCII values separated by hyphens.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"A string of lowercase English letters.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Converts a list of strings into URLs.\\n\\nEach string is assumed to be a file name with an extension. The function\\nconverts each string into a URL with the format\\n'https://example.com/files/{file_type}/{file_name}.{file_type}'.\", \"name\": \"convert_to_urls\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of URLs.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string_list\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"string_list\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Validates a passport ID in the form of a string that is 9 characters long, starts with a letter, and contains only letters and digits.\", \"name\": \"validate_passport_id\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the passport ID is valid, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"passport_id\": {\"description\": \"The passport ID to validate.\", \"type\": \"string\"}}, \"required\": [\"passport_id\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Computes the SHA256 hash of a file at a given path by concatenating its contents with the string representation of the provided metadata dictionary.\\nThe function encodes the file contents and metadata as UTF-8 strings before hashing.\", \"name\": \"hash_metadata\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The hexadecimal representation of the SHA256 hash.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the file.\", \"type\": \"string\"}, \"metadata\": {\"description\": \"The metadata dictionary.\", \"type\": \"object\"}}, \"required\": [\"file_path\", \"metadata\"], \"type\": \"object\"}}, {\"description\": \"Wraps a string in a print() call based on the number of newline characters.\", \"name\": \"wrap_print\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input string wrapped in a print() call, indented if necessary.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string to be wrapped in a print() call.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of all pairs of key-value pairs in the dictionary that match in both key and value, ignoring case.\", \"name\": \"case_insensitive_key_value_pairs\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"d\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"The input dictionary.\", \"type\": \"object\"}}, \"required\": [\"d\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Selects the first and last elements of each sub-list in a list of lists.\", \"name\": \"select_first_and_last\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of lists containing just the first and last elements of each sub-list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"rectangular_data\": {\"description\": \"A list of lists representing rectangular data.\", \"items\": {\"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"rectangular_data\"], \"type\": \"object\"}}, {\"description\": \"Creates a new nested dictionary structure based on the input list.\\n\\nThe outer dictionary should have keys that are the values of the \\\"last\\\" key in each input dictionary,\\nwith the corresponding value being a list of dictionaries. The list should contain all the input\\ndictionaries that have the same value for the \\\"last\\\" key.\", \"name\": \"create_nested_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A nested dictionary structure.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"A list of dictionaries. Each dictionary should have a \\\"last\\\" key.\", \"items\": {\"additionalProperties\": {}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"input_list\"], \"type\": \"object\"}}, {\"description\": \"Parses a string of comma-delimited names, returns a list of formatted names, and converts the list into a string of comma-separated names.\", \"name\": \"parse_names\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string of comma-separated names.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"name_string\": {\"description\": \"A string of comma-delimited names.\", \"type\": \"string\"}}, \"required\": [\"name_string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Computes the sum of all digits in a given integer number.\", \"name\": \"get_digit_sum\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The sum of all digits in the input number. If the input number is 0,\\n    it returns a string \\\"Input is 0, no digit to sum up\\\".\", \"type\": [\"integer\", \"string\"]}}}, \"parameters\": {\"properties\": {\"num\": {\"description\": \"The input number.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"num\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"select_first_and_last\", \"arguments\": {\"rectangular_data\": [[1, 2, 3], [4, 5, 6], [7, 8, 9]]}, \"label\": \"$var1\"}, {\"name\": \"sort_and_add\", \"arguments\": {\"lst_of_lst\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n[[1, 3], [4, 6], [7, 9]]\n\nNow solve:\nIf the given two numbers are respectively 7% and 28% of a third number, then what percentage is the first of the second ?\n\nUse this API documentation for reference: [{\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 597,
    "text": "Example:\n\nInstruction:\nRepeat the list [1, 2, 3] 3 times, then calculate the sum of all elements in the resulting list.\n\nUse this API documentation for reference: [{\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Removes the first `n` elements from a list and returns a new list.\", \"name\": \"remove_first_n\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The input list.\", \"type\": \"array\"}, \"n\": {\"description\": \"The number of elements to remove from the beginning of the list.\", \"type\": \"integer\"}}, \"required\": [\"lst\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Creates a dictionary where each key is a node identifier and each value is a list of nodes connected to the key node.\\nEach edge tuple is converted into a dictionary object with key-value pairs for the source and destination node identifiers,\\nalong with any other associated edge properties.\", \"name\": \"create_edge_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"edge_list\": {\"description\": \"A list of triplets representing edge connections.\", \"items\": {\"prefixItems\": [{}, {}, {}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"edge_list\"], \"type\": \"object\"}}, {\"description\": \"Merges two dictionaries `actual` and `expected`, and calculates the differences between the actual and expected values.\", \"name\": \"merge_and_calculate_difference\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary with keys as timestamps and values as the differences between the actual and expected values.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"actual\": {\"additionalProperties\": {\"type\": \"number\"}, \"description\": \"A dictionary of actual time and date measurement values.\", \"type\": \"object\"}, \"expected\": {\"additionalProperties\": {\"type\": \"number\"}, \"description\": \"A dictionary of expected values.\", \"type\": \"object\"}}, \"required\": [\"actual\", \"expected\"], \"type\": \"object\"}}, {\"description\": \"Returns a list containing the elements of `lst` repeated `n` times.\", \"name\": \"repeat_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The list to repeat.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"n\": {\"description\": \"The number of times to repeat the list.\", \"type\": \"integer\"}}, \"required\": [\"lst\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Checks if a given value is not a string or bytes object.\", \"name\": \"is_not_str_or_bytes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the value is not a string or bytes object, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"value\": {\"description\": \"The value to check.\"}}, \"required\": [\"value\"], \"type\": \"object\"}}, {\"description\": \"Builds a valid URL for an image given a base URL, an image ID, and an optional description.\", \"name\": \"build_image_url\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"base_url\": {\"description\": \"The base URL for all images.\", \"type\": \"string\"}, \"description\": {\"description\": \"An optional description of the image.\", \"nullable\": true, \"type\": \"string\"}, \"image_id\": {\"description\": \"The ID of the image.\", \"type\": \"string\"}}, \"required\": [\"base_url\", \"image_id\"], \"type\": \"object\"}}, {\"description\": \"Reverses the keys and values of a dictionary.\", \"name\": \"reverse_dict_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new dictionary with the keys and values reversed.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"d\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"The dictionary to reverse.\", \"type\": \"object\"}}, \"required\": [\"d\"], \"type\": \"object\"}}, {\"description\": \"Transforms a dictionary of word counts into a list of pairs.\\n\\nEach pair represents a unique word and its frequency.\", \"name\": \"word_count_to_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples. Each tuple contains a word and its frequency.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"word_count_dict\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"A dictionary where keys are words and values are their frequencies.\", \"type\": \"object\"}}, \"required\": [\"word_count_dict\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of all the elements in a given list and returns the result.\", \"name\": \"add_all_elements\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"list\": {\"description\": \"The list of elements to be added.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"list\"], \"type\": \"object\"}}, {\"description\": \"Calculates the average age of all people whose status is \\\"Active\\\".\", \"name\": \"average_age_of_active_people\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The average age of all people whose status is \\\"Active\\\".\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"people\": {\"description\": \"A list of dictionaries representing different JSON objects. Each dictionary has `id`, `name`, `age`, `status` keys.\", \"items\": {\"additionalProperties\": {\"type\": \"string\"}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"people\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"repeat_list\", \"arguments\": {\"lst\": [1, 2, 3], \"n\": 3}, \"label\": \"$var1\"}, {\"name\": \"add_all_elements\", \"arguments\": {\"list\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n18\n\nNow solve:\nI want to calculate the square root of the sum of the numbers in the list [1, 2, 3, 4, 5].\n\nUse this API documentation for reference: [{\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Converts a binary string to a decimal number.\", \"name\": \"bits_to_num\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"A string representing a binary number.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Replaces all characters in a string with their ASCII value followed by a space.\", \"name\": \"replace_with_ascii\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string where all characters are replaced by their ASCII value followed by a space.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Queries the number of rows in the table `mytable` and returns the result.\", \"name\": \"get_table_row_count\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"An integer indicating the number of rows in the table.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Returns a dictionary containing the user's id, username, email, and a string version of the user's is_active attribute.\", \"name\": \"get_user_data\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"user\": {\"description\": \"The User object.\", \"type\": \"object\"}}, \"required\": [\"user\"], \"type\": \"object\"}}, {\"description\": \"Returns the top n key-value pairs from a dictionary in descending order of values.\", \"name\": \"get_top_n_pairs_from_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"d\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"The dictionary to extract the pairs from.\", \"type\": \"object\"}, \"n\": {\"description\": \"The number of top pairs to return.\", \"type\": \"integer\"}}, \"required\": [\"d\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Creates a list of URLs by concatenating the strings to the base URL.\", \"name\": \"create_urls\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of URLs created by concatenating the strings to the base URL.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"base_url\": {\"description\": \"The base URL to which the strings will be concatenated.\", \"type\": \"string\"}, \"strings\": {\"description\": \"A list of strings to be concatenated to the base URL.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"strings\", \"base_url\"], \"type\": \"object\"}}, {\"description\": \"Returns the corresponding image class (e.g., \\\"cat\\\" or \\\"dog\\\") from a file path.\", \"name\": \"get_image_class_from_path\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The image class if the file name ends with \\\".jpg\\\" and contains \\\"cat.\\\" or \\\"dog.\\\",\\n    otherwise None.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The file path of the image.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of only the numbers within the list that are of type int or float.\", \"name\": \"validate_and_sum\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of numbers that can be of type int, float, or any other type.\", \"items\": {\"type\": [\"integer\", \"number\", \"string\"]}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Calculates the square root of a given value.\", \"name\": \"sqrt\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"value\": {\"description\": \"The value to calculate the square root of.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"value\"], \"type\": \"object\"}}, {\"description\": \"Extracts a certain field from each dictionary in a list of dictionaries.\", \"name\": \"extract_from_list_of_dicts\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the extracted values.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"field_name\": {\"description\": \"The name of the field to extract.\", \"type\": \"string\"}, \"input\": {\"description\": \"A list of dictionaries, each dictionary containing the required field, or a list of dictionaries, each dictionary containing a list of the required field.\", \"items\": {\"type\": [\"array\", \"object\"]}, \"type\": \"array\"}}, \"required\": [\"input\", \"field_name\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of tuples with each tuple containing the element at index `i` and the next greatest element in `nums`.\\nIf no such next greatest element exists, the second element should be -1.\", \"name\": \"next_greatest\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The length of the input list.\", \"type\": \"integer\"}, \"nums\": {\"description\": \"The input list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"n\", \"nums\"], \"type\": \"object\"}}, {\"description\": \"Joins two file paths, a and b, into a single file path.\", \"name\": \"join_file_paths\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The joined file path.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first file path.\", \"type\": \"string\"}, \"b\": {\"description\": \"The second file path.\", \"type\": \"string\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 598,
    "text": "Example:\n\nInstruction:\nHalf a number plus 7 is 11.What is the number?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 11, \"arg_1\": 7}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}]\n\nGold Answer:\n8.0\n\nNow solve:\nThe General Hospital is comprised of, 3/5 Pediatricians, 1/4 Surgeons, and the rest are GP doctors. If 1/4 of the Surgeons are Heart Surgeons, and the hospital doubles the number of GP doctors, what proportion of the hospital are now Heart Surgeons?\n\nUse this API documentation for reference: [{\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 599,
    "text": "Example:\n\nInstruction:\nA person spends 40% of his salary on food, 25% on house rent, 15% on entertainment and 10% on conveyance. If his savings at the end of the month is Rs. 1200, then his salary per month in rupees is:\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 1200, \"arg_1\": 100}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 10}}]\n\nGold Answer:\n12000.0\n\nNow solve:\nRohan spends 40% of his salary on food, 20% on house rent, 10% on entertainment and 10% on conveyance. If his savings at the end of a month are Rs. 500. then his monthly salary is\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 600,
    "text": "Example:\n\nInstruction:\ns is a positive integer and multiple of 2; p = 4^s, what is the remainder when p is divided by 10?\n\nUse this API documentation for reference: [{\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"power\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 2}}, {\"name\": \"reminder\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 10}}]\n\nGold Answer:\n6.0\n\nNow solve:\nIf 45% of z is 60% of y and y is 75% of x, what percent of x is z?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 601,
    "text": "Example:\n\nInstruction:\nthere are 3 prizes to be distributed among 10 students . if no students gets more than one prize , then this can be done in ?\n\nUse this API documentation for reference: [{\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 10, \"arg_1\": 3}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 10, \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 10}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_3.result$\"}}]\n\nGold Answer:\n120.0\n\nNow solve:\nBecause he\u2019s taxed by his home planet, Mork pays a tax rate of 40% on his income, while Mindy pays a rate of only 30% on hers. If Mindy earned 5 times as much as Mork did, what was their combined tax rate?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 602,
    "text": "Example:\n\nInstruction:\nIt takes 10 days for digging a trench of 100 m long, 50 m broad and 10 m deep. What length of trench,\n25 m broad and 15 m deep can be dug in 30 days ?\n\nUse this API documentation for reference: [{\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 30, \"arg_1\": 50}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 10}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 10, \"arg_1\": 25}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 15, \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_5.result$\"}}]\n\nGold Answer:\n400.0\n\nNow solve:\nThe calendar of the year 2040 can be used again in the year?\n\nUse this API documentation for reference: [{\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 603,
    "text": "Example:\n\nInstruction:\nI have a string \"Hello, World!\" and I want to replace all occurrences of \"World\" with \"Universe\". After that, I want to filter out punctuation from the resulting string.\n\nUse this API documentation for reference: [{\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Checks if there are two integers in the list whose product is negative.\", \"name\": \"has_pair_with_negative_product\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A list of unique integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}, {\"description\": \"Determines if a value is valid.\", \"name\": \"is_valid\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the value is greater than or equal to 0, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"value\": {\"description\": \"The value to check.\"}}, \"required\": [\"value\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Concatenate two lists of points, where each point is represented by a list of two numeric values.\\nThis function checks if each point is valid and ignores invalid points.\", \"name\": \"concatenate_points\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"points1\": {\"description\": \"The first list of points.\", \"items\": {\"items\": {\"type\": [\"integer\", \"number\"]}, \"type\": \"array\"}, \"type\": \"array\"}, \"points2\": {\"description\": \"The second list of points.\", \"items\": {\"items\": {\"type\": [\"integer\", \"number\"]}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"points1\", \"points2\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Converts a string into a simplified slug.\\n\\nThe slug is lowercase and contains only alphanumeric characters and hyphens.\\nRemoves any leading or trailing whitespace from the input string and replaces\\nany sequences of whitespace with a single hyphen. If the resulting slug is\\nempty, returns 'slug-not-provided'.\", \"name\": \"simplify_slug\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The simplified slug.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"slug\": {\"description\": \"The input string to be converted into a slug.\", \"nullable\": true, \"type\": \"string\"}}, \"required\": [\"slug\"], \"type\": \"object\"}}, {\"description\": \"Returns the first part of a string up to a given separator.\", \"name\": \"first_part\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The first part of the string before the separator.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"separator\": {\"description\": \"The separator character.\", \"type\": \"object\"}, \"string\": {\"description\": \"The input string.\", \"type\": \"object\"}}, \"required\": [\"string\", \"separator\"], \"type\": \"object\"}}, {\"description\": \"Determines if the argument is a valid union type.\", \"name\": \"is_union_type\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the argument is a valid union type, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"arg\": {\"description\": \"The argument to check.\", \"type\": [\"array\", \"integer\", \"string\"]}}, \"required\": [\"arg\"], \"type\": \"object\"}}, {\"description\": \"Extends a list of image URLs with a base URL path.\", \"name\": \"extend_image_urls\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list of URLs with the base URL path added.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"base_path\": {\"description\": \"The base URL path to add to the image URLs.\", \"type\": \"string\"}, \"images\": {\"description\": \"A list of image URLs.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"images\", \"base_path\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Filters out punctuation from a string.\", \"name\": \"filter_punctuation\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input string without punctuation.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"object\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Checks if a given object is iterable or not.\", \"name\": \"is_object_iterable\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the object is iterable, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The object to check.\"}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Extracts the hostnames from a list of URLs.\", \"name\": \"extract_hostnames_from_urls\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples, where each tuple contains the original URL and the extracted hostname.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"urls\": {\"description\": \"A list of URLs.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"urls\"], \"type\": \"object\"}}, {\"description\": \"Replaces all occurrences of the substring `old` with `new` in the string `s`.\", \"name\": \"replace_all_recursive\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The string `s` with all occurrences of `old` replaced with `new`.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"new\": {\"description\": \"The substring to replace `old` with.\", \"type\": \"string\"}, \"old\": {\"description\": \"The substring to be replaced.\", \"type\": \"string\"}, \"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\", \"old\", \"new\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Reads a CSV file containing a table of products and their prices, and returns a dictionary that maps product names to their prices.\", \"name\": \"read_product_prices\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary containing the product names as keys and their prices as values.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The name of the CSV file.\", \"type\": \"string\"}}, \"required\": [\"filename\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"replace_all_recursive\", \"arguments\": {\"s\": \"Hello, World!\", \"old\": \"World\", \"new\": \"Universe\"}, \"label\": \"$var1\"}, {\"name\": \"filter_punctuation\", \"arguments\": {\"s\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\nHello Universe\n\nNow solve:\nA certain quantity is measured on two different scales, the T-scale and the S-scale, that are related linearly. Measurements on the T-scale of 6 and 24 correspond to measurements on the S-scale of 30 and 60, respectively. What measurement on the T-scale corresponds to a measurement of 100 on the S-scale?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 604,
    "text": "Example:\n\nInstruction:\nI have a filter argument dictionary {'name': 'John', 'age': '30'}. Please generate a filter string for a database query. Then, remove the longer suffix 'John' from the filter string.\n\nUse this API documentation for reference: [{\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Generates a policy from a single action.\", \"name\": \"generate_policy\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary with the action name as the key and the action value as the value.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"action\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary with a \\\"name\\\" key and a \\\"value\\\" key.\", \"type\": \"object\"}}, \"required\": [\"action\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Generates a filter string for a database query based on the provided filter arguments.\", \"name\": \"generate_filter_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A filter string that can be used in a SQL WHERE clause.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"filter_args\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary containing the filter arguments.\", \"type\": \"object\"}}, \"required\": [\"filter_args\"], \"type\": \"object\"}}, {\"description\": \"Generates a boolean mask that corresponds to the sequences' length.\", \"name\": \"gen_mask\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A pytorch tensor with the same shape as the input list.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sequences\": {\"description\": \"A list of sequences, each with a different length.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"sequences\"], \"type\": \"object\"}}, {\"description\": \"Removes the longest possible suffix from a given string that is equal to the given suffix.\\nIf the suffix is not present, the function returns the original string.\\nReturns a string that is a composition of the following format: f'{string} - {suffix}'.\", \"name\": \"remove_longer_suffix\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}, \"suffix\": {\"description\": \"The input suffix.\", \"type\": \"string\"}}, \"required\": [\"string\", \"suffix\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Replaces a given list of abbreviations with their meanings in a text string.\", \"name\": \"replace_abbreviations\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The modified input string with the abbreviations replaced.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"abbreviations\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary of abbreviations and their meanings.\", \"type\": \"object\"}, \"text\": {\"description\": \"The input string to modify.\", \"type\": \"string\"}}, \"required\": [\"text\", \"abbreviations\"], \"type\": \"object\"}}, {\"description\": \"Converts a string containing currency information into a dictionary.\", \"name\": \"parse_currency_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary with the following fields: `currency`, `amount`, and `type`.\\n    If the input string does not match the expected format, the function returns `None`.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"currency_string\": {\"description\": \"The input string containing currency information.\", \"type\": \"string\"}}, \"required\": [\"currency_string\"], \"type\": \"object\"}}, {\"description\": \"Creates a dictionary with each name as a key and the length of each name as its value.\", \"name\": \"name_lengths\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary with each name as a key and the length of each name as its value.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"names\": {\"description\": \"A list of names.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"names\"], \"type\": \"object\"}}, {\"description\": \"Adds an enumeration to a list of strings.\", \"name\": \"add_enum\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple of the data and a dictionary of index-to-string mappings.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"nullable\": true, \"type\": \"array\"}}, \"required\": [\"data\"], \"type\": \"object\"}}, {\"description\": \"Finds missing elements from the first list that are not present in the second list.\", \"name\": \"find_missing_elements\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of missing elements from the first list that are not present in the second list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"list1\": {\"description\": \"The first list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"list2\": {\"description\": \"The second list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"list1\", \"list2\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of authors for a given book object.\", \"name\": \"get_book_authors\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of authors. If the book has a `primary_author` attribute,\\n    return a list with a single element containing the primary author.\\n    Otherwise, if the book has an `authors` attribute, return a list\\n    of all authors. If neither of these attributes exist, return an\\n    empty list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"book\": {\"description\": \"A dictionary representing a book.\", \"type\": \"object\"}}, \"required\": [\"book\"], \"type\": \"object\"}}, {\"description\": \"Divides a list into n equal-sized chunks.\", \"name\": \"chunk_the_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"l\": {\"description\": \"The list to be divided.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"n\": {\"description\": \"The number of chunks.\", \"type\": \"integer\"}}, \"required\": [\"l\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Returns the first non-empty text from a list of texts or None if there are no valid choices.\", \"name\": \"get_or_fallback\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"texts\": {\"description\": \"A list of text strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"texts\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"generate_filter_string\", \"arguments\": {\"filter_args\": {\"name\": \"John\", \"age\": \"30\"}}, \"label\": \"$var1\"}, {\"name\": \"remove_longer_suffix\", \"arguments\": {\"string\": \"$var1.output_0$\", \"suffix\": \"John\"}, \"label\": \"$var2\"}]\n\nGold Answer:\nname = 'John' AND age = '30' - John\n\nNow solve:\nParse the date string \"15 January 2022\" into a datetime.datetime object, then check if the object contains the attribute \"year\".\n\nUse this API documentation for reference: [{\"description\": \"Returns a list of distinct lines in the original list.\", \"name\": \"distinct_lines\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lines\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"lines\"], \"type\": \"object\"}}, {\"description\": \"Assigns each node from the given list to a cluster using a greedy approach.\\nThe function returns a mapping of cluster IDs to the assigned nodes.\", \"name\": \"assign_nodes_to_clusters\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary that maps each node to its assigned cluster.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"clusters\": {\"description\": \"A list of cluster IDs.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"nodes\": {\"description\": \"A list of nodes to be assigned to clusters.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"nodes\", \"clusters\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Parses a string in the format \\\"day month year\\\" into a datetime.datetime object.\", \"name\": \"parse_sk_date\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A datetime.datetime object representing the input date.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sk_date_str\": {\"description\": \"The input string in the format \\\"day month year\\\".\", \"type\": \"string\"}}, \"required\": [\"sk_date_str\"], \"type\": \"object\"}}, {\"description\": \"Finds the smallest positive integer that is not present in the given list.\", \"name\": \"find_smallest_positive_missing\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The smallest positive integer that is not present in the list.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}, {\"description\": \"Calculates the number of 1-bits in the binary representation of a number using bit manipulation and a for loop.\", \"name\": \"count_ones_bit\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The total count of 1-bits in the binary representation of the number.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"num\": {\"description\": \"The number to count the 1-bits in its binary representation.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"num\"], \"type\": \"object\"}}, {\"description\": \"Calculates the area of a rectangle given the length and width.\", \"name\": \"area_rectangle\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"length\": {\"description\": \"The length of the rectangle.\", \"type\": \"number\"}, \"width\": {\"description\": \"The width of the rectangle.\", \"type\": \"number\"}}, \"required\": [\"length\", \"width\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Finds the topmost cell in the grid that can be accessed without obstacles.\", \"name\": \"find_topmost_cell\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The topmost accessible cell in the grid, or None if no accessible cell is found.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"grid\": {\"description\": \"A 2D grid of characters.\", \"items\": {\"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"grid\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Checks if the first element of a tuple is greater than the second, and swaps them if true.\", \"name\": \"check_and_swap\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple of two integers.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_tuple\": {\"description\": \"A tuple of two integers.\", \"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}}, \"required\": [\"input_tuple\"], \"type\": \"object\"}}, {\"description\": \"Creates a dictionary with the following structure:\\n\\n{\\n  'name': 'my_widget',\\n  'type': 'button',\\n  'description': 'Press this button',\\n  'properties': {\\n    'width': 100,\\n    'height': 50,\\n    'color': 'blue'\\n  }\\n}\", \"name\": \"create_widget\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The updated dictionary.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"widget\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"The dictionary to be updated with the required values.\", \"type\": \"object\"}}, \"required\": [\"widget\"], \"type\": \"object\"}}, {\"description\": \"Converts a decimal number to its 8-bit binary representation.\", \"name\": \"decimal_to_bitstring\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The 8-bit binary representation of the decimal number as a string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"decimal\": {\"description\": \"The decimal number to be converted.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"decimal\"], \"type\": \"object\"}}, {\"description\": \"Composes a full file path by concatenating the directory_path and file_name with a slash character.\", \"name\": \"compose_file_path\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The full file path.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"directory_path\": {\"description\": \"The path to the directory.\", \"type\": \"string\"}, \"file_name\": {\"description\": \"The name of the file.\", \"type\": \"string\"}}, \"required\": [\"directory_path\", \"file_name\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Creates a logger file with the sum of all integers in the input file, and the conversion of the first number on the first and second lines from integer to string.\", \"name\": \"create_logger_file\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"input_file\": {\"description\": \"The input file containing integer data.\", \"type\": \"string\"}}, \"required\": [\"input_file\"], \"type\": \"object\"}}, {\"description\": \"Checks whether an object contains an attribute.\", \"name\": \"check_one_attribute\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the attribute is found, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"attr\": {\"description\": \"The attribute to check for.\", \"type\": \"string\"}, \"obj\": {\"description\": \"The object to check.\"}}, \"required\": [\"obj\", \"attr\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 605,
    "text": "Example:\n\nInstruction:\nI have two numbers, 56 and 98. I want to find their greatest common divisor (GCD). Then, I want to calculate the profit from a business transaction where the expenses are the GCD and the revenue is 1000.\n\nUse this API documentation for reference: [{\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Retrieve status of IT support ticket\", \"name\": \"getSupportTicketStatus\", \"output_parameters\": {\"properties\": {\"status\": {\"description\": \"The status of the support ticket\", \"type\": \"string\"}}, \"type\": \"object\"}, \"parameters\": {\"properties\": {\"ticket_id\": {\"description\": \"The ID of the support ticket for which you want to retrieve the status\", \"type\": \"string\"}}, \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Analyze the sentiment (positive, negative, neutral) of a given text\", \"name\": \"analyze_sentiment\", \"output_parameters\": {\"properties\": {\"sentiment\": {\"description\": \"The sentiment of the text (positive, negative, neutral)\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The text to be analyzed\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Create a new IT support ticket\", \"name\": \"createSupportTicket\", \"output_parameters\": {\"properties\": {\"ticket_id\": {\"description\": \"The unique ID assigned to the support ticket\", \"type\": \"string\"}}, \"type\": \"object\"}, \"parameters\": {\"properties\": {\"contact_email\": {\"description\": \"Your email address for contact\", \"type\": \"string\"}, \"issue_description\": {\"description\": \"Description of the IT issue you are facing\", \"type\": \"string\"}, \"priority\": {\"description\": \"The priority of the support ticket (e.g., high, medium, low)\", \"type\": \"string\"}}, \"type\": \"object\"}}, {\"description\": \"Calculate the greatest common divisor (GCD)\", \"name\": \"calculate_gcd\", \"output_parameters\": {\"properties\": {\"gcd\": {\"description\": \"The greatest common divisor of the two numbers\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"num1\": {\"description\": \"The first number\", \"type\": \"integer\"}, \"num2\": {\"description\": \"The second number\", \"type\": \"integer\"}}, \"required\": [\"num1\", \"num2\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Get the latest news headlines\", \"name\": \"get_news\", \"output_parameters\": {\"properties\": {\"headlines\": {\"description\": \"The array of news headlines\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"category\": {\"description\": \"The category of news to retrieve\", \"type\": \"string\"}}, \"required\": [\"category\"], \"type\": \"object\"}}, {\"description\": \"Hash a piece of data\", \"name\": \"hashData\", \"output_parameters\": {\"properties\": {\"hashed_data\": {\"description\": \"The hashed data\", \"type\": \"string\"}}, \"type\": \"object\"}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"The data to be hashed\", \"type\": \"string\"}, \"hash_algorithm\": {\"description\": \"The hashing algorithm to be used (e.g., MD5, SHA-256)\", \"type\": \"string\"}}, \"type\": \"object\"}}, {\"description\": \"Calculate the profit from a business transaction\", \"name\": \"calculate_profit\", \"output_parameters\": {\"properties\": {\"profit\": {\"description\": \"The calculated profit\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"expenses\": {\"description\": \"Total expenses incurred\", \"type\": \"number\"}, \"revenue\": {\"description\": \"Total revenue from the transaction\", \"type\": \"number\"}}, \"required\": [\"expenses\", \"revenue\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"calculate_gcd\", \"arguments\": {\"num1\": 56, \"num2\": 98}, \"label\": \"$var1\"}, {\"name\": \"calculate_profit\", \"arguments\": {\"expenses\": \"$var1.gcd$\", \"revenue\": 1000}, \"label\": \"$var2\"}]\n\nGold Answer:\n-986\n\nNow solve:\na certain scholarship committee awarded scholarships in the amounts of $ 1250 , $ 2500 and $ 4000 . the committee awarded twice as many $ 2500 scholarships as $ 4000 and it awarded 3 times as many $ 1250 scholarships as $ 2500 scholarships . if the total of $ 75000 was awarded in $ 1250 scholarships , how many $ 4000 scholarships were awarded ?\n\nUse this API documentation for reference: [{\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 606,
    "text": "Example:\n\nInstruction:\nTwo trains of equal length, running with the speeds of 60 and 40 kmph, take 75 seconds to cross each other while they are running in the same direction. What time will they take to cross each other if they are running in opposite directions?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 60, \"arg_1\": 40}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 2778, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 75}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 60, \"arg_1\": 40}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 2778, \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"inverse\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_6.result$\"}}]\n\nGold Answer:\n15.0\n\nNow solve:\nI have two lists of integers, [1, 2, 3] and [4, 5, 6]. I want to merge them, sort them in ascending order, and then process them to get a list of unique integers.\n\nUse this API documentation for reference: [{\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns the subset of `d` corresponding to the indicies in `i`.\", \"name\": \"subset\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"d\": {\"additionalProperties\": {}, \"description\": \"The dictionary to subset.\", \"type\": \"object\"}, \"i\": {\"description\": \"The list of indices to subset by.\", \"items\": {}, \"type\": \"array\"}}, \"required\": [\"d\", \"i\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Emulates the logical AND operation without using the `and` keyword.\", \"name\": \"my_and\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The first operand.\"}, \"y\": {\"description\": \"The second operand.\"}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Checks if a given timezone string exists in the list of known timezones.\", \"name\": \"timezone_exists\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the timezone exists, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"tz_string\": {\"description\": \"The timezone string to check.\", \"type\": \"string\"}}, \"required\": [\"tz_string\"], \"type\": \"object\"}}, {\"description\": \"Merges two lists of numbers and sorts them in ascending order.\", \"name\": \"merge_and_sort_lists\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list containing all the numbers from both input lists, sorted in ascending order.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"list1\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"list2\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"list1\", \"list2\"], \"type\": \"object\"}}, {\"description\": \"Processes a list of integers and returns a list of unique values in a set.\\nIf there is an error during processing (e.g., a non-integer value is encountered),\\nlogs the error and continues processing the rest of the list.\", \"name\": \"process_integers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of unique integers.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers as strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Calculates the mean and standard deviation of an array of numbers.\", \"name\": \"calculate_mean_and_stddev\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing the mean and standard deviation of the array.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"array\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"array\"], \"type\": \"object\"}}, {\"description\": \"Calculates the GCD of two integers using Euclid's algorithm.\", \"name\": \"euclid_gcd\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first integer.\", \"type\": \"integer\"}, \"b\": {\"description\": \"The second integer.\", \"type\": \"integer\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Flattens a list of lists containing mixed types and returns a list of unique string elements.\", \"name\": \"flatten_unique\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of unique string elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"A list of lists containing mixed types (string, int, float, and other types).\", \"items\": {\"type\": [\"array\", \"string\"]}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 607,
    "text": "Example:\n\nInstruction:\nIf x = 1/q and y = (2/q) - 6, then for what value of q, x is equal to y ?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 6}}]\n\nGold Answer:\n0.16666666666666666\n\nNow solve:\n10 men and 15 women together can complete a work in 4 days. It takes 100 days for one man alone to complete the same work. How many days will be required for one woman alone to complete the same work?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 608,
    "text": "Example:\n\nInstruction:\nA can do a piece of work in 4 hours; B and C together can do it in 3 hours, which A and B together can do it in 2 hours. How long will C alone take to do it?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 3}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 4}}, {\"name\": \"subtract\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_5.result$\"}}]\n\nGold Answer:\n12.0\n\nNow solve:\nA manufacturer produces a certain men's athletic shoe in integer sizes from 8 to 17. For this particular shoe, each unit increase in size corresponds to a 1/5-inch increase in the length of the shoe. If the largest size of this shoe is 30% longer than the smallest size, how long, in inches, is the shoe in size 15?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 609,
    "text": "Example:\n\nInstruction:\nTwo trains leave the train station at the same time. One train, on the blue line, heads east- while the other, on the red line, heads west. If the train on the blue line averages 40km/hr and the other train averages 40 km/hr- how long will it take for the trains to be 100 Km apart?\n\nUse this API documentation for reference: [{\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 40}}]\n\nGold Answer:\n1.25\n\nNow solve:\nA number increased by 15% gives 1150. The number is\n\nUse this API documentation for reference: [{\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 610,
    "text": "Example:\n\nInstruction:\nGenerate a list of all possible permutations of 3 numbers. Then, format the list of permutations as a string.\n\nUse this API documentation for reference: [{\"description\": \"Checks if the given file path starts with a specific prefix string.\\n\\nIf the prefix string is not provided, the function returns True if the file is within the current directory (i.e., the file path starts with './').\", \"name\": \"check_file_path_prefix\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the file path starts with the given prefix string or if it is within the current directory, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The file path to check.\", \"type\": \"string\"}, \"prefix\": {\"description\": \"The prefix string to search for.\", \"nullable\": true, \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Gets the value at the specified index in the matrix.\", \"name\": \"get_value\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The value at the specified index in the matrix, or None if the indices are out of range.\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"indices\": {\"description\": \"The indices of the value to retrieve.\", \"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"matrix\": {\"description\": \"The matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": [\"integer\", \"number\"]}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\", \"indices\"], \"type\": \"object\"}}, {\"description\": \"Splits a string by underscores and returns a list of strings.\\n\\nIf the input string does not contain underscores, the function returns a\\nsingle-element list containing the input string.\", \"name\": \"split_string_by_underscore\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The string to split.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Implements a default handler for a mapped trait using a shadow trait.\", \"name\": \"handle_mapped_trait\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dict containing the trait's name and value.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"mapped_trait\": {\"additionalProperties\": {\"type\": \"object\"}, \"description\": \"A dict containing the trait's name and value.\", \"type\": \"object\"}}, \"required\": [\"mapped_trait\"], \"type\": \"object\"}}, {\"description\": \"Formats a list of strings such that they are output in the form:\\n\\n[\\n  'FirstString',\\n  'SecondString',\\n  'ThirdString'\\n]\\n\\nThe function accepts a `text_list` argument and returns the formatted string. If the list is empty, the output is `[]`.\", \"name\": \"output_string_formatted\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text_list\": {\"description\": \"A list of strings to be formatted.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"text_list\"], \"type\": \"object\"}}, {\"description\": \"Returns a string that represents the full path of the file.\", \"name\": \"file_path\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"directories\": {\"description\": \"A list of subdirectories.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"filename\": {\"description\": \"The name of the file.\", \"type\": \"string\"}}, \"required\": [\"filename\", \"directories\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of all indices where the target value appears in the array.\", \"name\": \"indices_of\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"arr\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"target\": {\"description\": \"The target value to search for in the array.\", \"type\": \"integer\"}}, \"required\": [\"arr\", \"target\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Checks if the object is an instance of FileHandler and the filename attribute is not empty.\", \"name\": \"test_file_handler\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the object is an instance of FileHandler and the filename attribute is not empty, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The object to be checked.\"}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Generates a list of all possible permutations of `n` numbers.\", \"name\": \"generate_permutation_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of lists, where each list represents a single permutation.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The number of elements in the permutations.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Constructs a query to search for a user in LDAP given a username.\", \"name\": \"construct_ldap_query\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A query string in the form of a string, with placeholders for the username and other parameters.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"username\": {\"description\": \"The username to search for.\", \"type\": \"string\"}}, \"required\": [\"username\"], \"type\": \"object\"}}, {\"description\": \"Generates a specified number of random floating-point numbers within a specified range.\", \"name\": \"random_floats\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of `n` random floating-point numbers within the specified range.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The lower bound of the random range.\", \"type\": \"number\"}, \"b\": {\"description\": \"The upper bound of the random range.\", \"type\": \"number\"}, \"n\": {\"description\": \"The number of random numbers to generate.\", \"type\": \"integer\"}}, \"required\": [\"n\", \"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the minimum and maximum values of each sublist of 3 consecutive elements in a given list.\", \"name\": \"minimum_maximum_of_sublists\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples containing the minimum and maximum values of each sublist of 3 consecutive elements in the input list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"generate_permutation_list\", \"arguments\": {\"n\": 3}, \"label\": \"$var1\"}, {\"name\": \"output_string_formatted\", \"arguments\": {\"text_list\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n[\n  \"[1, 2, 3]\"\n  \"[1, 3, 2]\"\n  \"[2, 1, 3]\"\n  \"[2, 3, 1]\"\n  \"[3, 1, 2]\"\n  \"[3, 2, 1]\"\n]\n\nNow solve:\nIn a certain school, the ratio of boys to girls is 5 to 13. If there are 160 more girls than boys, how many boys are there?\n\nUse this API documentation for reference: [{\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 611,
    "text": "Example:\n\nInstruction:\nA batsman scores 26 runs and increases his average from 14 to 15. Find the runs to be made if he wants top increasing the average to 19 in the same match ?\n\nUse this API documentation for reference: [{\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 26, \"arg_1\": 15}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 19, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 26, \"arg_1\": 15}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 14, \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_5.result$\"}}]\n\nGold Answer:\n74.0\n\nNow solve:\nA certain characteristic in a large population has a distribution that is symmetric about the mean m. If 66 percent of the distribution lies within one standard deviation d of the mean, what percent of the distribution is less than m + d ?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 612,
    "text": "Example:\n\nInstruction:\nWhat quantity of water should be added to reduce 9 liters of 50% acidic liquid to 30% acidic liquid?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 50, \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 9, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 100}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 30}}, {\"name\": \"subtract\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 9}}]\n\nGold Answer:\n6.0\n\nNow solve:\n7 carpet-weavers can weave 7 carpets in 7 days. At the same rate, how many carpets would be woven by 14 carpet-weavers in 14 days?\n\nUse this API documentation for reference: [{\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 613,
    "text": "Example:\n\nInstruction:\nI have a list of numbers [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]. I want to find the first number that is equal to or greater than 10. Then, I want to calculate the sum of the squares of this number and 5. Finally, I want to round the result to the nearest multiple of 2.\n\nUse this API documentation for reference: [{\"description\": \"Capitalizes a string based on the boolean argument.\", \"name\": \"capitalize_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The capitalized string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"only_first_letter\": {\"description\": \"A boolean indicating whether to capitalize only the first letter or all the letters.\", \"type\": \"boolean\"}, \"string\": {\"description\": \"The string to capitalize.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Removes columns from a given pandas data frame that match a given pattern.\", \"name\": \"remove_columns_by_pattern\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"df\": {\"description\": \"The input data frame.\", \"type\": \"object\"}, \"pattern\": {\"description\": \"The regular expression pattern to match.\", \"type\": \"string\"}}, \"required\": [\"df\", \"pattern\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Extracts names or usernames from a list of log entries.\", \"name\": \"get_names_from_log\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of names or usernames associated with the log entries.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"log\": {\"description\": \"A list of dictionaries representing log entries.\", \"items\": {\"additionalProperties\": {\"type\": \"string\"}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"log\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of the squares of two numbers.\", \"name\": \"find_sum_of_squares\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first number.\", \"type\": [\"integer\", \"number\"]}, \"b\": {\"description\": \"The second number.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of strings representing the individual directories in the given path.\\nThe function handles both forward slash (/) and back slash (\\\\) as directory separators,\\nand returns the correct path strings based on the underlying operating system.\", \"name\": \"get_directories_from_path\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings representing the individual directories in the given path.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"path\": {\"description\": \"The path string to extract directories from.\", \"type\": \"string\"}}, \"required\": [\"path\"], \"type\": \"object\"}}, {\"description\": \"Extracts all tags from a string input and returns a dictionary\\nwhere the keys are the tag names and the values are their frequencies.\", \"name\": \"create_tag_frequency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the keys are the tag names and the values are their frequencies.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Rounds a number to the nearest multiple of another given number.\", \"name\": \"round_to_nearest\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"multiple\": {\"description\": \"The multiple to which the number is to be rounded.\", \"type\": [\"integer\", \"number\"]}, \"num\": {\"description\": \"The number to be rounded.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"num\", \"multiple\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the loss function for a linear regression model using a cumulative sum approach.\", \"name\": \"linear_regression_loss\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The cumulative sum of the residuals squared.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"y_pred\": {\"description\": \"The predicted values.\", \"type\": \"object\"}, \"y_true\": {\"description\": \"The true target values.\", \"type\": \"object\"}}, \"required\": [\"y_true\", \"y_pred\"], \"type\": \"object\"}}, {\"description\": \"Checks if a given list of numbers contains a value equal to or greater than 10.\\nIf a number is found, it returns that number, otherwise it returns 0.\", \"name\": \"check_list_for_value\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Calculates the hash of a given integer `x`.\\n\\nThe hash is calculated by taking the modulo of `x` with 100.\", \"name\": \"Hash\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The hash of `x`.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The integer to calculate the hash of.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a tuple containing a list of even numbers from the input list and a list of their indices.\", \"name\": \"even_numbers_with_indices\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing a list of even numbers and a list of their indices.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Determines whether a given `date` string is a weekend, which is defined as a Saturday or Sunday.\\nThe `date` string is a string of the form \\\"YYYY-MM-DD\\\" in ISO 8601 format.\", \"name\": \"is_weekend\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"date\": {\"description\": \"The date to check.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"date\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"check_list_for_value\", \"arguments\": {\"numbers\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, \"label\": \"$var1\"}, {\"name\": \"find_sum_of_squares\", \"arguments\": {\"a\": \"$var1.output_0$\", \"b\": 5}, \"label\": \"$var2\"}, {\"name\": \"round_to_nearest\", \"arguments\": {\"num\": \"$var2.output_0$\", \"multiple\": 2}, \"label\": \"$var3\"}]\n\nGold Answer:\n124\n\nNow solve:\nA batsman in his 9th inning makes a score of 75 and their by increasing his average by 7. What is his average after the 9th inning?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 614,
    "text": "Example:\n\nInstruction:\nReverse the alphanumeric characters in the string \"Hello, World!\". Then, check if the parentheses in the reversed string are balanced.\n\nUse this API documentation for reference: [{\"description\": \"Returns a string based on the relationship between two values.\", \"name\": \"get_status\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"value1\": {\"description\": \"The first value to compare.\", \"type\": [\"integer\", \"number\"]}, \"value2\": {\"description\": \"The second value to compare.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"value1\", \"value2\"], \"type\": \"object\"}}, {\"description\": \"Calculates the variance of a given array of numbers using vectorization and numerical operations.\", \"name\": \"vectorized_variance\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"A numpy array of numbers.\", \"type\": \"object\"}}, \"required\": [\"data\"], \"type\": \"object\"}}, {\"description\": \"Finds the indices in `list1` that are within one unit of any value in `list2`.\", \"name\": \"find_matching_indices\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of indices in `list1` that are within one unit of any value in `list2`.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"list1\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"list2\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"list1\", \"list2\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Capitalizes each word in a sentence.\", \"name\": \"capitalize_sentence\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The capitalized sentence.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"capitalize_first\": {\"description\": \"Whether to capitalize the first word. Default is True.\", \"type\": \"boolean\"}, \"sentence\": {\"description\": \"The sentence to capitalize.\", \"type\": \"string\"}}, \"required\": [\"sentence\"], \"type\": \"object\"}}, {\"description\": \"Serializes a list of Employee objects into a JSON-formatted string.\", \"name\": \"serialize_employees_to_json\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A JSON-formatted string representing the list of Employee objects.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"employees\": {\"description\": \"A list of Employee objects.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"employees\"], \"type\": \"object\"}}, {\"description\": \"Recursively performs binary search on a sorted array for a given target.\", \"name\": \"recursive_binary_search\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The index of the target in the list if found, otherwise -1.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A sorted list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"target\": {\"description\": \"The target integer to search for.\", \"type\": \"integer\"}}, \"required\": [\"nums\", \"target\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Extracts the decimal value from a string.\", \"name\": \"extract_decimal_from_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The decimal value as a float, or None if the input string does not contain a decimal value.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Reverses the order of alphanumeric characters in a string.\", \"name\": \"reverse_alphanumeric\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new string with all the alphanumeric characters in the original string but in the reverse order.\\n    For any non-alphanumeric character, including spaces and special characters, they are copied to the new\\n    string and left in their original order.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Checks if the parentheses in a string are balanced or not.\", \"name\": \"check_parens\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the parentheses are balanced, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string to check.\", \"type\": \"object\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the probability of a particle decaying in a given time.\", \"name\": \"probability_of_decay\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"half_life\": {\"description\": \"The half-life of the radioactive substance.\", \"type\": [\"integer\", \"number\"]}, \"time\": {\"description\": \"The time elapsed.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"half_life\", \"time\"], \"type\": \"object\"}}, {\"description\": \"Creates a dictionary with the first list as the keys and the second list as the values.\", \"name\": \"make_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"keys\": {\"description\": \"The list of keys.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"values\": {\"description\": \"The list of values.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"keys\", \"values\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Converts a numeric value into the corresponding ASCII digit character.\", \"name\": \"to_ascii_digit\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The corresponding ASCII character for the given number.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"val\": {\"description\": \"The numeric value to convert.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"val\"], \"type\": \"object\"}}, {\"description\": \"Matches the regular expression against the string and returns a list of matches.\\nIf there are no matches, the function returns an empty list.\", \"name\": \"regexp_match\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"regexp\": {\"description\": \"The regular expression to match.\", \"type\": \"string\"}, \"string\": {\"description\": \"The string to match against.\", \"type\": \"string\"}}, \"required\": [\"regexp\", \"string\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"reverse_alphanumeric\", \"arguments\": {\"s\": \"Hello, World!\"}, \"label\": \"$var1\"}, {\"name\": \"check_parens\", \"arguments\": {\"string\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\nTrue\n\nNow solve:\nA fruit-salad mixture consists of apples, peaches, and grapes in the ratio 9:6:5, respectively, by weight. If 40 pounds of the mixture is prepared, the mixture includes how many more pounds of apples than grapes?\n\nUse this API documentation for reference: [{\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 615,
    "text": "Example:\n\nInstruction:\nOne-third less than 25% of 180 is equal to:\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 25, \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 180}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 3}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 25, \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 180}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_5.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_6.result$\"}}]\n\nGold Answer:\n30.0\n\nNow solve:\nA boat having a length 3 m and breadth 3 m is floating on a lake. The boat sinks by 1 cm when a man gets on it. The mass of the man is:\n\nUse this API documentation for reference: [{\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 616,
    "text": "Example:\n\nInstruction:\nLaura took out a charge account at the General Store and agreed to pay 8% simple annual interest. If she charges $35 on her account in January, how much will she owe a year later, assuming she does not make any additional charges or payments?\n\nUse this API documentation for reference: [{\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 8, \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 35}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 35}}]\n\nGold Answer:\n37.8\n\nNow solve:\nSum of the squares of 3 no. is 276 and the sum of their products taken two at a time is 150. Find the sum?\n\nUse this API documentation for reference: [{\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 617,
    "text": "Example:\n\nInstruction:\nTrain A leaves the station traveling at 30 miles per hour. Two hours later train \u0412 leaves the same station traveling in the same direction at 35 miles per hour. How many miles from the station was train A overtaken by train B?\n\nUse this API documentation for reference: [{\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 30, \"arg_1\": 2}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 35, \"arg_1\": 30}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 35}}]\n\nGold Answer:\n420.0\n\nNow solve:\nLiz drove from point A to point B at 40 Km/h. On her way back she drove at 50 Km/h and therefore her way back lasted one hour less. What is the distance (in Km) between A and B?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 618,
    "text": "Example:\n\nInstruction:\nI have two numbers, 10 and 20. I want to extend the first number with the second number, then calculate the value of the extended number within the range [0, 100).\n\nUse this API documentation for reference: [{\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the value of `x` within the range `[0, m)`.\", \"name\": \"mod_range\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"m\": {\"description\": \"The modulus.\", \"type\": [\"integer\", \"number\"]}, \"x\": {\"description\": \"The number to be calculated.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"x\", \"m\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Removes Markdown links from a given Markdown document.\", \"name\": \"remove_markdown_links\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new string with all Markdown links removed.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The Markdown document as a string.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Overload the default `+` operator between two numbers.\", \"name\": \"extend_num\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The extended number.\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"num1\": {\"description\": \"The first number.\", \"type\": [\"integer\", \"number\"]}, \"num2\": {\"description\": \"The second number.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"num1\", \"num2\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of keys that contain the string \\\"hello\\\" as a substring.\", \"name\": \"get_keys_with_hello\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of keys that contain the string \\\"hello\\\" as a substring.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"d\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"The dictionary to search for keys containing \\\"hello\\\".\", \"type\": \"object\"}}, \"required\": [\"d\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of tuples containing the names and values of the attributes of the given object, sorted in ascending order by attribute name.\", \"name\": \"get_sorted_attributes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples, where each tuple is a pair of strings containing the name of an attribute and its value.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The object to extract attributes from.\"}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Reads a file and returns a dictionary of key-value pairs.\", \"name\": \"read_file_as_dictionary\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of key-value pairs.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the file to be read.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Packs a 32-bit unsigned integer into a little-endian byte array.\", \"name\": \"pack_int_to_little_endian\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string of the packed bytes in hexadecimal format.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"num\": {\"description\": \"The integer to pack. Must be a 32-bit unsigned integer in hexadecimal format with leading zeroes.\", \"type\": \"integer\"}}, \"required\": [\"num\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"extend_num\", \"arguments\": {\"num1\": 10, \"num2\": 20}, \"label\": \"$var1\"}, {\"name\": \"mod_range\", \"arguments\": {\"x\": \"$var1.output_0$\", \"m\": 100}, \"label\": \"$var2\"}]\n\nGold Answer:\n30\n\nNow solve:\nMother,her daughter and her grand child weighs 140 kg. daughter and her daughter(child) weighs 60 kg. child is 1/5th of her grand mother. What is the age of the daughter?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 619,
    "text": "Example:\n\nInstruction:\nIn an electric circuit, two resistors with resistances 3ohm and 5 ohm are connected in parallel. In this case, if R is the combined resistance of these two resistors, then the reciprocal of R is equal to the sum of the reciprocals of two resistors. What is the value?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 5}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 5}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n1.875\n\nNow solve:\nIf x and y are both odd prime numbers and x < y, how many distinct positive integer E factors does 2xy have?\n\nUse this API documentation for reference: [{\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 620,
    "text": "Example:\n\nInstruction:\nApproximate the square root of 100 with 2 decimal places, then convert the result to an integer or None if it is not an integer.\n\nUse this API documentation for reference: [{\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Validates the header format of a text file containing a list of floating-point numbers.\", \"name\": \"validate_header\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the header format is valid, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"header\": {\"description\": \"The header string to validate.\", \"type\": \"string\"}}, \"required\": [\"header\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Converts a dictionary with string values to a dictionary with boolean values.\", \"name\": \"convert_dict_values_to_bool\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new dictionary with boolean values.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"case_sensitive\": {\"description\": \"Whether the conversion should be case-sensitive.\", \"type\": \"boolean\"}, \"value\": {\"additionalProperties\": {}, \"description\": \"The dictionary to convert.\", \"type\": \"object\"}}, \"required\": [\"value\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Checks if a list of Python built-in functions contains a given function name.\", \"name\": \"is_built_in\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"built_ins\": {\"description\": \"A list of strings representing Python built-in function names.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"func\": {\"description\": \"A string representing a function name.\", \"type\": \"string\"}}, \"required\": [\"built_ins\", \"func\"], \"type\": \"object\"}}, {\"description\": \"Removes special characters from a given string, preserving the original case of the text.\", \"name\": \"clean_word\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The cleaned string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Converts a 32-bit unsigned integer into its binary representation (a string of 0s and 1s) without using any built-in functions.\", \"name\": \"unsigned_int_to_binary\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The binary representation of the input integer.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The 32-bit unsigned integer to be converted.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Converts a value to an integer or returns None if the value is not an integer or is None.\", \"name\": \"convert_to_int_or_none\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"value\": {\"description\": \"The value to be converted.\", \"nullable\": true, \"type\": [\"integer\", \"number\"]}}, \"required\": [\"value\"], \"type\": \"object\"}}, {\"description\": \"Finds missing elements in a list of integers within a given range.\", \"name\": \"find_missing\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"l\": {\"description\": \"The list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"lower_bound\": {\"description\": \"The lower bound of the range.\", \"type\": \"integer\"}, \"upper_bound\": {\"description\": \"The upper bound of the range.\", \"type\": \"integer\"}}, \"required\": [\"lower_bound\", \"upper_bound\", \"l\"], \"type\": \"object\"}}, {\"description\": \"Approximates the square root of a given positive number using Heron's method.\", \"name\": \"square_root_approx\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"decimal_places\": {\"description\": \"The number of decimal places in the result.\", \"type\": [\"integer\", \"number\"]}, \"number\": {\"description\": \"The number whose square root you want to approximate.\", \"type\": \"number\"}}, \"required\": [\"number\"], \"type\": \"object\"}}, {\"description\": \"Performs a random shuffle on a list using a given random seed.\", \"name\": \"random_shuffle\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"elements\": {\"description\": \"The list of elements to be shuffled.\", \"items\": {}, \"type\": \"array\"}, \"seed\": {\"description\": \"The random seed to be used for shuffling the list.\", \"type\": \"integer\"}}, \"required\": [\"elements\", \"seed\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Transforms a dictionary of key-value pairs into a single string containing all the keys and values separated by commas and colons (no spaces), where the values are formatted as strings if the values are not numbers.\", \"name\": \"transform_dict_to_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The transformed string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"dict\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"The dictionary to transform.\", \"type\": \"object\"}}, \"required\": [\"dict\"], \"type\": \"object\"}}, {\"description\": \"Identifies the first integer that occurs only once in a list of integers.\\nIf there are no such integers, returns `None`.\", \"name\": \"find_first_unique_int\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}, {\"description\": \"Squares the number provided and adds 17.\", \"name\": \"square_plus_17\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The number to be squared.\", \"type\": [\"integer\", \"number\"]}}, \"type\": \"object\"}}, {\"description\": \"Returns a list of all the prime numbers that are in the input list and are also less than 100.\", \"name\": \"find_prime_less_than_100\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of prime numbers that are in the input list and are also less than 100.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"square_root_approx\", \"arguments\": {\"number\": 100, \"decimal_places\": 2}, \"label\": \"$var1\"}, {\"name\": \"convert_to_int_or_none\", \"arguments\": {\"value\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n10\n\nNow solve:\nA solution contains 8 parts of water for every 7 parts of Lemonade syrup. How many parts of the solution should be removed and replaced with water so that the solution will now contain 35% lemonade syrup?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 621,
    "text": "Example:\n\nInstruction:\nA man speaks truth 3 out of 4 times. He throws a die and reports it to be a 6.\nWhat is the probability of it being a 6?\n\nUse this API documentation for reference: [{\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 4}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 6}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 4}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 6}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_5.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 4}}, {\"name\": \"divide\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": 5, \"arg_1\": 6}}, {\"name\": \"multiply\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": \"$var_7.result$\", \"arg_1\": \"$var_8.result$\"}}, {\"name\": \"add\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": \"$var_9.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_10.result$\"}}]\n\nGold Answer:\n0.375\n\nNow solve:\nA man walking at 3/4th of the speed, reaches his office late by 2 hours. What is the usual time?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 622,
    "text": "Example:\n\nInstruction:\nIf 3 girls can do 3 times of a particular work in 3 days, then, 7 girls can do 7 times of that work in\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 3}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 3}}]\n\nGold Answer:\n3.0\n\nNow solve:\nThe smallest number when increased by \" 1 \" is exactly divisible by 2, 8, 24, 36 is:\n\nUse this API documentation for reference: [{\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 623,
    "text": "Example:\n\nInstruction:\nReverse the order of elements in the list [1, 2, 3, 4, 5] using list comprehension, then calculate the number of even numbers in the reversed list.\n\nUse this API documentation for reference: [{\"description\": \"Converts a value to a positive integer.\", \"name\": \"convert_to_positive_integer\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"value\": {\"description\": \"The value to convert.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"value\"], \"type\": \"object\"}}, {\"description\": \"Creates a dictionary with the hash of each string as the key and the string itself as the value.\", \"name\": \"hash_words\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary with the hash of each string as the key and the string itself as the value.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"words\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"words\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Finds the smallest and largest numbers in a given list.\", \"name\": \"find_extremes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A two-element list containing the smallest and largest numbers in the list.\\n    If the list is empty, returns an empty list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Checks if a string starts with a given prefix and returns True or False.\\nIf the prefix is a null string, the function returns True.\", \"name\": \"str_starts_with\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"prefix\": {\"description\": \"The prefix to check for.\", \"nullable\": true, \"type\": \"string\"}, \"string\": {\"description\": \"The string to check.\", \"type\": \"string\"}}, \"required\": [\"string\", \"prefix\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Removes all detected keywords from a list of texts.\", \"name\": \"process_text_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list of texts with all detected keywords removed.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"keywords\": {\"description\": \"A list of keywords.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"texts\": {\"description\": \"A list of texts.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"texts\", \"keywords\"], \"type\": \"object\"}}, {\"description\": \"Detects if a string contains the letters 'a', 'b', and 'c' in that order.\", \"name\": \"letters_in_order\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A boolean value indicating whether the string contains the letters 'a', 'b', and 'c' in that order.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Truncates each sequence in a list of sequences to a maximum length.\", \"name\": \"sanitize_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of sequences, where each sequence is truncated to the maximum length.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"list_of_sequences\": {\"description\": \"A list of sequences, where each sequence is a list of strings or bytes.\", \"items\": {\"items\": {\"type\": [\"object\", \"string\"]}, \"type\": \"array\"}, \"type\": \"array\"}, \"max_length\": {\"description\": \"The maximum length of each sequence.\", \"type\": \"integer\"}}, \"required\": [\"list_of_sequences\", \"max_length\"], \"type\": \"object\"}}, {\"description\": \"Formats a pip install command with the given package name and version.\", \"name\": \"format_pip_command\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"package_name\": {\"description\": \"The name of the package to install.\", \"type\": [\"integer\", \"string\"]}}, \"required\": [\"package_name\"], \"type\": \"object\"}}, {\"description\": \"Reverses the order of elements in a list using list comprehension.\", \"name\": \"reverse_list_comprehension\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"The input list to be reversed.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"input_list\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Concatenates tensors `x` and `y` over a new axis with the goal of reshaping them from being one-dimensional to two-dimensional.\", \"name\": \"concat_new_axis\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The concatenated tensors `x` and `y` as a two-dimensional tensor.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The first tensor to be concatenated.\", \"type\": \"object\"}, \"y\": {\"description\": \"The second tensor to be concatenated.\", \"type\": \"object\"}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Replaces the word \\\"bad\\\" in a given string with an empty string.\\nIf the word \\\"bad\\\" is contained within a larger word, only that word is modified.\", \"name\": \"say_bad\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The modified string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of type names for the input object.\", \"name\": \"pytype_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The input object.\", \"type\": [\"array\", \"object\", \"object\"]}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Calculates the number of even numbers in a list using list comprehension.\", \"name\": \"num_evens_list_comprehension\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"reverse_list_comprehension\", \"arguments\": {\"input_list\": [1, 2, 3, 4, 5]}, \"label\": \"$var1\"}, {\"name\": \"num_evens_list_comprehension\", \"arguments\": {\"numbers\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n2\n\nNow solve:\nBookman purchased 55 copies of a new book released recently, 10 of which are hardback and sold for $20 each, and rest are paperback and sold for $10 each. If 14 copies were sold and the total value of the remaining books was 460, how many paperback copies were sold?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 624,
    "text": "Example:\n\nInstruction:\nA cat leaps 6 leaps for every 5 leaps of a dog, but 2 leaps of the dog are equal to 3 leaps of the cat. What is the ratio of the speed of the cat to that of the dog?\n\nUse this API documentation for reference: [{\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 3}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 6}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 5}}]\n\nGold Answer:\n0.8\n\nNow solve:\nA ratio between two numbers is 4:5 and their L.C.M. is 200. The first number is\n\nUse this API documentation for reference: [{\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 625,
    "text": "Example:\n\nInstruction:\nThe volume of a cube is 2197 cc. Find its surface.\n\nUse this API documentation for reference: [{\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"cube_edge_by_volume\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 2197}}, {\"name\": \"surface_cube\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\"}}]\n\nGold Answer:\n1014.0\n\nNow solve:\nRohan spends 40% of his salary on food, 20% on house rent, 10% on entertainment and 10% on conveyance. If his savings at the end of a month are Rs. 3000. then his monthly salary is\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 626,
    "text": "Example:\n\nInstruction:\nA train is 360 meter long is running at a speed of 45 km/hour. In what time will it pass a bridge of 240 meter length?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 360, \"arg_1\": 240}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 45, \"arg_1\": 1000}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 3600}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_3.result$\"}}]\n\nGold Answer:\n48.0\n\nNow solve:\nwhat is the Max number of rectangular boxes, each measuring 4 inches by 6 inches by 10 inches, that can be packed into a rectangular packing box measuring 16 inches by 18 inches by 30 inches, if all boxes are aligned in the same direction?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 627,
    "text": "Example:\n\nInstruction:\nI want to apply a sliding window of size 3 to the list [1, 2, 3, 4, 5], then sort the resulting list and exclude the first and last elements.\n\nUse this API documentation for reference: [{\"description\": \"Checks if a value is within a certain range and returns the value if it is, otherwise returns the boundary value.\", \"name\": \"range_check\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"max\": {\"description\": \"The maximum value of the range.\", \"type\": [\"integer\", \"number\"]}, \"min\": {\"description\": \"The minimum value of the range.\", \"type\": [\"integer\", \"number\"]}, \"val\": {\"description\": \"The value to check.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"val\", \"min\", \"max\"], \"type\": \"object\"}}, {\"description\": \"Modifies the value of a specific key in a dictionary and returns a new dictionary.\", \"name\": \"modify_args\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new dictionary with the modified key and value.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"args\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"The dictionary to modify.\", \"type\": \"object\"}}, \"required\": [\"args\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of keys from the first dictionary that have matching values in the second dictionary.\", \"name\": \"match_keys_and_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"dict1\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"The first dictionary.\", \"type\": \"object\"}, \"dict2\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"The second dictionary.\", \"type\": \"object\"}}, \"required\": [\"dict1\", \"dict2\"], \"type\": \"object\"}}, {\"description\": \"Converts a Numpy array to a PyTorch tensor with the same shape and values.\\nThe function converts the data type to a corresponding PyTorch data type and\\nperforms a clamp operation on values to fall within the range [-1, 1].\", \"name\": \"numpy_to_torch\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A PyTorch tensor with the same shape and values as the input Numpy array.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"numpy_array\": {\"description\": \"The input Numpy array.\", \"type\": \"object\"}}, \"required\": [\"numpy_array\"], \"type\": \"object\"}}, {\"description\": \"Masks phone numbers in a given text.\", \"name\": \"mask_phone_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input text with phone numbers replaced by asterisks.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input text.\", \"type\": \"object\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Implements a sliding window on a list.\", \"name\": \"sliding_window\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of slices that represent the sliding window.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"k\": {\"description\": \"The window size. Default is 2.\", \"type\": \"integer\"}, \"l\": {\"description\": \"The input list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"l\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Sorts an integer array in ascending order and returns the array without the first and last elements.\\nIf there are fewer than 2 elements, returns an empty list.\", \"name\": \"sort_and_exclude_first_and_last\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The sorted array without the first and last elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"The integer array to be sorted.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}, {\"description\": \"Checks if all letters in the input string appear exactly twice.\", \"name\": \"all_letters_appear_twice\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if all letters appear exactly twice, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of integers in a list.\", \"name\": \"sum_int\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The sum of integers in the list, or None if the list contains any non-integers.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": [\"integer\", \"string\"]}, \"type\": \"array\"}}, \"required\": [\"input_list\"], \"type\": \"object\"}}, {\"description\": \"Takes a list of strings representing paths to files, and returns a list of strings with the same paths relative to the current working directory.\\nThe function handles paths with and without trailing slashes.\", \"name\": \"make_relative\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings with the same paths relative to the current working directory.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"paths\": {\"description\": \"A list of strings representing paths to files.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"paths\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Extracts keys from a dictionary that have a value greater than 100.\", \"name\": \"extract_over_100\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of keys that have a value greater than 100.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"dict\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"The dictionary to extract keys from.\", \"type\": \"object\"}}, \"required\": [\"dict\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"sliding_window\", \"arguments\": {\"l\": [1, 2, 3, 4, 5], \"k\": 3}, \"label\": \"$var1\"}, {\"name\": \"sort_and_exclude_first_and_last\", \"arguments\": {\"nums\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n[[2, 3, 4]]\n\nNow solve:\nYou need to print a document of the area 216 sq cm. Condition is 3 cm margin is to be left at both top & bottom and 2 cm at the sides. What is the optimized size of your paper?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 628,
    "text": "Example:\n\nInstruction:\nA pet store regularly sells pet food at a discount of 10 percent to 30 percent from the manufacturer\u2019s suggested retail price. If during a sale, the store discounts an additional 20 percent from the discount price, what would be the lowest possible price of a container of pet food that had a manufacturer\u2019s suggested retail price o f $ 20.00?\n\nUse this API documentation for reference: [{\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 20}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 100}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 30}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 20}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_5.result$\"}}]\n\nGold Answer:\n11.2\n\nNow solve:\ntough and tricky questions : combinations . 8 contestants representing 4 different countries advance to the finals of a fencing championship . assuming all competitors have an equal chance of winning , how many possibilities are there with respect to how a first - place and second - place medal can be awarded ?\n\nUse this API documentation for reference: [{\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 629,
    "text": "Example:\n\nInstruction:\nGenerate a 5x5 symmetric matrix and find the maximum element in it.\n\nUse this API documentation for reference: [{\"description\": \"Finds and returns the name of the person with the longest name in a list of people's information.\", \"name\": \"find_longest_name\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The name of the person with the longest name, formatted as \\\"Name: \\\".\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"people\": {\"description\": \"A list of dictionaries, where each dictionary contains a person's name and age.\", \"items\": {\"additionalProperties\": {\"type\": \"string\"}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"people\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Creates a list of integers from 0 to `n` (inclusive).\", \"name\": \"count_to_n\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of integers from 0 to `n` (inclusive).\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The upper limit of the list.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Merges two dictionaries, where the values in the second dictionary take precedence over the values in the first dictionary if the same key is present.\\nA shallow copy of the first dictionary is used, so the original first dictionary is not modified.\", \"name\": \"merge_dicts_with_precedence\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"dict1\": {\"description\": \"The first dictionary.\", \"type\": \"object\"}, \"dict2\": {\"description\": \"The second dictionary.\", \"type\": \"object\"}}, \"required\": [\"dict1\", \"dict2\"], \"type\": \"object\"}}, {\"description\": \"Randomly selects a number from the range [-k, k] k times, where k is a positive integer.\", \"name\": \"random_selection\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the selected numbers.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"k\": {\"description\": \"A positive integer.\", \"type\": \"integer\"}}, \"required\": [\"k\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Computes the partial derivative of the dependent variable y with respect to the independent variable x.\", \"name\": \"diff_eq_with_constant\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of numbers representing the dependent variable in the PDE.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"An integer representing a standard partial differential equation (PDE) with a constant signal.\", \"type\": \"integer\"}, \"x\": {\"description\": \"A list of numbers representing the independent variable in the PDE.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"n\", \"x\"], \"type\": \"object\"}}, {\"description\": \"Creates a table with the specified columns and column types.\", \"name\": \"create_table_with_columns\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of lists representing the table.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"column_types\": {\"additionalProperties\": {\"nullable\": true, \"type\": \"object\"}, \"description\": \"A dictionary of column types. If not provided, all columns will be of type None.\", \"nullable\": true, \"type\": \"object\"}, \"columns\": {\"description\": \"A list of column names.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"columns\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Calculates the relative error of a measurement of size s, given the uncertainty us in the measurement.\", \"name\": \"relative_error\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The size of the measurement.\", \"type\": [\"integer\", \"number\"]}, \"us\": {\"description\": \"The uncertainty in the measurement.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"s\", \"us\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Checks if a region in a hex view of a file has been modified.\", \"name\": \"is_dirty\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"hex_view\": {\"description\": \"A list of hexadecimal strings representing the changes in the file.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"length\": {\"description\": \"The length of the region to be validated.\", \"type\": \"integer\"}, \"offset\": {\"description\": \"The starting index of the region to be validated.\", \"type\": \"integer\"}}, \"required\": [\"hex_view\", \"offset\", \"length\"], \"type\": \"object\"}}, {\"description\": \"Returns the maximum element in a list of numbers. If the list is empty, returns None.\", \"name\": \"max_of_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": [\"integer\", \"number\"]}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}, {\"description\": \"Generates an n x n matrix filled with 0s and 1s that is symmetric along the main diagonal.\\nThe top-left entry should be 1, and its diagonal opposite should be 0.\", \"name\": \"generate_symmetric_matrix\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A symmetric matrix of size n x n.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The size of the matrix.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Calculates the hash value of a string by summing the ordinal values of its characters.\", \"name\": \"hash_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The hash value of the string.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Parses a JSON file and returns the resulting dictionary.\", \"name\": \"parse_resource_file\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The dictionary representing the JSON object contained in the file.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The name of the file to parse.\", \"type\": \"string\"}}, \"required\": [\"filename\"], \"type\": \"object\"}}, {\"description\": \"Calculates the hash value of casting the string to a float.\", \"name\": \"hash_string_cast\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The hash value of the input string as a float.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"object\"}}, \"required\": [\"s\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"generate_symmetric_matrix\", \"arguments\": {\"n\": 5}, \"label\": \"$var1\"}, {\"name\": \"max_of_list\", \"arguments\": {\"nums\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n[1, 0, 0, 0, 0]\n\nNow solve:\nA crow leaves its nest, and flies back and forth from its nest to a nearby ditch to gather worms. The distance between the nest and the ditch is 300 meters. In one and a half hours, the crow manages to bring worms to its nest 15 times. What is the speed of the crow in kilometers per hour?\n\nUse this API documentation for reference: [{\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 630,
    "text": "Example:\n\nInstruction:\nIf a mixture is 5\u20449 alcohol by volume and 4\u20449 water by volume, what is the ratio of the volume of alcohol to the volume of water in this mixture?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 5, \"arg_1\": 9}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 9}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n1.25\n\nNow solve:\nA certain sum of money is divided among A, B and C so that for each Rs. A has, B has 65 paisa and C 40 paisa. If C's share is Rs.24, find the sum of money?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 631,
    "text": "Example:\n\nInstruction:\nCalculate the Shannon entropy of a sequence of nucleotides with frequencies [0.2, 0.3, 0.4, 0.1]. Then, calculate the ratio of the entropy to 1.5 and check if the entropy is greater than 1.5.\n\nUse this API documentation for reference: [{\"description\": \"Loads the data field from a JSON file as a numpy array.\", \"name\": \"load_data_json\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The data field from the JSON file as a numpy array.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the JSON file.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Converts an integer into its big-endian byte representation.\", \"name\": \"int_to_byte_array\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A byte array representing the integer.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"int_num\": {\"description\": \"The integer to convert.\", \"type\": \"integer\"}}, \"required\": [\"int_num\"], \"type\": \"object\"}}, {\"description\": \"Generates a list of class names from a specified module's public attributes using `__import__()` and `getattr()`.\", \"name\": \"generate_class_names\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of class names.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"module_name\": {\"description\": \"The name of the module to generate class names from.\", \"type\": \"string\"}}, \"required\": [\"module_name\"], \"type\": \"object\"}}, {\"description\": \"Calculates the half of the L2-norm of a 2-dimensional torch tensor.\", \"name\": \"half_l2_norm\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The half of the L2-norm of the input tensor.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"tensor\": {\"description\": \"The input 2-dimensional torch tensor.\", \"type\": \"object\"}}, \"required\": [\"tensor\"], \"type\": \"object\"}}, {\"description\": \"Builds a file path for a Cloud Asset.\", \"name\": \"build_file_path\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"parameters\": {\"description\": \"A list of parameters containing the project name, the asset type, and the asset name.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"parameters\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Parses a string containing name-value pairs with the format `name1=value1;name2=value2;...` and returns a dictionary of the parsed name-value pairs.\", \"name\": \"parse_name_value_pairs\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of the parsed name-value pairs.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string containing name-value pairs.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Validates if all of the words in the given string are unique.\", \"name\": \"validate_unique_words\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A boolean value indicating whether all the words in the string are unique.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the ratio of two numbers and checks if the numerator is greater than the denominator.\", \"name\": \"calculate_ratio_and_compare\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing the ratio of the values and a boolean indicating whether `numerator` is greater than `denominator`.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"denominator\": {\"description\": \"The denominator value.\", \"type\": \"number\"}, \"numerator\": {\"description\": \"The numerator value.\", \"type\": \"number\"}}, \"required\": [\"numerator\", \"denominator\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Retrieves weather data from a given URL.\", \"name\": \"get_weather_data\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary containing the temperature, humidity, wind_speed, and rainfall data.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"url\": {\"description\": \"The URL to retrieve the data from.\", \"type\": \"string\"}}, \"required\": [\"url\"], \"type\": \"object\"}}, {\"description\": \"Calculates the Shannon entropy of a sequence of nucleotides.\", \"name\": \"compute_entropy\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The Shannon entropy as a floating-point number.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"nucleotide_frequencies\": {\"description\": \"A list of nucleotide frequencies.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"nucleotide_frequencies\"], \"type\": \"object\"}}, {\"description\": \"Reads a file line by line and returns a list of objects.\\nEach line is a JSON string representing an object.\\nIf any line is invalid, it is skipped.\", \"name\": \"read_objects\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The name of the file to read.\", \"type\": \"string\"}}, \"required\": [\"filename\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"compute_entropy\", \"arguments\": {\"nucleotide_frequencies\": [0.2, 0.3, 0.4, 0.1]}, \"label\": \"$var1\"}, {\"name\": \"calculate_ratio_and_compare\", \"arguments\": {\"numerator\": \"$var1.output_0$\", \"denominator\": 1.5}, \"label\": \"$var2\"}]\n\nGold Answer:\n[1.2309595631140102, True]\n\nNow solve:\nI want to find out if the floor division of 10 and 3 is a member of a coset.\n\nUse this API documentation for reference: [{\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Constructs an XPath query that finds the element with the given target_attribute starting from the root_element.\", \"name\": \"construct_xpath_query\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string that represents the XPath query.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"root_element\": {\"description\": \"The name of the root element from which the search should start.\", \"type\": \"object\"}, \"target_attribute\": {\"description\": \"The name of the attribute that the target element should have.\", \"type\": \"object\"}}, \"required\": [\"root_element\", \"target_attribute\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Counts the number of occurrences of each word in a list of words.\", \"name\": \"count_words_in_words\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary with words as keys and word counts as values. The dictionary\\n    only includes words that appear more than once in the list.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"words\": {\"description\": \"A list of words.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"words\"], \"type\": \"object\"}}, {\"description\": \"Counts the number of occurrences of a regular expression pattern in a string in lazy mode.\", \"name\": \"count_occurrences_lazy\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"pattern\": {\"description\": \"The regular expression pattern to match.\", \"type\": \"string\"}, \"string\": {\"description\": \"The string to search in.\", \"type\": \"string\"}}, \"required\": [\"pattern\", \"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the floor division of two numbers `x` and `y`.\", \"name\": \"division_floor\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The floor division of `x` and `y`.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The numerator.\", \"type\": \"integer\"}, \"y\": {\"description\": \"The denominator.\", \"type\": \"integer\"}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Extracts a timestamp in the format `YYYYMMDDHHMMSS` from the filename of an image file.\", \"name\": \"get_timestamp_from_filename\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The timestamp as a string, or None if no timestamp is found in the filename.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"filepath\": {\"description\": \"The file path of the image file.\", \"type\": \"string\"}}, \"required\": [\"filepath\"], \"type\": \"object\"}}, {\"description\": \"Determines whether a number `x` is a member of a given coset of the form `x = a * 2**k + b` where `a`, `b`, and `k` are non-negative integers.\", \"name\": \"is_member_of_coset\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if `x` is a member of the coset, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The number to check.\", \"type\": \"integer\"}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of the objects with the attribute `is_active` set to `True`.\", \"name\": \"get_active_objects\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of objects with `is_active` set to `True`.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"objects\": {\"description\": \"A list of objects.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"objects\"], \"type\": \"object\"}}, {\"description\": \"Removes all non-image files from the given directory and its subdirectories.\", \"name\": \"keep_only_images\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"path\": {\"description\": \"The directory path.\", \"type\": \"string\"}}, \"required\": [\"path\"], \"type\": \"object\"}}, {\"description\": \"Calculates the covariance matrix of a list of time series data after centering each series.\", \"name\": \"center_and_covariance\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The covariance matrix of the centered time series data.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"ts_data\": {\"description\": \"A list of time series data, where each series is a list of float values.\", \"items\": {\"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"ts_data\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 632,
    "text": "Example:\n\nInstruction:\nIf w/x = 1/3 and w/y = 4/15, then (x + y)/y =\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 15, \"arg_1\": 3}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 1}}]\n\nGold Answer:\n1.8\n\nNow solve:\nI have a list of numbers [1, 2, 3, 4, 5]. I want to scale them to have zero mean and unit variance, then calculate the product of the scaled numbers with another vector [6, 7, 8, 9, 10].\n\nUse this API documentation for reference: [{\"description\": \"Encodes a string to the required format for sending as part of a URL query string.\", \"name\": \"url_encode\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The encoded string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The string to be encoded.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Splits a string into chunks of a specified size.\", \"name\": \"chunked\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings, where each string is a chunk of the input string.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"chunk_size\": {\"description\": \"The size of each chunk.\", \"type\": \"integer\"}, \"string\": {\"description\": \"The input string to be split.\", \"type\": \"string\"}}, \"required\": [\"string\", \"chunk_size\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of names of people that are older than 20 years old.\", \"name\": \"get_person_names\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings representing the names of people with an age greater than 20.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"people\": {\"description\": \"A list of Person class instances.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"people\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Computes the product of two vectors.\", \"name\": \"product_of_vectors\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The product of the two vectors.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"vector1\": {\"description\": \"The first vector.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"vector2\": {\"description\": \"The second vector.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"vector1\", \"vector2\"], \"type\": \"object\"}}, {\"description\": \"Processes a list of URL paths and generates a list of lists, with each inner list containing the number of users who visited the URL path and the number of users who did not visit.\", \"name\": \"process_urls\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of lists, with each inner list containing the URL path, the number of users who visited the URL path, and the number of users who did not visit.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"A list of strings representing URL paths.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"input_list\"], \"type\": \"object\"}}, {\"description\": \"Calculates the boolean indicator of a real number `x` with respect to a threshold.\", \"name\": \"bool_indicator\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"Either 0 or 1, according to the formula:\\n\\n    $$\\n    bool\\\\_indicator(x, threshold) = \\begin{cases}\\n        1 &         ext{if } x \\\\ge threshold \\\\\\n        0 &         ext{otherwise}\\n    \\\\end{cases}\\n    $$\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"threshold\": {\"description\": \"A real number between 0 and 1.\", \"type\": [\"integer\", \"number\"]}, \"x\": {\"description\": \"A real number.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"x\", \"threshold\"], \"type\": \"object\"}}, {\"description\": \"Calculates the average of a list of numbers and returns the result as a string.\", \"name\": \"calculate_average\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The average of the numbers, formatted as a string with two decimal places.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Returns the tuple with the highest second value from the list of tuples.\\nIf there are multiple tuples with the same highest second value,\\nreturns the one with the lowest first value.\", \"name\": \"get_max_by_value\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"tuple_list\": {\"description\": \"A list of tuples.\", \"items\": {\"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"tuple_list\"], \"type\": \"object\"}}, {\"description\": \"Parses a string as a Python tuple.\", \"name\": \"parse_tuple\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The parsed tuple, or `None` if the input string is invalid or doesn't represent a tuple.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The string to parse.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Generates a target string consisting of `n` repetitions of `content` delimited by `'\\n'`.\\n    The first `n - 1` repetitions are prefixed with `'> '` and the last one is prefixed with `'>> '` if `n > 1`.\", \"name\": \"generate_target\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"content\": {\"description\": \"The string to be repeated.\", \"type\": \"string\"}, \"n\": {\"description\": \"The number of repetitions.\", \"type\": \"integer\"}}, \"required\": [\"content\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Scales a list of numbers to have zero mean and unit variance.\", \"name\": \"scale_to_zero_mean_and_unit_variance\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The list of numbers to scale.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Reads the first 10 bytes of a file.\", \"name\": \"read_first_10_bytes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The first 10 bytes of the file as a byte string.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the file.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 633,
    "text": "Example:\n\nInstruction:\nGiven a string \"helloWorld\", first convert it to Title Case, then replace all occurrences of 'o' with 'a', and finally alter the string by keeping the first 3 characters as-is and alternating the case of the remaining characters.\n\nUse this API documentation for reference: [{\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Replaces all occurrences of ch1 in text with ch2 and returns the resulting string.\", \"name\": \"change_characters\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"ch1\": {\"description\": \"A character.\", \"type\": \"string\"}, \"ch2\": {\"description\": \"A character.\", \"type\": \"string\"}, \"text\": {\"description\": \"A string.\", \"type\": \"string\"}}, \"required\": [\"text\", \"ch1\", \"ch2\"], \"type\": \"object\"}}, {\"description\": \"Converts a string that is in camelCase format into Title Case.\", \"name\": \"camel_to_title\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The string to be converted.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Swaps the left and right halves of a list of integers.\", \"name\": \"swap_left_right\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list with the left and right halves swapped.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Loads a vocabulary from a text file and returns a dictionary mapping each word to an integer ID.\\n\\nThe input text file should contain one word per line, and the integer IDs are assigned in ascending order.\\nThe function strips any leading or trailing whitespace from the words and converts them to lowercase before\\nmapping to their IDs.\", \"name\": \"load_vocabulary_from_text_file\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary mapping each word in the vocabulary to an integer ID.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the text file containing the vocabulary.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Simulates a reinforcement learning environment where an agent interacts with the environment and receives outputs.\", \"name\": \"simulate_rl_env\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The action performed by the agent, the reward received, and a Boolean value indicating whether the action was successful.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"agent\": {\"description\": \"The agent that performs an action within the environment.\", \"type\": \"object\"}, \"env\": {\"description\": \"The environment where the agent performs the action.\", \"type\": \"object\"}}, \"required\": [\"agent\", \"env\"], \"type\": \"object\"}}, {\"description\": \"Searches for the first appearance of a given substring and returns the corresponding index within the base string.\\nReturns -1 if the substring is not found.\", \"name\": \"find_indices_of_substring\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"base_str\": {\"description\": \"The base string to search within.\", \"type\": \"string\"}, \"sub_str\": {\"description\": \"The substring to search for.\", \"type\": \"string\"}}, \"required\": [\"base_str\", \"sub_str\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Constructs a query string for the search API of a web service.\", \"name\": \"construct_query_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"api_key\": {\"description\": \"The API key to be included in the query string.\", \"type\": \"string\"}, \"search_term\": {\"description\": \"The search term to be included in the query string.\", \"type\": \"string\"}}, \"required\": [\"search_term\", \"api_key\"], \"type\": \"object\"}}, {\"description\": \"Alters a string by keeping the first 3 characters as-is, and alternating the case of the remaining characters.\\nIf the length of `s` is less than 3, the function returns `s` as-is.\", \"name\": \"altered_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"camel_to_title\", \"arguments\": {\"string\": \"helloWorld\"}, \"label\": \"$var1\"}, {\"name\": \"change_characters\", \"arguments\": {\"text\": \"$var1.output_0$\", \"ch1\": \"o\", \"ch2\": \"a\"}, \"label\": \"$var2\"}, {\"name\": \"altered_string\", \"arguments\": {\"s\": \"$var2.output_0$\"}, \"label\": \"$var3\"}]\n\nGold Answer:\nHelLa wArLd\n\nNow solve:\nThe unit digit in the product 4556*3432*4581*2784 is?\n\nUse this API documentation for reference: [{\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 634,
    "text": "Example:\n\nInstruction:\nA start walking from a place at a uniform speed of 6 kmph in a particular direction. After half an hour, B starts from the same place and walks in the same direction as A at a uniform speed and overtakes A after 1 hour 48 minutes. Find the speed of B.\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 60, \"arg_1\": 48}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 60}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 6}}]\n\nGold Answer:\n6.6\n\nNow solve:\nA batsman makes a score of 76 runs in the 17th inning and thus increases his average by 3. Find his average after 17th inning.\n\nUse this API documentation for reference: [{\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 635,
    "text": "Example:\n\nInstruction:\nIf the average of r, b, c, 14 and 15 is 12. What is the average value of r, b, c and 29\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 12}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 14, \"arg_1\": 15}}, {\"name\": \"subtract\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 29}}, {\"name\": \"divide\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 4}}]\n\nGold Answer:\n15.0\n\nNow solve:\nIn Smithtown, the ratio of right-handed people to left-handed people is 3 to 1 and the ratio of men to women is 3 to 2. If the number of right-handed men is maximized, then what percent Z of all the people in Smithtown are left-handed women?\n\nUse this API documentation for reference: [{\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 636,
    "text": "Example:\n\nInstruction:\nIf a population of women in a town is 50% of men . What is the population of men as a percentage of population of women ?\n\nUse this API documentation for reference: [{\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 50}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n200.0\n\nNow solve:\nGiven a list of numbers [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], find the next lexicographically greater permutation using the 'get_next_permutation' API. Then, double each number in the resulting list using the 'double_list' API.\n\nUse this API documentation for reference: [{\"description\": \"Fits a polynomial curve of specified order to a set of points (x, y) using linear regression.\", \"name\": \"fit_polynomial\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of coefficients where keys are powers of x and values are the corresponding coefficients.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"order\": {\"description\": \"The order of the polynomial to fit.\", \"type\": \"integer\"}, \"x\": {\"description\": \"The x-coordinates of the points.\", \"type\": \"object\"}, \"y\": {\"description\": \"The y-coordinates of the points.\", \"type\": \"object\"}}, \"required\": [\"x\", \"y\", \"order\"], \"type\": \"object\"}}, {\"description\": \"Computes the daily return (the percent change in price relative to the previous day's closing price) using list comprehension and the `zip` operator, without using a for loop.\", \"name\": \"compute_returns\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the same length that contains the daily return (the percent change in price relative to the previous day's closing price).\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"prices\": {\"description\": \"A list of prices that represent a stock's daily closing price over a period of time.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"prices\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Returns the next lexicographically greater permutation of the input list.\\nIf the input list is already the last permutation, returns the list in ascending order.\", \"name\": \"get_next_permutation\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A list of distinct integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Extracts currency values and their corresponding names from a string.\", \"name\": \"extract_currency_from_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples containing the extracted currency values and their corresponding names.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of numbers that are within `k` of the threshold.\", \"name\": \"numbers_within_k\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"k\": {\"description\": \"The maximum difference between a number and the threshold.\", \"type\": \"integer\"}, \"numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"threshold\": {\"description\": \"The threshold value.\", \"type\": \"integer\"}}, \"required\": [\"numbers\", \"threshold\", \"k\"], \"type\": \"object\"}}, {\"description\": \"Extracts file extensions from a list of file paths.\", \"name\": \"get_file_extensions\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of file extensions, excluding the dot ('.') character.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"file_paths\": {\"description\": \"A list of file paths.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"file_paths\"], \"type\": \"object\"}}, {\"description\": \"Concatenates two strings, with the first character of the second string capitalized.\", \"name\": \"capitalize_second\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string1\": {\"description\": \"The first input string.\", \"type\": \"string\"}, \"string2\": {\"description\": \"The second input string.\", \"type\": \"string\"}}, \"required\": [\"string1\", \"string2\"], \"type\": \"object\"}}, {\"description\": \"Returns the shape of the tensor in the format [batch, height, width, channels].\", \"name\": \"get_shape_in_format\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The shape of the tensor in the format [batch, height, width, channels].\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"t\": {\"description\": \"The input tensor.\", \"type\": \"object\"}}, \"required\": [\"t\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of the original list's values multiplied by 2.\\n\\nThe resulting list should contain the same number of elements as the original list.\\nThe function should use a list comprehension, but should not use any built-in functions\\nlike `map` or `filter`.\", \"name\": \"double_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The input list.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}, {\"description\": \"Checks if a positive integer is a perfect number.\", \"name\": \"perfect_num\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the number is a perfect number, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The positive integer to check.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Converts a color represented in RGBA tuple (red, green, blue, alpha) to a hexadecimal string in the format `#RRGGBB` (without the alpha channel).\", \"name\": \"convert_rgba_to_hex\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string with length 7 representing the hexadecimal color.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"rgba\": {\"description\": \"The RGBA tuple representing the color.\", \"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}, {\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}}, \"required\": [\"rgba\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Generates a formatted string from an object's attributes.\", \"name\": \"generate_formatted_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A formatted string containing the object's attributes.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary containing the object's attributes.\", \"type\": \"object\"}}, \"required\": [\"obj\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 637,
    "text": "Example:\n\nInstruction:\nConvert 200 Kelvin to Fahrenheit, then convert the result to centimeters with a precision of 2 decimal places.\n\nUse this API documentation for reference: [{\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Parses a single Markdown header (H1) and returns it as a string.\\n\\nThe header markup is composed of a pound symbol (#) followed by at least one space and a header text, which then ends with a newline.\", \"name\": \"parse_md\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The header text as a string, preserving the leading and trailing whitespace.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"markdown\": {\"description\": \"The Markdown string to parse.\", \"type\": \"string\"}}, \"required\": [\"markdown\"], \"type\": \"object\"}}, {\"description\": \"Convert a temperature from Kelvin to Fahrenheit.\", \"name\": \"kelvin_to_fahrenheit\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The temperature in Fahrenheit as an integer.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"temperature\": {\"description\": \"The temperature in Kelvin.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"temperature\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Retrieves the elements below the main diagonal of a square matrix.\", \"name\": \"retrieve_elements_below_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of elements below the main diagonal.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Converts a distance from inches to centimeters with a precision of 2 decimal places.\", \"name\": \"convert_to_cm_with_precision\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The distance in centimeters with a precision of 2 decimal places.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"inches\": {\"description\": \"The distance in inches.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"inches\"], \"type\": \"object\"}}, {\"description\": \"Assigns a value to a variable based on a condition.\", \"name\": \"assign_value_to_y\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The value assigned to the variable `y`.\", \"type\": [\"integer\", \"string\"]}}}, \"parameters\": {\"properties\": {\"condition_string\": {\"description\": \"A string representing the condition.\", \"type\": \"string\"}, \"x\": {\"description\": \"An integer value.\", \"type\": \"integer\"}}, \"required\": [\"condition_string\", \"x\"], \"type\": \"object\"}}, {\"description\": \"Determines whether a given string is present in a list of strings.\", \"name\": \"string_in_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The string to search for.\", \"type\": \"string\"}, \"string_list\": {\"description\": \"The list of strings to search in.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"string\", \"string_list\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Formats the names of all dictionaries where the corresponding count is greater than 1.\", \"name\": \"format_counts\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string containing the `name`s of all dictionaries where the corresponding `count` is greater than 1,\\n    separated by commas, and each `name` should be enclosed in double quotes, e.g. `\\\"foo\\\", \\\"bar\\\"`\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"counts\": {\"description\": \"A list of dictionaries, each containing a `name` and `count` key.\", \"items\": {\"additionalProperties\": {\"type\": \"integer\"}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"counts\"], \"type\": \"object\"}}, {\"description\": \"Computes the distance of a point (x, y) to a line represented by the function f(x) = m * x + b.\", \"name\": \"compute_distance_to_line\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The Euclidean distance to the line.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"b\": {\"description\": \"The y-intercept of the line.\", \"type\": \"number\"}, \"m\": {\"description\": \"The slope of the line.\", \"type\": \"number\"}, \"x\": {\"description\": \"The x-coordinate of the point.\", \"type\": \"number\"}}, \"required\": [\"x\", \"m\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Updates the dictionary `d1` with the contents of `d2` recursively.\\nIf a key exists in both dictionaries, the value in `d1` is updated with the value in `d2`.\\nIf a key exists in only one of the dictionaries, its value is added to `d1`.\\nThe function takes care of nested dictionaries.\", \"name\": \"update_dict_recursive\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"d1\": {\"description\": \"The dictionary to be updated.\", \"type\": \"object\"}, \"d2\": {\"description\": \"The dictionary containing the updates.\", \"type\": \"object\"}}, \"required\": [\"d1\", \"d2\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the elastic modulus of a material based on its Young's modulus and Poisson's ratio.\", \"name\": \"calculate_elastic_modulus\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"E_Y\": {\"description\": \"The Young's modulus of the material.\", \"type\": [\"integer\", \"number\"]}, \"v\": {\"description\": \"The Poisson's ratio of the material.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"E_Y\", \"v\"], \"type\": \"object\"}}, {\"description\": \"Converts a chart type value to a human-readable name.\", \"name\": \"chart_type_value_to_name\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The human-readable name for the chart type, or None if the chart type is not recognized.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"chart_type_value\": {\"description\": \"A positive integer representing a chart type.\", \"type\": \"integer\"}}, \"required\": [\"chart_type_value\"], \"type\": \"object\"}}, {\"description\": \"Extracts the attribute name and value from an XML string and returns a list of dictionaries.\", \"name\": \"extract_attributes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of dictionaries, each containing an attribute name and value.\\n    If the attribute value is missing, it is represented as an empty string.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"xml_string\": {\"description\": \"The XML string to extract attributes from.\", \"type\": \"string\"}}, \"required\": [\"xml_string\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"kelvin_to_fahrenheit\", \"arguments\": {\"temperature\": 200}, \"label\": \"$var1\"}, {\"name\": \"convert_to_cm_with_precision\", \"arguments\": {\"inches\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n-251.46\n\nNow solve:\nTwo men are going along a track rail in the opposite direction. One goods train crossed the first person in 20 sec. After 10 min the train crossed the other person who is coming in opposite direction in 18 sec .After the train has passed, when the two persons will meet?\n\nUse this API documentation for reference: [{\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 638,
    "text": "Example:\n\nInstruction:\nTabby is training for a triathlon. She swims at a speed of 1 mile per hour. She runs at a speed of 10 miles per hour. She wants to figure out her average speed for these two events. What is the correct answer for her?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 10}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}]\n\nGold Answer:\n5.5\n\nNow solve:\nA student got twice as many sums wrong as he got right. If he attempted 27 sums in all, how many did he solve correctly ?\n\nUse this API documentation for reference: [{\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 639,
    "text": "Example:\n\nInstruction:\nA boat running upstream takes 8 hours 48 minutes to cover a certain distance, while it takes 4 hours to cover the same distance running downstream. What is the ratio between the speed of the boat and speed of the water current respectively?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 48, \"arg_1\": 60}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 8}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 4}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 48, \"arg_1\": 60}}, {\"name\": \"add\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": 8}}, {\"name\": \"divide\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_7.result$\", \"arg_1\": 4}}, {\"name\": \"subtract\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": \"$var_8.result$\", \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_9.result$\", \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": \"$var_10.result$\"}}]\n\nGold Answer:\n2.6666666666666665\n\nNow solve:\nA particular store purchased a stock of turtleneck sweaters and marked up its cost by 20%. During the New Year season, it further marked up its prices by 25% of the original retail price. In February, the store then offered a discount of 15%. What was its profit on the items sold in February?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 640,
    "text": "Example:\n\nInstruction:\nGiven a list of integers [1, 2, 3, 4, 5], create a new list where each element is the sum of the current element and the previous element in the original list. Then, perform a specific operation on each element of the new list.\n\nUse this API documentation for reference: [{\"description\": \"Checks if a given string is a valid integer. If it is, converts it into an integer and returns the result. Otherwise, returns None.\", \"name\": \"check_valid_integer\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input converted to an integer if it is a valid integer, otherwise None.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"The input string to check.\", \"type\": [\"integer\", \"string\"]}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Groups the keys into a list for each unique value (sorted from smaller to larger).\", \"name\": \"group_keys\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new dictionary that groups the keys into a list for each unique value (sorted from smaller to larger).\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"data\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"A dictionary with arbitrary number of keys.\", \"type\": \"object\"}}, \"required\": [\"data\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Retrieves the values of the names attribute of all objects in a dictionary that have the names attribute.\", \"name\": \"retrieve_names\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of names.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"obj_dict\": {\"additionalProperties\": {}, \"description\": \"A dictionary where the values are objects that may have a names attribute.\", \"type\": \"object\"}}, \"required\": [\"obj_dict\"], \"type\": \"object\"}}, {\"description\": \"Creates a new list where each element is the sum of the current element and the previous element in the original list.\", \"name\": \"add_previous\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}, {\"description\": \"Calculates the longest negation span in a binary string.\", \"name\": \"neg_span\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The length of the longest negation span.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The binary string.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Cleans a text by removing stopwords.\", \"name\": \"clean_text\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The cleaned text.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"stopwords\": {\"description\": \"A list of stopwords to remove from the text.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"text\": {\"description\": \"The input text.\", \"type\": \"string\"}}, \"required\": [\"text\", \"stopwords\"], \"type\": \"object\"}}, {\"description\": \"Performs a specific operation on each element of a list of numbers.\", \"name\": \"perform_operation\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats after performing the operation on each element.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Creates a dictionary with each name as a key and the length of each name as its value.\", \"name\": \"name_lengths\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary with each name as a key and the length of each name as its value.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"names\": {\"description\": \"A list of names.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"names\"], \"type\": \"object\"}}, {\"description\": \"Checks if an input string comprises only letters and digits and has at least one letter.\\nIf yes, returns the string in all lowercase letters. If no, returns a default string.\", \"name\": \"lowercase_letters\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"default_str\": {\"description\": \"The default string to be returned if the input string does not meet the criteria.\", \"type\": \"string\"}, \"input_str\": {\"description\": \"The input string to be checked.\", \"type\": \"string\"}}, \"required\": [\"input_str\", \"default_str\"], \"type\": \"object\"}}, {\"description\": \"Converts an integer `sec` (representing the number of seconds) to a string in the format of 'HH:MM:SS'.\", \"name\": \"convert_seconds\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string in the format of 'HH:MM:SS'.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"sec\": {\"description\": \"The number of seconds to convert.\", \"type\": \"integer\"}}, \"required\": [\"sec\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Takes a list of numbers or strings as input and returns a list of the squared values.\", \"name\": \"square_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"values\": {\"description\": \"A list of numbers or strings.\", \"items\": {\"type\": [\"integer\", \"string\"]}, \"type\": \"array\"}}, \"required\": [\"values\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"add_previous\", \"arguments\": {\"lst\": [1, 2, 3, 4, 5]}, \"label\": \"$var1\"}, {\"name\": \"perform_operation\", \"arguments\": {\"numbers\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n[6, 10, 14, 18]\n\nNow solve:\nWhat quantity of water should be added to reduce 20 liters of 80% acidic liquid to 20% acidic liquid?\n\nUse this API documentation for reference: [{\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 641,
    "text": "Example:\n\nInstruction:\nWhat profit percent is made by selling an article at a certain price, if by selling at 2/3rd of that price, there would be a loss of 25%?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 25}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 3}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n12.5\n\nNow solve:\nMr.Jones gave 40% of the money he had to his wife. He also gave 20% of the remaining amount to his 3 sons. and half of the amount now left was spent on miscellaneous items and the remaining amount of Rs.12000 was deposited in the bank. How much money did Mr.jones have initially?\n\nUse this API documentation for reference: [{\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 642,
    "text": "Example:\n\nInstruction:\ntwo 100 multiples of 7 are chosen at random , and 300 multiples of 8 are chosen at random . approximately what percentage of the 500 selected numbers are odd ?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 500}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n20.0\n\nNow solve:\nA taxi leaves Point A 2 hours after a bus left the same spot. The bus is traveling 20 mph slower than the taxi. Find the speed of the taxi, if it overtakes the bus in two hours.\n\nUse this API documentation for reference: [{\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 643,
    "text": "Example:\n\nInstruction:\nThe product of x and y is a constant. If the value of x is increased by 40%, by what percentage must the value of y be decreased?\n\nUse this API documentation for reference: [{\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 40}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 100, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n28.57\n\nNow solve:\nI want to replace all occurrences of the letter 'a' in the string 'hello world' with the letter 'b', then check if the resulting string is hashable.\n\nUse this API documentation for reference: [{\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Removes all comments from a source code string.\", \"name\": \"strip_comments_from_source_code\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The source code string with all comments removed.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"source_code\": {\"description\": \"The source code string to remove comments from.\", \"type\": \"string\"}}, \"required\": [\"source_code\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Extracts the inner dictionary elements from a given dictionary.\", \"name\": \"extract_inner_dict_elements\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary representing the inner dictionary elements of the original dictionary.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"dict\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"The dictionary to extract the inner dictionary elements from.\", \"type\": \"object\"}}, \"required\": [\"dict\"], \"type\": \"object\"}}, {\"description\": \"Imputes missing values in a Pandas DataFrame with the mean value of the corresponding column.\", \"name\": \"impute_missing_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new DataFrame with the imputed values.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"df\": {\"description\": \"The input DataFrame.\", \"type\": \"object\"}}, \"required\": [\"df\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of names whose age is greater than or equal to 18.\", \"name\": \"get_adult_names\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"age_dict\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"A dictionary of names to ages.\", \"type\": \"object\"}}, \"required\": [\"age_dict\"], \"type\": \"object\"}}, {\"description\": \"Performs a simplified string replacement operation.\\nReplaces all occurrences of the given letter in the string with the replacement letter.\\nIf the given letter doesn't exist in the string, the function simply returns the original string.\", \"name\": \"simplify_string_replace\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"given_letter\": {\"description\": \"The letter to be replaced.\", \"type\": \"string\"}, \"replacement_letter\": {\"description\": \"The letter to replace the given letter with.\", \"type\": \"string\"}, \"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\", \"given_letter\", \"replacement_letter\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Removes the 'badColumn' column if it exists in the given DataFrame and returns a new DataFrame without 'badColumn'.\", \"name\": \"remove_bad_column\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new DataFrame without the 'badColumn' column.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"df\": {\"description\": \"The input DataFrame.\", \"type\": \"object\"}}, \"required\": [\"df\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Recursively searches for files matching a given pattern in a provided path and returns a list of matching file paths as strings.\", \"name\": \"glob_path\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of file paths as strings.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"path\": {\"description\": \"The base directory to search.\", \"type\": \"string\"}, \"pattern\": {\"description\": \"A string that can contain wildcards (e.g., `*.txt`).\", \"type\": \"string\"}}, \"required\": [\"path\", \"pattern\"], \"type\": \"object\"}}, {\"description\": \"Checks if the given object is hashable.\", \"name\": \"is_hashable\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the object is hashable, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The object to check.\"}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Concatenates two numpy 2D arrays along the second axis and returns a numpy 3D array.\", \"name\": \"concatenate_arrays\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"A numpy 2D array of shape (N, M).\", \"type\": \"object\"}, \"y\": {\"description\": \"A numpy 2D array of shape (N, K).\", \"type\": \"object\"}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Converts an XML tree to a string representation.\", \"name\": \"xml_to_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"xml_tree\": {\"description\": \"The XML tree to convert.\", \"type\": \"object\"}}, \"required\": [\"xml_tree\"], \"type\": \"object\"}}, {\"description\": \"Encodes the given name and domain using base64 encoding.\", \"name\": \"encode_dns_name\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"name_and_domain\": {\"description\": \"The name and domain to be encoded.\", \"type\": \"string\"}}, \"required\": [\"name_and_domain\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 644,
    "text": "Example:\n\nInstruction:\nExpress 30 mps in kmph?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 30, \"arg_1\": 1000}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 3600}}]\n\nGold Answer:\n108.0\n\nNow solve:\nA car is purchased on hire-purchase. The cash price is $24 000 and the terms are a deposit of 10% of the price, then the balance to be paid off over 60 equal monthly installments. Interest is charged at 12% p.a. What is the monthly installment?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 645,
    "text": "Example:\n\nInstruction:\nIf 8 men or 12 women can do a piece of work in 35 days, in how many days can the same work be done by 6 men and 11 women?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 8, \"arg_1\": 35}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 6, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 12, \"arg_1\": 35}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 11, \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"inverse\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\"}}]\n\nGold Answer:\n21.0\n\nNow solve:\nBucket P has thrice the capacity as Bucket Q. It takes 60 turns for Bucket P to fill the empty drum. How many turns it will take for both the buckets P&Q, having each turn together to fill the empty drum?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 646,
    "text": "Example:\n\nInstruction:\nThe sum q of prime numbers that are greater than 60 but less than 70 is\n\nUse this API documentation for reference: [{\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 60, \"arg_1\": 1}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 70, \"arg_1\": 3}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n128.0\n\nNow solve:\nIn a factory, an average of 50 TV's are produced per day for the fist 25days of the months. A few workers fell ill for the next 5days reducing the daily avg for the month to 43 sets/day . The average production per day for day last 5days is ?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 647,
    "text": "Example:\n\nInstruction:\nFind compound interest on Rs. 7500 at 4% per year for 2 years, compounded annually.\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 7500, \"arg_1\": 4}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 100}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 7500, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 7500, \"arg_1\": 4}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 100}}, {\"name\": \"add\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 7500, \"arg_1\": \"$var_5.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": 4}}, {\"name\": \"divide\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_7.result$\", \"arg_1\": 100}}, {\"name\": \"add\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_8.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_9.result$\", \"arg_1\": 7500}}]\n\nGold Answer:\n612.0\n\nNow solve:\nA is twice as fast as B. If B alone can do a piece of work in 18 days, in what time can A and B together complete the work?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 648,
    "text": "Example:\n\nInstruction:\nConvert the integer 10 to its binary representation with 8 bits. Then, extract the numeric values from the binary string.\n\nUse this API documentation for reference: [{\"description\": \"Increments the value of a key in a dictionary by 1 if the key exists, or adds the key with a value of 1 if it doesn't.\", \"name\": \"increment_or_add\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"The dictionary to modify.\", \"type\": \"object\"}, \"key\": {\"description\": \"The key to check or add.\", \"type\": \"string\"}}, \"required\": [\"dictionary\", \"key\"], \"type\": \"object\"}}, {\"description\": \"Processes a number of strings with `str.strip()` and concatenates the results.\\nIf a string is empty (i.e., `''`), it is ignored. If the input is an integer or a float,\\nit is converted to a string first.\", \"name\": \"process_strings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The concatenated string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input_data\": {\"description\": \"The input data to be processed.\", \"type\": [\"integer\", \"number\", \"string\"]}}, \"required\": [\"input_data\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Calculates the number of trailing zeros in the factorial of n.\", \"name\": \"factorial_trailing_zeros\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The number to calculate the factorial of.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Splits a pandas DataFrame into a dictionary of DataFrames based on the unique values of a column.\", \"name\": \"partition_by_category\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the keys are the unique values of the `category` column and the values are the corresponding DataFrames.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"df\": {\"description\": \"The input DataFrame.\", \"type\": \"object\"}}, \"required\": [\"df\"], \"type\": \"object\"}}, {\"description\": \"Converts an integer to its string representation in binary.\", \"name\": \"int_to_bit_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"bits\": {\"description\": \"The number of bits to use for the conversion.\", \"type\": \"integer\"}, \"number\": {\"description\": \"The integer to convert.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"number\", \"bits\"], \"type\": \"object\"}}, {\"description\": \"Returns a new string composed of the last 2 characters of the input string.\\nIf the input string is shorter than 2 characters, it returns the string with characters in reverse order.\", \"name\": \"last_two_characters\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a dictionary containing the names and values of all public attributes of a class instance.\", \"name\": \"get_attributes_as_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary with the attribute names and values.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"instance\": {\"description\": \"A class instance.\"}}, \"required\": [\"instance\"], \"type\": \"object\"}}, {\"description\": \"Loads the text in the file and returns a random word that is not a stopword.\\n\\nThe stopwords are in the file `stopwords.txt`, one word per line.\", \"name\": \"random_non_stopword\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A random word that is not a stopword.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the file containing the text.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of keys from the dictionary that have the specified value.\", \"name\": \"get_keys_with_same_value\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"The dictionary to search.\", \"type\": \"object\"}, \"value\": {\"description\": \"The value to search for.\", \"type\": \"integer\"}}, \"required\": [\"dictionary\", \"value\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the first-order gradient of a matrix multiplication operation.\", \"name\": \"gradient_matrix_multiplication\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"W\": {\"description\": \"A two-dimensional matrix.\", \"type\": \"object\"}, \"X\": {\"description\": \"A two-dimensional matrix.\", \"type\": \"object\"}}, \"required\": [\"X\", \"W\"], \"type\": \"object\"}}, {\"description\": \"Extracts numeric values from a given input string.\", \"name\": \"extract_numeric_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of integers and floats representing the numeric values found in the input string.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string to extract numeric values from.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Creates a dictionary of key-value pairs from the results of a database query.\\nThe keys represent the column names of the query result and the values represent a list of corresponding values in the rows.\", \"name\": \"create_dictionary_from_database_query\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"results\": {\"description\": \"A list of tuples representing the query results. Each tuple represents a row and contains the corresponding values for all columns.\", \"items\": {\"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"results\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sigmoid of a vector or scalar using a numerically stable implementation.\", \"name\": \"stable_sigmoid\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The input vector or scalar.\", \"type\": \"object\"}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"int_to_bit_string\", \"arguments\": {\"number\": 10, \"bits\": 8}, \"label\": \"$var1\"}, {\"name\": \"extract_numeric_values\", \"arguments\": {\"input_string\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n[1010]\n\nNow solve:\nTanks A and B are each in the shape of a right circular cylinder. The interior of tank A has a height of 9 meters and a circumference of 8 meters, and the interior of tank B has a height of 8 meters and a circumference of 10 meters. The capacity of tank A is what percent of the capacity of tank B?\n\nUse this API documentation for reference: [{\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 649,
    "text": "Example:\n\nInstruction:\nCalculate the 10th Fibonacci number and then find the smallest x such that x * x > the 10th Fibonacci number.\n\nUse this API documentation for reference: [{\"description\": \"Checks whether an object has a static member based on a given condition.\", \"name\": \"has_static_member\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the object has the specified attribute or method, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The object to check.\"}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Concatenates the values of keyword arguments into a single string, using their corresponding keys as the label.\", \"name\": \"concatenate_kwargs\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"kwargs\": {\"description\": \"The keyword arguments to be concatenated.\", \"type\": \"string\"}}, \"required\": [\"kwargs\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of all keys within the object's hierarchy.\\nThe function traverses through nested objects and lists to find all keys within the hierarchy.\", \"name\": \"get_keys\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The input object.\"}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Returns a list containing the string in the first list if the string is present in the list.\\nIf the string is not present in the list, the function returns a list containing only the string.\\nThe function also returns the list in alphabetical order.\", \"name\": \"get_list_or_sorted_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"list_of_strings\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"str\": {\"description\": \"A string.\", \"type\": \"string\"}}, \"required\": [\"list_of_strings\", \"str\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the nth Fibonacci number using memoization.\", \"name\": \"fibonacci\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The nth Fibonacci number.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"A positive integer.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Returns the smallest x such that x * x > n for a given n.\", \"name\": \"smallest_x\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The smallest x such that x * x > n.\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The given number.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Returns a dictionary of the top scores across all games.\\n\\nThe keys are the names of the games and the values are the corresponding top score.\", \"name\": \"get_top_scores\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"A list of dictionaries, with each dictionary having a key called `scores` and its value being another dictionary containing game scores.\", \"items\": {\"additionalProperties\": {\"additionalProperties\": {\"type\": \"integer\"}, \"type\": \"object\"}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"data\"], \"type\": \"object\"}}, {\"description\": \"Finds the smallest unused number in an array.\", \"name\": \"smallest_unused_number\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The smallest unused number.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"array\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"array\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Checks whether the object `x` is an instance of the `Human` class.\", \"name\": \"is_human_object\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the object `x` is an instance of the `Human` class, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The object to be checked.\"}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"fibonacci\", \"arguments\": {\"n\": 10}, \"label\": \"$var1\"}, {\"name\": \"smallest_x\", \"arguments\": {\"n\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n8\n\nNow solve:\nConvert 1000000000 nanoseconds to microseconds, then format the result as a string with the format \"HH:MM:SS\".\n\nUse this API documentation for reference: [{\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Filters a list of file names and returns a new list containing only those file names that have the \\\".py\\\" extension, regardless of case.\", \"name\": \"filter_python_files\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"file_names\": {\"description\": \"A list of file names.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"file_names\"], \"type\": \"object\"}}, {\"description\": \"Converts a nanosecond duration to microseconds rounded down to the nearest integer.\", \"name\": \"convert_nanosecond_to_microsecond\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"nanosecond\": {\"description\": \"The duration in nanoseconds.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"nanosecond\"], \"type\": \"object\"}}, {\"description\": \"Flattens a list of lists, but only if all the elements in the top-level list are lists.\\nIf there is an element that is not a list, the function raises a TypeError exception.\", \"name\": \"flatten_list_with_type_validation\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"A list of lists.\", \"items\": {\"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of indices for which the corresponding value is the minimum value in `a`.\", \"name\": \"min_indices\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of indices.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"A non-empty list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"a\"], \"type\": \"object\"}}, {\"description\": \"Returns a constant value of 1 no matter what input is given.\", \"name\": \"constant_function\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"input_value\": {\"description\": \"The input value, which can be of any type.\"}}, \"required\": [\"input_value\"], \"type\": \"object\"}}, {\"description\": \"Reads a binary file containing a list of integers, where each integer is serialized as four bytes.\", \"name\": \"read_serialized_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of integers representing the serialized integers from the file.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the binary file.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Partitions a command string into subcommands.\", \"name\": \"partition\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of subcommands.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"command\": {\"description\": \"The command string to partition.\", \"type\": \"string\"}}, \"required\": [\"command\"], \"type\": \"object\"}}, {\"description\": \"Extracts the primary key from a table name.\", \"name\": \"get_primary_key\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The primary key of the table, or None if the table name does not match the expected pattern.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"table_name\": {\"description\": \"The name of the table.\", \"type\": \"string\"}}, \"required\": [\"table_name\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Converts a time duration in seconds to a string of the form \\\"HH:MM:SS\\\".\", \"name\": \"duration_to_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"duration\": {\"description\": \"A positive integer or float representing a duration in seconds.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"duration\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Creates a new list with all entries initialized to None.\", \"name\": \"initialize_list_to_none\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list with all entries initialized to None.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"l\": {\"description\": \"The input list.\", \"items\": {}, \"type\": \"array\"}}, \"required\": [\"l\"], \"type\": \"object\"}}, {\"description\": \"Calculates the percentage of positive integers in a list.\", \"name\": \"percent_positive\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The percentage of positive integers in the list.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of positive integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Formats an object into a string by concatenating its `id` and `name` attributes, separated by a colon.\", \"name\": \"format_obj\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The object to be formatted.\"}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Gets the full path of a file in the user's home folder.\", \"name\": \"get_full_path_of_file\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The name of the file.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"filename\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of all suffixes of the input string.\\n\\nA suffix is a substring that starts from a specific position and extends to the end of the string.\", \"name\": \"all_suffixes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of all suffixes of the input string.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Determines if the parentheses in a string are balanced.\", \"name\": \"isValid\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the parentheses are balanced, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string consisting of parentheses characters.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 650,
    "text": "Example:\n\nInstruction:\nWhat is the sum of the multiples of 4 between 38 and 127 inclusive?\n\nUse this API documentation for reference: [{\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 127, \"arg_1\": 3}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 38, \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 2}}, {\"name\": \"subtract\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 127, \"arg_1\": 3}}, {\"name\": \"add\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 38, \"arg_1\": 2}}, {\"name\": \"subtract\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": \"$var_6.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_7.result$\", \"arg_1\": 4}}, {\"name\": \"add\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": \"$var_8.result$\", \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_9.result$\"}}]\n\nGold Answer:\n1804.0\n\nNow solve:\nConsider the sets Tn= {n, n + 1, n + 2, n + 3, n + 4), where n = 1, 2, 3, \u2026 , 96. How many of these sets contain 6 or any integral multiple thereof (i.e., any one of the numbers 6, 12, 18, \u2026)?\n\nUse this API documentation for reference: [{\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 651,
    "text": "Example:\n\nInstruction:\n20 is subtracted from 60% of a number, the result is 88. Find the number?\n\nUse this API documentation for reference: [{\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 20, \"arg_1\": 88}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 60, \"arg_1\": 100}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n180.0\n\nNow solve:\nAndy solves problems 74 to 135 inclusive in a Math exercise. How many problems does he solve?\n\nUse this API documentation for reference: [{\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 652,
    "text": "Example:\n\nInstruction:\nFind the distance covered by a man walking for 10min at a speed of 6km/hr?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 6, \"arg_1\": 1000}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 60}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 10, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 1000}}]\n\nGold Answer:\n1.0\n\nNow solve:\nP can do a work in the same time in which Q and R together can do it. If P and Q work together, the work can be completed in 10 days. R alone needs 20 days to complete the same work. then Q alone can do it in\n\nUse this API documentation for reference: [{\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 653,
    "text": "Example:\n\nInstruction:\nIf the average of 6 digits is 16 and the average of 4 of them is 10, calculate the average of the remaining 2 numbers?\n\nUse this API documentation for reference: [{\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 6, \"arg_1\": 16}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 10}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 2}}]\n\nGold Answer:\n28.0\n\nNow solve:\nOut of 40 applicants to a law school, 15 majored in political science, 20 had a grade point average higher than 3.0, and 10 did not major in political science and had a GPA equal to or lower than 3.0. How many T applicants majored in political science and had a GPA higher than 3.0?\n\nUse this API documentation for reference: [{\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 654,
    "text": "Example:\n\nInstruction:\nA pair of articles was bought for $50 at a discount of 50%. What must be the marked price of each of the article?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 50}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 50, \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n12.5\n\nNow solve:\nIf 'A' completes a piece of work in 3 days, which 'B' completes it in 5 days and 'C' takes 10 days to complete the same work. How long will they take to complete the work , if they work together?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 655,
    "text": "Example:\n\nInstruction:\nA certain drink of type A is prepared by mixing 4 parts milk with 3 parts fruit juice. Another drink of type B is prepared by mixing 4 parts of fruit juice and 3 parts of milk. How many liters of fruit juice must be added to 84 liters of drink A to convert it to drink B?\n\nUse this API documentation for reference: [{\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 3}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 4, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 84}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 4}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 3}}, {\"name\": \"add\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 3}}, {\"name\": \"divide\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": 3, \"arg_1\": \"$var_6.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_7.result$\", \"arg_1\": 84}}, {\"name\": \"subtract\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": \"$var_8.result$\"}}]\n\nGold Answer:\n28.0\n\nNow solve:\nIf -4 and -8 are negative integers, then -4*-8 + 2 is\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 656,
    "text": "Example:\n\nInstruction:\nThe average salary of all the workers in a workshop is Rs. 8000. The average salary of 7 technicians is Rs. 12000 and the average salary of the rest is Rs. 6000. The total number of workers in the workshop is?\n\nUse this API documentation for reference: [{\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 12000, \"arg_1\": 8000}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 7, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 8000, \"arg_1\": 6000}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 7, \"arg_1\": \"$var_4.result$\"}}]\n\nGold Answer:\n21.0\n\nNow solve:\nIf a > x > y > z on the number line, y is halfway between x and z, and x is halfway between w and z, then (y - x)/(y - a) =\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 657,
    "text": "Example:\n\nInstruction:\nI want to calculate the sum of the cubes of all integers from 1 to 10, then hash the resulting integer as an ASCII string.\n\nUse this API documentation for reference: [{\"description\": \"Pads a list of integers with zeros until its length is a multiple of a given integer.\", \"name\": \"pad_buffer\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The list of integers to pad.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"n\": {\"description\": \"The integer to divide the length of the list by.\", \"type\": \"integer\"}}, \"required\": [\"lst\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Rotates a canvas image counterclockwise by 90 degrees in-place.\", \"name\": \"rotate_image_90_degrees\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The rotated canvas image.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"canvas_image\": {\"description\": \"A 2D array representing the canvas image. Each element is an integer representing a pixel color value.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"canvas_image\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the inverse logarithm value given a logarithm value and its base.\", \"name\": \"calculate_inverse_log\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The inverse logarithm value.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"base\": {\"description\": \"The base of the logarithm.\", \"type\": \"number\"}, \"log_val\": {\"description\": \"The logarithm value.\", \"type\": \"number\"}}, \"required\": [\"log_val\", \"base\"], \"type\": \"object\"}}, {\"description\": \"Checks whether an object has an attribute named `foo` and returns `True` if it does, `False` otherwise.\", \"name\": \"has_foo_attribute\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"`True` if the object has an attribute named `foo`, `False` otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The object to check for the attribute.\"}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of the cubes of all integers from 1 to `n`.\", \"name\": \"cube_integer_sum\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The upper limit of the range of integers.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Joins a list of bytes-like objects with a separator string.\", \"name\": \"join_bytes_with_separator\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A single bytes-like object containing the input bytes-like objects\\n    concatenated with the separator string.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"input\": {\"description\": \"A list of bytes-like objects.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}, \"separator\": {\"description\": \"A separator string.\", \"type\": \"object\"}}, \"required\": [\"input\", \"separator\"], \"type\": \"object\"}}, {\"description\": \"Calculates the hash value of an ASCII string.\", \"name\": \"hash_ascii_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The ASCII string to be hashed.\", \"type\": \"object\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Finds the maximum value in a binary tree.\", \"name\": \"find_maximum\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"root\": {\"description\": \"The root node of the binary tree.\", \"nullable\": true, \"type\": \"object\"}}, \"required\": [\"root\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of the values of the specified attribute for all entities in the list that have that attribute.\\nIf the entity does not have the attribute, the corresponding value is None.\", \"name\": \"get_attribute_values_for_entities\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"attribute_name\": {\"description\": \"The name of the attribute to retrieve.\", \"type\": \"string\"}, \"entities\": {\"description\": \"A list of entities.\", \"items\": {}, \"type\": \"array\"}}, \"required\": [\"entities\", \"attribute_name\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Creates a dictionary where each key in `keys` maps to `default_value`.\\nIf `default_value` is `None`, set the default value to an empty dictionary.\", \"name\": \"create_dict_with_default_value\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where each key in `keys` maps to `default_value`.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"default_value\": {\"description\": \"The value to map each key to. If `None`, use an empty dictionary.\", \"nullable\": true, \"type\": \"string\"}, \"keys\": {\"description\": \"A list of strings to use as keys in the dictionary.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"keys\", \"default_value\"], \"type\": \"object\"}}, {\"description\": \"Splits a string into a list of strings based on multiple delimiters.\", \"name\": \"split\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings representing the split segments of the original string.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"delimiters\": {\"description\": \"A list of delimiters (strings) to split the string on.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"string\": {\"description\": \"The string to split.\", \"type\": \"string\"}}, \"required\": [\"string\", \"delimiters\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"cube_integer_sum\", \"arguments\": {\"n\": 10}, \"label\": \"$var1\"}, {\"name\": \"hash_ascii_string\", \"arguments\": {\"string\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n3025\n\nNow solve:\nI want to generate a hyperlink with the title 'Google' and the URL 'www.google.com'. Then, I want to remove the trailing slash from the URL.\n\nUse this API documentation for reference: [{\"description\": \"Calculates the peak amplitude of a time series.\", \"name\": \"calculate_peak_amplitude\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"data_points\": {\"description\": \"A NumPy array representing the time series data.\", \"type\": \"object\"}, \"sampling_rate\": {\"description\": \"A float representing the sampling frequency.\", \"type\": \"object\"}}, \"required\": [\"data_points\", \"sampling_rate\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of two numbers representing the camera's x and y coordinates.\", \"name\": \"get_camera_coordinates\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"camera_name\": {\"description\": \"A string representing the camera name. The camera name will always have the format `CAM_X_Y` where `X` and `Y` are integers of the camera's x and y coordinates.\", \"type\": \"string\"}}, \"required\": [\"camera_name\"], \"type\": \"object\"}}, {\"description\": \"Traverses a nested dictionary and returns a sorted list of all keys, including nested keys.\", \"name\": \"traverse_and_sort_keys\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A sorted list of keys in alphabetical order, with nested keys separated by slashes ('/').\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {}, \"description\": \"The dictionary to traverse.\", \"type\": \"object\"}, \"prefix\": {\"description\": \"The prefix to add to the keys.\", \"type\": \"string\"}}, \"required\": [\"dictionary\"], \"type\": \"object\"}}, {\"description\": \"Generates a hyperlink, represented as a string in HTML format, from a given title and URL.\", \"name\": \"generate_hyperlink\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"title\": {\"description\": \"The title of the hyperlink.\", \"type\": \"string\"}, \"url\": {\"description\": \"The URL of the hyperlink.\", \"type\": \"string\"}}, \"required\": [\"title\", \"url\"], \"type\": \"object\"}}, {\"description\": \"Checks if a string contains at least one vowel.\", \"name\": \"has_vowel\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the string contains at least one vowel, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"nullable\": true, \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Creates a hyperlink in HTML given a label and a URL.\", \"name\": \"create_link\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"An HTML string with the `<a>` tag containing the link.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"label\": {\"description\": \"The label for the hyperlink.\", \"type\": \"string\"}, \"url\": {\"description\": \"The URL for the hyperlink.\", \"type\": \"string\"}}, \"required\": [\"label\", \"url\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Removes the trailing slash from a URL.\", \"name\": \"remove_trailing_slash\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The cleaned URL.\", \"type\": [\"object\", \"string\"]}}}, \"parameters\": {\"properties\": {\"url\": {\"description\": \"The URL to clean.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"url\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Converts a dictionary into a list of dictionaries.\\nEach entry in the list corresponds to a key-value pair in the input dictionary.\", \"name\": \"convert_to_list_of_dicts\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of dictionaries.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"d\": {\"additionalProperties\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"description\": \"The input dictionary.\", \"type\": \"object\"}}, \"required\": [\"d\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the degree of an integer `n`.\\n\\nThe degree of an integer is the number of bits that are set to 1 in its binary representation.\", \"name\": \"get_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The degree of `n`.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The integer to calculate the degree of.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of a range of numbers from 1 to n, inclusive.\", \"name\": \"sum_of_range\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"A positive integer or float.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Determines the unique elements in a list and assigns them to integer indices starting from 0.\\nReturns a dictionary where the keys are the unique elements and the values are the assigned indices.\", \"name\": \"assign_indices\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The input list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}, {\"description\": \"Sum the values of a dictionary of dictionaries.\", \"name\": \"sum_dictionary_of_dictionaries\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary with the sum of the values for each key.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"d\": {\"additionalProperties\": {\"additionalProperties\": {\"type\": \"integer\"}, \"type\": \"object\"}, \"description\": \"A dictionary of dictionaries.\", \"type\": \"object\"}}, \"required\": [\"d\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Extracts strings containing underscores from a list of strings.\", \"name\": \"extract_names_with_underscore\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list containing only the strings that contain underscores.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"strings\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"strings\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 658,
    "text": "Example:\n\nInstruction:\nA swimmer can swim in still water at 4 km/h. If the speed of the water current is 2 km/h, how many hours will the swimmer take to swim against the current for 8 km?\n\nUse this API documentation for reference: [{\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 8, \"arg_1\": \"$var_1.result$\"}}]\n\nGold Answer:\n4.0\n\nNow solve:\nA sells a Cricket Bat to B at a profit of 20%. B sells it to C at a profit of 25%. If C pays $225 for it, the cost price of the Cricket Bat for A is:\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 659,
    "text": "Example:\n\nInstruction:\ncity A to city B, Andrew drove for 1 hour at 50 mph and for 3 hours at 60 mph. What was the average speed for the whole trip?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 50, \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 60, \"arg_1\": 3}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_4.result$\"}}]\n\nGold Answer:\n57.5\n\nNow solve:\nHow many unique positive odd integers less than 70 are equal to the product of a positive multiple of 5 and an odd number?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 660,
    "text": "Example:\n\nInstruction:\nGiven a hex string '#FF0000', convert it to HLS, then find the index of the single element that is equal to the mean value of the HLS tuple.\n\nUse this API documentation for reference: [{\"description\": \"Complements a DNA sequence by mapping nucleotides according to the given rules.\", \"name\": \"complement_dna_sequence\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The complemented DNA sequence.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"dna_sequence\": {\"description\": \"The DNA sequence to be complemented.\", \"type\": \"string\"}}, \"required\": [\"dna_sequence\"], \"type\": \"object\"}}, {\"description\": \"Queries the database for all users who joined within the specified date range.\\nThe function takes three arguments: the database connection object, the start date, and the end date.\\nThe function returns a list of tuples, with each tuple representing the user information (id, username, email, and date of joining).\", \"name\": \"get_users_by_date\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"conn\": {\"description\": \"The database connection object.\", \"type\": \"object\"}, \"end_date\": {\"description\": \"The end date of the range.\", \"type\": \"string\"}, \"start_date\": {\"description\": \"The start date of the range.\", \"type\": \"string\"}}, \"required\": [\"conn\", \"start_date\", \"end_date\"], \"type\": \"object\"}}, {\"description\": \"Converts a hex string (RGB) to HLS (Hue, Lightness, Saturation).\", \"name\": \"convert_hex_to_hls\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple of floats (H, L, S) representing the HLS color.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"hex_string\": {\"description\": \"The hex string representing the RGB color.\", \"type\": \"string\"}}, \"required\": [\"hex_string\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Filters survey results by dropping rows with NaN values in the 'survey_question_1' column,\\nrenaming columns, and writing the resulting DataFrame to a new CSV file.\", \"name\": \"filter_survey_results\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The filtered DataFrame.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The file path to the CSV file containing the survey results.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Determines the remote origin name based on the given Git repository URL and branch name.\", \"name\": \"get_origin_name\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"branch_name\": {\"description\": \"The name of the branch.\", \"type\": \"string\"}, \"repo_url\": {\"description\": \"The URL of the Git repository.\", \"type\": \"string\"}}, \"required\": [\"repo_url\", \"branch_name\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Finds the index of an element in a 1D numpy array that is equal to the mean value of the array.\", \"name\": \"find_mean_index\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The index of the single element that is equal to the mean value of the array, or -1 if there is no such element.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"arr\": {\"description\": \"The input 1D numpy array.\", \"type\": \"object\"}}, \"required\": [\"arr\"], \"type\": \"object\"}}, {\"description\": \"Formats statistics using a format string.\", \"name\": \"format_stats\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"format_str\": {\"description\": \"A string with replacement field names for the keys in `stats`.\", \"type\": \"string\"}, \"stats\": {\"additionalProperties\": {\"type\": \"number\"}, \"description\": \"A dictionary of statistics with keys as `mean`, `median`, or `standard_deviation`.\", \"type\": \"object\"}}, \"required\": [\"stats\", \"format_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the arithmetic average of three factors in a pandas dataframe.\", \"name\": \"get_average_of_three_factors\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"df\": {\"description\": \"The pandas dataframe containing the factors.\", \"type\": \"object\"}}, \"required\": [\"df\"], \"type\": \"object\"}}, {\"description\": \"Randomly selects a number from the range [-k, k] k times, where k is a positive integer.\", \"name\": \"random_selection\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the selected numbers.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"k\": {\"description\": \"A positive integer.\", \"type\": \"integer\"}}, \"required\": [\"k\"], \"type\": \"object\"}}, {\"description\": \"Calculates the number of distinct characters in a string.\", \"name\": \"count_distinct_characters\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Counts the number of elements where tensor1 and tensor2 are equal and non-zero.\", \"name\": \"count_non_zero_pixels\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"tensor1\": {\"description\": \"A tensor.\", \"type\": \"object\"}, \"tensor2\": {\"description\": \"A tensor of the same shape as tensor1.\", \"type\": \"object\"}}, \"required\": [\"tensor1\", \"tensor2\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"convert_hex_to_hls\", \"arguments\": {\"hex_string\": \"#FF0000\"}, \"label\": \"$var1\"}, {\"name\": \"find_mean_index\", \"arguments\": {\"arr\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n1\n\nNow solve:\nCalculate the density of a cube with a length of 5 and a density of 10. Then, convert the density to a floating-point value.\n\nUse this API documentation for reference: [{\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Converts a string, integer, or float to a floating-point value.\", \"name\": \"convert_val_to_float\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The converted value as a floating-point value, or None if the conversion is not possible.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"val\": {\"description\": \"The value to convert.\", \"nullable\": true, \"type\": [\"integer\", \"number\", \"string\"]}}, \"required\": [\"val\"], \"type\": \"object\"}}, {\"description\": \"Serializes a Python tuple as a string representation of a Python tuple literal.\", \"name\": \"serialize_tuple\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The string representation of the tuple.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"tup\": {\"description\": \"The tuple to serialize.\", \"type\": \"object\"}}, \"required\": [\"tup\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Reads a file with strings on each line, and returns a list of numbers found in the file.\\nHandles parsing errors gracefully, returning an empty list if an error occurs.\", \"name\": \"read_file_and_return_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of integers found in the file.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the file to read.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of error value strings from a list of dictionaries.\", \"name\": \"get_error_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of error value strings.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"list_of_dicts\": {\"description\": \"A list of dictionaries containing error information.\", \"items\": {\"additionalProperties\": {\"type\": \"string\"}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"list_of_dicts\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Formats a list of slog objects into a string.\\n\\nEach line in the output string is in the format: \\\"{timestamp} [{level}] {message}\\\".\", \"name\": \"format_slogs\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A formatted string containing the slog lines.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"slog_objects\": {\"description\": \"A list of slog objects.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"slog_objects\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the density of a cube given its dimensions and density.\", \"name\": \"cube_density\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The density of the cube.\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"density\": {\"description\": \"The density of the cube.\", \"type\": [\"integer\", \"number\"]}, \"length\": {\"description\": \"The length of each edge of the cube.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"length\", \"density\"], \"type\": \"object\"}}, {\"description\": \"Formats a given time interval into a string in the format `HH:MM:SS`.\", \"name\": \"format_time_interval\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string representation of the time interval in the format `HH:MM:SS`.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"interval\": {\"description\": \"The time interval in seconds.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"interval\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 661,
    "text": "Example:\n\nInstruction:\nI want to generate a list of binary numbers with a size of 5 and a padding length of 8, then search for the name 'John' in a list of names ['John', 'Jane', 'Doe'], and finally sleep for 2 seconds before returning the list.\n\nUse this API documentation for reference: [{\"description\": \"Converts a date and time string into the EXIF standard format.\", \"name\": \"convert_to_exif_format\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"date_time_string\": {\"description\": \"A date and time string in the \\\"YYYY-MM-DD HH:MM:SS\\\" format, or a datetime object.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"date_time_string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list containing items that appear in both list1 and list2 in the same order.\", \"name\": \"compare_two_lists\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"list1\": {\"description\": \"The first list.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"list2\": {\"description\": \"The second list.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"list1\", \"list2\"], \"type\": \"object\"}}, {\"description\": \"Generates a list of binary numbers with the specified size and padding length.\", \"name\": \"generate_bin_nums\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of binary numbers, each with the specified padding length.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"padding\": {\"description\": \"The length of each binary number.\", \"type\": \"integer\"}, \"size\": {\"description\": \"The number of binary numbers to generate.\", \"type\": \"integer\"}}, \"required\": [\"size\", \"padding\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a new dictionary with all keys in lowercase and any keys starting with \\\"id_\\\" removed.\", \"name\": \"get_new_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new dictionary with the specified modifications.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"input_dict\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"The input dictionary.\", \"type\": \"object\"}}, \"required\": [\"input_dict\"], \"type\": \"object\"}}, {\"description\": \"Searches for a given name in a list of names.\", \"name\": \"search_name\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"name_to_search\": {\"description\": \"The name to search for.\", \"type\": \"string\"}, \"names\": {\"description\": \"A list of names.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"names\", \"name_to_search\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Constructs a query string for the search API of a web service.\", \"name\": \"construct_query_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"api_key\": {\"description\": \"The API key to be included in the query string.\", \"type\": \"string\"}, \"search_term\": {\"description\": \"The search term to be included in the query string.\", \"type\": \"string\"}}, \"required\": [\"search_term\", \"api_key\"], \"type\": \"object\"}}, {\"description\": \"Check whether the environment variable FOO_BAR_BAZ is set.\", \"name\": \"is_foo_bar_baz_set\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"bool: True if the environment variable is set, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Converts a string to a list of strings in a reverse manner, with each element of the list representing a letter of the string.\", \"name\": \"reverse_string_to_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings representing the input string in reverse order.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Validates a mesh and removes redundant elements from the mesh.\", \"name\": \"clean_mesh\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"mesh\": {\"description\": \"The input mesh to be cleaned.\", \"type\": \"object\"}}, \"required\": [\"mesh\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a new dictionary with only those keys from the original dictionary that exist in the list of keys.\\nIf any of the keys are not found in the original dictionary, the function returns an empty dictionary.\", \"name\": \"get_keys_from_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"d\": {\"additionalProperties\": {\"type\": \"object\"}, \"description\": \"The original dictionary.\", \"type\": \"object\"}, \"keys\": {\"description\": \"The list of keys to extract from the original dictionary.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"d\", \"keys\"], \"type\": \"object\"}}, {\"description\": \"Returns the first 10 lines of the file in a list of strings.\\nIf the file does not exist, returns an empty list.\\nIf the file contains less than 10 lines, returns all the lines in the file.\", \"name\": \"get_first_10_lines\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The name of the file.\", \"type\": \"string\"}}, \"required\": [\"filename\"], \"type\": \"object\"}}, {\"description\": \"Finds the index of the first element in the list that contains all parameters with matching values.\", \"name\": \"find_index_by_params\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The index of the first element in the list that contains all parameters with matching values, or None if no such element is found.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"A list of dictionaries.\", \"items\": {\"additionalProperties\": {}, \"type\": \"object\"}, \"type\": \"array\"}, \"params\": {\"additionalProperties\": {}, \"description\": \"A dictionary of parameters.\", \"type\": \"object\"}}, \"required\": [\"lst\", \"params\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Sleeps for the specified duration before returning the list.\", \"name\": \"sleep_and_return\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"items\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"sleep_duration\": {\"description\": \"The duration to sleep in seconds.\", \"type\": \"number\"}}, \"required\": [\"items\", \"sleep_duration\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"generate_bin_nums\", \"arguments\": {\"size\": 5, \"padding\": 8}, \"label\": \"$var1\"}, {\"name\": \"search_name\", \"arguments\": {\"names\": [\"John\", \"Jane\", \"Doe\"], \"name_to_search\": \"John\"}, \"label\": \"$var2\"}, {\"name\": \"sleep_and_return\", \"arguments\": {\"items\": \"$var1.output_0$\", \"sleep_duration\": 2}, \"label\": \"$var3\"}]\n\nGold Answer:\n['00000001', '00000010', '00000011', '00000100', '00000101']\n\nNow solve:\nDaniel went to a shop and bought things worth Rs. 25, out of which 60 Paise went on sales tax on taxable purchases. If the tax rate was 6%, then what was the cost of the tax free items?\n\nUse this API documentation for reference: [{\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 662,
    "text": "Example:\n\nInstruction:\nThe owner of a furniture shop charges his customer 25% more than the cost price. If a customer paid Rs. 8400 for a computer table, then what was the cost price of the computer table?\n\nUse this API documentation for reference: [{\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 25, \"arg_1\": 100}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 8400, \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n6720.0\n\nNow solve:\nMr. Shah decided to walk down the escalator of a tube station. He found \u00c2 that if he walks down 26 steps, he requires 30 seconds to reach the bottom. However, if he steps down 34 stairs he would only require 18 seconds to get to the bottom. If the time is measured from the moment the top step begins \u00c2 to descend to the time he steps off the last step at the bottom, find out the height of the stair way in steps?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 663,
    "text": "Example:\n\nInstruction:\nHow many different ways can 2 students be seated in a row of 4 desks, so that there is always at least one empty desk between the students?\n\nUse this API documentation for reference: [{\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 1}}, {\"name\": \"permutation\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}]\n\nGold Answer:\n6.0\n\nNow solve:\n2 is what percent of 40?\n\nUse this API documentation for reference: [{\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 664,
    "text": "Example:\n\nInstruction:\nThe cash difference between the selling prices of an article at a profit of 8% and 6% is Rs. 3. The ratio of the two selling prices is?\n\nUse this API documentation for reference: [{\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 8}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 6}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n1.0188679245283019\n\nNow solve:\nConvert the group ID 123 to its corresponding group name. Then, convert the group name to its MD5 hash.\n\nUse this API documentation for reference: [{\"description\": \"Normalizes a string by replacing all non-alphanumeric characters with underscores and converting to lowercase.\\nThe function also groups repeated underscores and trims leading and trailing underscores.\", \"name\": \"normalize_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string to be normalized.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Converts a numeric group ID to its corresponding group name.\\nIf the group ID is not found, then the function returns the group ID as a string.\\nAlso, handles any potential `KeyError` exceptions gracefully and returns `None` in that case.\", \"name\": \"gid2name\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"gid\": {\"description\": \"The numeric group ID.\", \"type\": \"integer\"}}, \"required\": [\"gid\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Converts a given string into its MD5 hash and returns the result as a lowercase hex string.\", \"name\": \"string_to_md5\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The MD5 hash of the input string as a lowercase hex string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string to be converted into its MD5 hash.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Sorts the keys of a dictionary by their corresponding values in descending order.\", \"name\": \"sort_keys_by_value\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of keys sorted by their corresponding values in descending order.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"The dictionary to sort.\", \"type\": \"object\"}}, \"required\": [\"dictionary\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the first `n` Fibonacci numbers using recursion.\", \"name\": \"fib_recursive\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The `nth` Fibonacci number.\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"A non-negative integer representing the number of Fibonacci numbers to generate.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Returns a string of the form \\\"N [thing]\\\" based on the input number.\", \"name\": \"get_thing_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"num\": {\"description\": \"The input number.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"num\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Returns the root key of a JSON object from a file.\\nIf the JSON object has multiple root keys, returns the first one.\\nIf the file path does not exist, returns None.\", \"name\": \"get_root_key\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the JSON file.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Generates terms of a geometric progression given a starting value `a`, a common ratio `r`, and a number of terms `n`.\", \"name\": \"generate_geometric_progression\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of `n` terms, where each term is the product of the previous term and the common ratio `r`.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The starting value of the geometric progression.\", \"type\": \"number\"}, \"n\": {\"description\": \"The number of terms to generate.\", \"type\": \"integer\"}, \"r\": {\"description\": \"The common ratio of the geometric progression.\", \"type\": \"number\"}}, \"required\": [\"a\", \"r\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 665,
    "text": "Example:\n\nInstruction:\nA straight line in the xy-plane has a slope of 2 and a y-intercept of 2. On this line, what is the x-coordinate of the point whose y-coordinate is 550 ?\n\nUse this API documentation for reference: [{\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 550, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}]\n\nGold Answer:\n274.0\n\nNow solve:\nHow many positive integers Q between 200 and 300 (both inclusive) are not divisible by 2, 3 or 5?\n\nUse this API documentation for reference: [{\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 666,
    "text": "Example:\n\nInstruction:\nWhen positive integer k is divided by 5, the remainder is 2. When k is divided by 6, the remainder is 5. If k is less than 24, what is the remainder when k is divided by 7?\n\nUse this API documentation for reference: [{\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 12, \"arg_1\": 5}}, {\"name\": \"reminder\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 7}}]\n\nGold Answer:\n3.0\n\nNow solve:\nA reduction of 30% in the price of oil enables a house wife to obtain 6kgs more for Rs.940, what is the reduced price for kg?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 667,
    "text": "Example:\n\nInstruction:\nThe angle between the minute hand and the hour hand of a clock when the time is 11.30, is\n\nUse this API documentation for reference: [{\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 4}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 4}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 4}}, {\"name\": \"subtract\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": \"$var_7.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_8.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": 60, \"arg_1\": 2}}, {\"name\": \"subtract\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": \"$var_9.result$\", \"arg_1\": \"$var_10.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_12\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 4}}, {\"name\": \"subtract\", \"label\": \"$var_13\", \"arguments\": {\"arg_0\": \"$var_12.result$\", \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_14\", \"arguments\": {\"arg_0\": \"$var_11.result$\", \"arg_1\": \"$var_13.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_15\", \"arguments\": {\"arg_0\": \"$var_14.result$\", \"arg_1\": 2}}]\n\nGold Answer:\n165.0\n\nNow solve:\nCreate a dictionary containing the count of each character in the string \"hello world\", then wrap the values associated with the key 'o' in a list if they are not already a list.\n\nUse this API documentation for reference: [{\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the average of all numbers in a list of lists.\", \"name\": \"average_of_lists\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The average of all numbers in the lists.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"lists\": {\"description\": \"A list of lists of numbers.\", \"items\": {\"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"lists\"], \"type\": \"object\"}}, {\"description\": \"Formats a list of names into a string of names separated by commas.\\nThe last two names are separated by an ampersand.\", \"name\": \"name_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"names\": {\"description\": \"A list of names.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"names\"], \"type\": \"object\"}}, {\"description\": \"Wraps the values associated with the key 'k' in a list if they are not already a list.\", \"name\": \"wrap_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"input_dict\": {\"additionalProperties\": {}, \"description\": \"The input dictionary.\", \"type\": \"object\"}}, \"required\": [\"input_dict\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Checks whether a given tensor is unique (all values are distinct).\", \"name\": \"check_tensor_unique\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the tensor is unique, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"tensor\": {\"description\": \"The tensor to check.\", \"type\": \"object\"}}, \"required\": [\"tensor\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Combines a string and a list of words into a new string.\", \"name\": \"format_content\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new string with each word in `words` enclosed in double quotes,\\n    separated by commas, and appended to the end of the original string `s`.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The original string.\", \"type\": \"string\"}, \"words\": {\"description\": \"The list of words to be appended to the original string.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"s\", \"words\"], \"type\": \"object\"}}, {\"description\": \"Returns a list containing only the values that are present in `a` but not in `b`.\", \"name\": \"get_values_only_in_a\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of integers.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"b\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Generates an attention mask matrix for a transformer model given input IDs and a pad token ID.\\n\\nThe attention mask is a binary matrix where 1 indicates that the corresponding token should be attended to and 0 indicates that the token should be ignored.\", \"name\": \"create_attention_mask\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The attention mask tensor.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"input_ids\": {\"description\": \"The input IDs tensor.\", \"type\": \"object\"}, \"pad_token_id\": {\"description\": \"The pad token ID.\", \"type\": \"integer\"}}, \"required\": [\"input_ids\", \"pad_token_id\"], \"type\": \"object\"}}, {\"description\": \"Clips the RGB values of each pixel in an image to be within a given range.\", \"name\": \"clip_image\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"image\": {\"description\": \"A 2D list representing an image, where each inner list is a pixel with RGB values.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}, \"max\": {\"description\": \"The maximum value for the RGB values.\", \"type\": \"integer\"}, \"min\": {\"description\": \"The minimum value for the RGB values.\", \"type\": \"integer\"}}, \"required\": [\"image\", \"min\", \"max\"], \"type\": \"object\"}}, {\"description\": \"Creates a dictionary containing the count of each character in the string.\", \"name\": \"get_count_dictionary\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the keys are the characters in the string and the values are the counts of each character.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Expands a path and checks if it exists.\", \"name\": \"expand_and_check\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The expanded path if it exists, otherwise `None`.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"path\": {\"description\": \"The path to expand and check.\", \"type\": \"string\"}}, \"required\": [\"path\"], \"type\": \"object\"}}, {\"description\": \"Creates a regular expression that matches the given input string.\", \"name\": \"input_to_regex\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string to be converted into a regular expression.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 668,
    "text": "Example:\n\nInstruction:\nI have a string 'a,b,c'. I want to transform it into a tab-separated string and then extract a nested data structure from it.\n\nUse this API documentation for reference: [{\"description\": \"Replaces all occurrences of Japanese numbers with the corresponding English numbers.\", \"name\": \"replace_japanese_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"string\"]}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"The input string or integer containing Japanese numbers.\", \"type\": [\"integer\", \"string\"]}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Finds all file names in a directory and its subdirectories matching a specific regular expression pattern and then randomly samples `n` of them.\\nReturns the list of sampled file names in sorted order.\", \"name\": \"sample_files\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The number of files to sample.\", \"type\": \"integer\"}, \"path\": {\"description\": \"The path to the directory to search.\", \"type\": \"string\"}, \"regex\": {\"description\": \"The regular expression pattern to match against the file names.\", \"type\": \"string\"}}, \"required\": [\"path\", \"regex\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Generates a JSON serialized result from a list of dictionaries and a list of keys.\\nThe dictionaries represent a series of enumerations and the keys represent the name of the enumeration.\\nThe function returns a JSON serialized result with each key as an object name and each enumeration as its value.\", \"name\": \"generate_json_from_enumerations\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"enumerations\": {\"description\": \"A list of dictionaries representing the enumerations.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}, \"keys\": {\"description\": \"A list of keys representing the name of the enumeration.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"enumerations\", \"keys\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a string with the integers in the input list separated by underscores.\\nIf the input list is empty, it returns an empty string.\\nIf the input list contains non-integer elements, it returns the string \\\"None\\\".\\nIf the input list contains negative numbers, it returns the string \\\"Negative\\\".\\nIf an exception occurs during the execution of the function, it returns the string \\\"Error\\\".\", \"name\": \"underscored_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"input_list\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the maximum possible value of any string in the list of words.\\n\\nEach letter's value is the index (1-indexed) of its position in the alphabet.\\nFor example, a = 1, b = 2, c = 3, and so on.\", \"name\": \"max_string_value\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The maximum possible value of any string in the list of words.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"values\": {\"description\": \"A list of integers representing the corresponding values of the letters.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"words\": {\"description\": \"A list of strings containing only lowercase alphabets.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"words\", \"values\"], \"type\": \"object\"}}, {\"description\": \"Returns a tuple containing the values of the three arguments in the reverse order.\", \"name\": \"example_function\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"first_arg\": {\"description\": \"The first argument.\"}, \"second_arg\": {\"description\": \"The second argument.\"}, \"third_arg\": {\"description\": \"The third argument.\"}}, \"required\": [\"first_arg\", \"second_arg\", \"third_arg\"], \"type\": \"object\"}}, {\"description\": \"Transforms a string of comma-separated values into a string of tab-separated values.\", \"name\": \"transform_to_tsv\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"csv_string\": {\"description\": \"A string of comma-separated values.\", \"type\": \"string\"}}, \"required\": [\"csv_string\"], \"type\": \"object\"}}, {\"description\": \"Generates a personalized greeting string in the specified language.\", \"name\": \"generate_greeting\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"language\": {\"description\": \"The language code (such as 'en' for English or 'es' for Spanish).\", \"type\": \"string\"}, \"name\": {\"description\": \"The name to be included in the greeting.\", \"type\": \"string\"}}, \"required\": [\"language\", \"name\"], \"type\": \"object\"}}, {\"description\": \"Finds the index of the first negative value in a list of integers `x`.\", \"name\": \"find_negative\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The index of the first negative value in `x` if it exists, otherwise -1.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Generates a string table that consists of all ASCII characters and their corresponding numerical values.\\nThe string table is a two-dimensional array with 256 rows and 2 columns.\\nThe first column is the character, and the second column is its numerical value.\", \"name\": \"generate_string_table\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of lists, where each inner list contains a character and its numerical value.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Extracts a nested data structure from a given string.\", \"name\": \"extract_nested_data\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary containing the extracted data.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string to extract the data from.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of strings that represent all possible anagram groups.\\nTwo strings belong to the same anagram group if they can be constructed\\nfrom the same set of letters.\", \"name\": \"get_anagram_groups\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings that represent all possible anagram groups.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"letters\": {\"description\": \"A string of lowercase letters.\", \"type\": \"string\"}}, \"required\": [\"letters\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"transform_to_tsv\", \"arguments\": {\"csv_string\": \"a,b,c\"}, \"label\": \"$var1\"}, {\"name\": \"extract_nested_data\", \"arguments\": {\"input_string\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n{'a': ['\\t', 'b', '\\t'], 'c': []}\n\nNow solve:\nA circle graph shows how the budget of a certain company was spent: 61 percent for salaries, 10 percent for research and development, 6 percent for utilities, 5 percent for equipment, 3 percent for supplies, and the remainder for transportation. If the area of each sector of the graph is proportional to the percent of the budget it represents, how many degrees of the circle are used to represent transportation?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 669,
    "text": "Example:\n\nInstruction:\nWhen a Laptop is sold for Rs. 49,000, the owner loses 30%. At what price must that Laptop be sold in order to gain 30%?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 4}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 4}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 100}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_6.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 30}}, {\"name\": \"divide\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": \"$var_7.result$\", \"arg_1\": \"$var_8.result$\"}}, {\"name\": \"add\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 30}}, {\"name\": \"multiply\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": \"$var_9.result$\", \"arg_1\": \"$var_10.result$\"}}]\n\nGold Answer:\n91000.0\n\nNow solve:\nIf Sharon's weekly salary increased by 15 percent, she would earn $460 per week. If instead, her weekly salary were to increase by 10 percent, how much would she earn per week?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 670,
    "text": "Example:\n\nInstruction:\nA man cycles round the boundary of a rectangular park at the rate of 12 kmph and completes one full round in 8 minutes. If the ratio between the length and breadth of the park be 3:2, then its area is:\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 12, \"arg_1\": 1000}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 10}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 8, \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 10}}, {\"name\": \"multiply\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": 12, \"arg_1\": 1000}}, {\"name\": \"multiply\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_9.result$\", \"arg_1\": 10}}, {\"name\": \"divide\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": \"$var_8.result$\", \"arg_1\": \"$var_10.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_12\", \"arguments\": {\"arg_0\": 8, \"arg_1\": \"$var_11.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_13\", \"arguments\": {\"arg_0\": \"$var_12.result$\", \"arg_1\": 10}}, {\"name\": \"multiply\", \"label\": \"$var_14\", \"arguments\": {\"arg_0\": \"$var_13.result$\", \"arg_1\": 3}}, {\"name\": \"multiply\", \"label\": \"$var_15\", \"arguments\": {\"arg_0\": \"$var_7.result$\", \"arg_1\": \"$var_14.result$\"}}]\n\nGold Answer:\n153600.0\n\nNow solve:\nA pupil's marks were wrongly entered as 35 instead of 23. Due to that the average marks for the class got increased by half. The number of pupils in the class is :\n\nUse this API documentation for reference: [{\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 671,
    "text": "Example:\n\nInstruction:\nA man can row at 5 kmph in still water. If the velocity of current is 1 kmph and it takes him 1 hour to row to a place and come back, how far is the place?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 5, \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 3}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 5}}]\n\nGold Answer:\n2.4\n\nNow solve:\nwhat is the average ( arithmetic mean ) of 10 , 2030 , 4050 , 6070 , 8090 ?\n\nUse this API documentation for reference: [{\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 672,
    "text": "Example:\n\nInstruction:\nReverse the order of words in the string \"Hello World\" and then generate a deterministic hash from the reversed string.\n\nUse this API documentation for reference: [{\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of tuples of all key-value pairs in d2 that match the keys in d1.\\nIf a matching pair has the same value in both dictionaries, return only one copy.\", \"name\": \"get_matching_pairs\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples, where each tuple contains a key-value pair from d2 that matches a key in d1.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"d1\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"A dictionary with string keys and integer values.\", \"type\": \"object\"}, \"d2\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"A dictionary with string keys and integer values.\", \"type\": \"object\"}}, \"required\": [\"d1\", \"d2\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Creates a list of keys for a given list of documents.\\n\\nEach key is formatted as `{date_created}_{document_id}` where the date is in the format of `YYYYMMDD`.\", \"name\": \"create_document_keys\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of keys.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"documents\": {\"description\": \"A list of documents where each document is a dictionary with keys 'date_created' and 'document_id'.\", \"items\": {\"additionalProperties\": {\"type\": \"string\"}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"documents\"], \"type\": \"object\"}}, {\"description\": \"Rotates a canvas image counterclockwise by 90 degrees in-place.\", \"name\": \"rotate_image_90_degrees\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The rotated canvas image.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"canvas_image\": {\"description\": \"A 2D array representing the canvas image. Each element is an integer representing a pixel color value.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"canvas_image\"], \"type\": \"object\"}}, {\"description\": \"Rearranges a list of numbers so that all even numbers appear first, followed by all odd numbers.\", \"name\": \"rearrange_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list with the same numbers, but with all even numbers appearing first, followed by all odd numbers.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Checks if any of the numbers in a given list is even.\", \"name\": \"any_even\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if any of the numbers in the list are even, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Calculates startup fuel based on time-dependent startup capacity.\", \"name\": \"startup_fuel\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The startup fuel.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"capacity\": {\"description\": \"The startup capacity.\", \"type\": \"integer\"}, \"time\": {\"description\": \"The time of day.\", \"type\": \"integer\"}}, \"required\": [\"capacity\", \"time\"], \"type\": \"object\"}}, {\"description\": \"Converts an LLVM IR comparison operation into a short string that represents the condition.\", \"name\": \"convert_llvm_ir_comparison_to_short_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The short string representing the condition.\", \"type\": [\"number\", \"string\"]}}}, \"parameters\": {\"properties\": {\"operation\": {\"description\": \"The comparison operation.\", \"type\": \"string\"}, \"value_1\": {\"description\": \"The first value to compare.\", \"type\": [\"number\", \"string\"]}, \"value_2\": {\"description\": \"The second value to compare.\", \"type\": [\"number\", \"string\"]}}, \"required\": [\"operation\", \"value_1\", \"value_2\"], \"type\": \"object\"}}, {\"description\": \"Checks if a given file path is valid, according to the following criteria:\\n- The file path is not empty\\n- The file path does not end with a period\\n- The file path does not contain consecutive periods\\n- The file path does not contain consecutive slashes\", \"name\": \"is_valid_file_path\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the file path is valid, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The file path to check.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Generates a deterministic hash from a JSON dictionary.\", \"name\": \"generate_deterministic_hash\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The hexadecimal string representation of the hash.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"json_dict\": {\"description\": \"The JSON dictionary to generate a hash from.\", \"type\": \"object\"}}, \"required\": [\"json_dict\"], \"type\": \"object\"}}, {\"description\": \"Returns a string message formatted as `Hello, <name>` if the object has an attribute named `name`,\\nor `Hello, world` if the object does not have such an attribute.\\nIf the object is not a class instance, returns `Hello, world` instead.\", \"name\": \"hello_message\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The object to check for the `name` attribute.\"}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Indents and pretty-prints a JSON object.\", \"name\": \"indent_and_pretty_print_json\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"json_object\": {\"description\": \"The JSON object to be indented and pretty-printed.\", \"type\": \"object\"}}, \"required\": [\"json_object\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Reverses the order of words in a string.\", \"name\": \"reverse_words_in_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new string with the order of words reversed.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"reverse_words_in_string\", \"arguments\": {\"string\": \"Hello World\"}, \"label\": \"$var1\"}, {\"name\": \"generate_deterministic_hash\", \"arguments\": {\"json_dict\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\nc7dae21c87513c98b45fd28694028663803a01d6f2db1dde8d4a1b273f0c2ec3\n\nNow solve:\nA\u2019s speed is 25/18 times that of B. If A and B run a race, what part of the length of the race should A give B as a head start, so that the race ends in a dead heat?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 673,
    "text": "Example:\n\nInstruction:\nGiven a table name string of \"/database_name/schema_name/table_name\", extract the table name. Then, replace all occurrences of the substring \"table\" in the table name with \"view\" if it is not surrounded by spaces.\n\nUse this API documentation for reference: [{\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Selects objects from a numpy array based on their indices.\", \"name\": \"select_objects\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new numpy array containing only the objects with the specified indices.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"anchor_index\": {\"description\": \"The index of the anchor frame.\", \"type\": \"integer\"}, \"context_frame_indices\": {\"description\": \"A list of indices of the contextual frames.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"points\": {\"description\": \"A numpy array of shape `(N, 3)`, representing 3D coordinates for `N` objects.\", \"type\": \"object\"}}, \"required\": [\"points\", \"anchor_index\", \"context_frame_indices\"], \"type\": \"object\"}}, {\"description\": \"Returns the name of the youngest person in a list of `Person` objects.\", \"name\": \"get_youngest_person\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The name of the youngest person, or an empty string if the list is empty.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"people\": {\"description\": \"A list of `Person` objects.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"people\"], \"type\": \"object\"}}, {\"description\": \"Calculates the speed index based on the given timestamps and frame sizes.\\n\\nThe speed index is a weighted average of the perceptual speed of the video,\\nwhere each frame size is associated with a specific timestamp.\", \"name\": \"speed_index\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The speed index as a weighted average.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"frame_sizes\": {\"description\": \"A list of corresponding frame sizes.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"timestamps\": {\"description\": \"A list of timestamps sorted in ascending order.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"timestamps\", \"frame_sizes\"], \"type\": \"object\"}}, {\"description\": \"Replaces all occurrences of a given substring in a string with another substring, but only if the substring is not surrounded by spaces.\", \"name\": \"replace_non_surrounded_substring\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The modified string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"new\": {\"description\": \"The substring to replace with.\", \"type\": \"string\"}, \"old\": {\"description\": \"The substring to be replaced.\", \"type\": \"string\"}, \"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\", \"old\", \"new\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Approximates the square root of a given positive number using Heron's method.\", \"name\": \"square_root_approx\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"decimal_places\": {\"description\": \"The number of decimal places in the result.\", \"type\": [\"integer\", \"number\"]}, \"number\": {\"description\": \"The number whose square root you want to approximate.\", \"type\": \"number\"}}, \"required\": [\"number\"], \"type\": \"object\"}}, {\"description\": \"Concatenates a list of strings into a single string.\", \"name\": \"concatenate_strings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"strings\": {\"description\": \"A list of strings to concatenate.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"strings\"], \"type\": \"object\"}}, {\"description\": \"Converts a string to UTF-8 encoding.\", \"name\": \"to_utf8\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string to be converted to UTF-8.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Extracts and returns the table name from a given table name string.\\n\\nThe table name string must have a valid format of the following form:\\n/database_name/schema_name/table_name\", \"name\": \"extract_table_name\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"table_name\": {\"description\": \"The table name string.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"table_name\"], \"type\": \"object\"}}, {\"description\": \"Calculates the absolute value of an integer plus one without using the built-in abs() function.\", \"name\": \"add_1_abs_value\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The absolute value of the integer plus one.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The integer to calculate the absolute value of.\", \"type\": \"integer\"}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"extract_table_name\", \"arguments\": {\"table_name\": \"/database_name/schema_name/table_name\"}, \"label\": \"$var1\"}, {\"name\": \"replace_non_surrounded_substring\", \"arguments\": {\"string\": \"$var1.output_0$\", \"old\": \"table\", \"new\": \"view\"}, \"label\": \"$var2\"}]\n\nGold Answer:\ntable_name\n\nNow solve:\nStrip control characters from the string \"Hello, World!\", then find the longest substring that occurs at least twice in the resulting string.\n\nUse this API documentation for reference: [{\"description\": \"Parses a CSV file and returns a list of lists representing the parsed contents.\\nEach nested list represents a row in the CSV file, with each element in the list being a string representing a column's data element.\", \"name\": \"parse_csv\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the CSV file.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Finds all student records in a list that have a specific grade value.\", \"name\": \"find_students\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of all student records that have the specified grade value.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"grade\": {\"description\": \"The grade value to search for.\", \"type\": \"integer\"}, \"student_records\": {\"description\": \"A list of student records. Each student record is a dictionary.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"student_records\", \"grade\"], \"type\": \"object\"}}, {\"description\": \"Joins filtered lines together with a separator character.\\n\\nFilters out any lines that are empty or contain only whitespace characters.\\nAlso, removes all leading and trailing whitespace from each line before joining.\", \"name\": \"join_filtered_lines\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string with the filtered lines joined together.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"lines\": {\"description\": \"A list of lines to filter and join.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"sep\": {\"description\": \"The separator character used to join the lines (default to a single space).\", \"type\": \"string\"}}, \"required\": [\"lines\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Finds the address of the first instruction in the list that has a specific opcode.\", \"name\": \"find_instruction_with_opcode\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The address of the first instruction in the list that has the desired opcode. If there are no instructions with the given opcode, returns -1. If the list is empty, returns -1.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"instructions\": {\"description\": \"A list of instructions. Each instruction is a dictionary with an \\\"opcode\\\" key.\", \"items\": {\"additionalProperties\": {\"type\": \"string\"}, \"type\": \"object\"}, \"type\": \"array\"}, \"opcode\": {\"description\": \"The desired opcode.\", \"type\": \"string\"}}, \"required\": [\"instructions\", \"opcode\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Finds the index of a column with the given name in a table.\", \"name\": \"find_column_index\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"column_name\": {\"description\": \"The name of the column to find.\", \"type\": \"string\"}, \"table\": {\"description\": \"The table represented as a list of lists, where each sublist is a row, and the first row contains the column headers.\", \"items\": {\"items\": {\"type\": [\"integer\", \"number\", \"string\"]}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"table\", \"column_name\"], \"type\": \"object\"}}, {\"description\": \"Removes all characters from a given string that are not numbers (0-9).\", \"name\": \"remove_non_digits\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"object\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Strips control characters from a given string.\\n\\nThe control characters include the following code points:\\n* U+0000 to U+001F\\n* U+007F to U+009F\", \"name\": \"strip_control_characters\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input string with control characters removed.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Returns the number of unique values in the `ip` key within a JSON file.\", \"name\": \"get_unique_ip_count\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of unique values in the `ip` key.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"file_name\": {\"description\": \"The name of the JSON file.\", \"type\": \"string\"}}, \"required\": [\"file_name\"], \"type\": \"object\"}}, {\"description\": \"Checks if an AST node represents a string literal.\", \"name\": \"is_string_literal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A boolean value indicating whether the node represents a string literal.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"node\": {\"description\": \"The AST node to be checked.\"}}, \"required\": [\"node\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Finds the longest substring that occurs at least twice in the input string.\", \"name\": \"duplicate_substring\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The longest substring that occurs at least twice in the input string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Converts a binary string to a hexadecimal string.\", \"name\": \"decode_binary_to_hex\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string of hexadecimal digits.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"binary_string\": {\"description\": \"A string of binary digits.\", \"type\": \"string\"}}, \"required\": [\"binary_string\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 674,
    "text": "Example:\n\nInstruction:\nI want to calculate the elastic modulus of a material with a Young's modulus of 200 and a Poisson's ratio of 0.3. Then, I want to convert the elastic modulus to millimeters of mercury.\n\nUse this API documentation for reference: [{\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Converts a given pressure value in psi (pounds per square inch) to millimeters of mercury (mmHg).\", \"name\": \"convert_to_mmhg\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"pressure_in_psi\": {\"description\": \"The pressure value in psi.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"pressure_in_psi\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Extracts packets from a binary file based on a list of packet IDs.\", \"name\": \"extract_packets\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of packet data corresponding to the provided packet IDs.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the binary file.\", \"type\": \"string\"}, \"packet_ids\": {\"description\": \"A list of packet IDs to extract from the binary file.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"packet_ids\", \"file_path\"], \"type\": \"object\"}}, {\"description\": \"Tokenizes a string into a list of words and capitalizes the first letter of each word.\", \"name\": \"tokenize_and_capitalize\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input string with the first letter of each word capitalized.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string to tokenize and capitalize.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Creates a list of lists of the same values as the input list.\\nEach inner list contains the original values up to and including the current value.\", \"name\": \"cumulative_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"A list of numeric values.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"input_list\"], \"type\": \"object\"}}, {\"description\": \"Removes duplicate tuples from a list of tuples and returns a new list containing\\nonly unique tuples. This function utilizes tuple comparison and list comprehension.\", \"name\": \"remove_duplicates_from_tuple_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list containing only unique tuples.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"tup_list\": {\"description\": \"A list of tuples.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"tup_list\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Sorts a list of tuples by the priority score.\", \"name\": \"sort_by_priority\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The sorted list of tuples.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"items\": {\"description\": \"A list of tuples, each containing a string and a priority score.\", \"items\": {\"prefixItems\": [{\"type\": \"string\"}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"items\"], \"type\": \"object\"}}, {\"description\": \"Checks if the input date string is in the format YYYY-mm-dd and returns the parsed date object.\", \"name\": \"check_date_format\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The parsed date object.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"date_string\": {\"description\": \"The input date string to be checked.\", \"type\": \"string\"}}, \"required\": [\"date_string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the histogram distance between two lists.\\nThe histogram distance is computed as the sum of the absolute differences between the frequencies of each element in the two lists.\", \"name\": \"histogram_distance\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"list1\": {\"description\": \"The first list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"list2\": {\"description\": \"The second list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"list1\", \"list2\"], \"type\": \"object\"}}, {\"description\": \"Calculates the elastic modulus of a material based on its Young's modulus and Poisson's ratio.\", \"name\": \"calculate_elastic_modulus\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"E_Y\": {\"description\": \"The Young's modulus of the material.\", \"type\": [\"integer\", \"number\"]}, \"v\": {\"description\": \"The Poisson's ratio of the material.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"E_Y\", \"v\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Divides `a` by `b` if `a` is divisible by `b`, otherwise returns `0`.\", \"name\": \"divide_if_divisible\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The numerator.\", \"type\": \"integer\"}, \"b\": {\"description\": \"The denominator.\", \"type\": \"integer\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Returns the key of the last element in an OrderedDict.\", \"name\": \"get_last_key\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The key of the last element in the OrderedDict.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"ordered_dict\": {\"additionalProperties\": {\"type\": \"object\"}, \"description\": \"The OrderedDict object.\", \"type\": \"object\"}}, \"required\": [\"ordered_dict\"], \"type\": \"object\"}}, {\"description\": \"Finds the longest common sublist between two lists.\", \"name\": \"find_longest_common_sublist\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list containing the longest common sublist between the two lists.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"list1\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"list2\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"list1\", \"list2\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"calculate_elastic_modulus\", \"arguments\": {\"E_Y\": 200, \"v\": 0.3}, \"label\": \"$var1\"}, {\"name\": \"convert_to_mmhg\", \"arguments\": {\"pressure_in_psi\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n11365.9\n\nNow solve:\nA chemist mixes one liter of pure water with x liters of a 50% salt solution, and the resulting mixture is a 15% salt solution. What is the value of x?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 675,
    "text": "Example:\n\nInstruction:\nJoan took out a mortgage from hel local bank. Each monthly mortgage payment she makes must be triple the amount of the previous month's payment. If her first payment is $100, and the total amount she must pay back is $36400, how many months will it take Joan to pay back her mortgage?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 36400, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 100}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 1}}, {\"name\": \"log\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\"}}, {\"name\": \"log\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 3}}, {\"name\": \"divide\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_5.result$\"}}]\n\nGold Answer:\n6.0\n\nNow solve:\nA can do a work in 8 days. B can do the same work in 24 days. If both A & B are working together in how many days they will finish the work?\n\nUse this API documentation for reference: [{\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 676,
    "text": "Example:\n\nInstruction:\nIn a renowned city, the average birth rate is 9 people every two seconds and the death rate is 3 people every two seconds. Estimate the size of the population net increase that occurs in one day.\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 9, \"arg_1\": 3}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 3600}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 12}}]\n\nGold Answer:\n259200.0\n\nNow solve:\nExactly 3/7 of the people in the room are under the age of 21, and exactly 5/12 of the people in the room are over the age of 65. If the total number of the people in the room is greater than 50 and less than 100, how many people in the room are under the age of 21?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 677,
    "text": "Example:\n\nInstruction:\nA store sells 2 kinds of jelly beans mixes (A and B)both made up of red and yellow beans. if b contains 20% more red beans than A but 10% fewer yellow beans. and Jar A contains twice as many red beans as yellow by what percent is the number of beans in Jar B larger than the number in Jar A\n\nUse this API documentation for reference: [{\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 20}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 10}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 100}}, {\"name\": \"subtract\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n10.0\n\nNow solve:\nSimulate 10 coin tosses and find the first occurrence of the substring \"01\" in the resulting string.\n\nUse this API documentation for reference: [{\"description\": \"Finds the first even number that is greater than 3 in a list of integers.\", \"name\": \"first_even_greater_than_3\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The first even number that is greater than 3, or None if no such number exists.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Tokenizes a string input and converts each word to an integer or string based on its type.\", \"name\": \"tokenize_and_convert\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input string with each word converted to an integer or string based on its type.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string to tokenize and convert.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Reads the contents of a text file and returns the first line containing \\\"key\\\".\\nIf the file does not contain the \\\"key\\\", returns an empty string.\", \"name\": \"find_line_with_key\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the text file.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the frequency of words in a string.\", \"name\": \"word_frequency_from_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of the word frequency in the string.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Creates a list of strings from a given list of integers or floats.\", \"name\": \"create_string_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"values\": {\"description\": \"A list of integers or floats.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"values\"], \"type\": \"object\"}}, {\"description\": \"Finds the first occurrence of a substring within a string.\", \"name\": \"find_first_substring\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The index of the first occurrence of the substring, or -1 if the substring is not found.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The string to search within.\", \"type\": \"string\"}, \"substring\": {\"description\": \"The substring to search for.\", \"type\": \"string\"}}, \"required\": [\"string\", \"substring\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Checks if two lists have any common elements using for loops and conditional evaluation.\", \"name\": \"has_intersection\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the lists have any common elements, otherwise False.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"list1\": {\"description\": \"The first list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"list2\": {\"description\": \"The second list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"list1\", \"list2\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Tokenizes a sentence with start and end tokens, handling punctuation.\", \"name\": \"tokenize_with_start_end_tokens\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"end_token\": {\"description\": \"The end token.\", \"type\": \"string\"}, \"punctuations\": {\"description\": \"A list of punctuation marks to ignore while tokenization.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"sentence\": {\"description\": \"The input sentence.\", \"type\": \"string\"}, \"start_token\": {\"description\": \"The start token.\", \"type\": \"string\"}}, \"required\": [\"sentence\", \"start_token\", \"end_token\", \"punctuations\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Simulates `n` coin tosses and returns a list of 0s and 1s, where 0 represents tails and 1 represents heads.\", \"name\": \"simulate_coin_toss\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of 0s and 1s representing the results of the coin tosses.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The number of coin tosses to simulate.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Formats a duration in seconds as a string in the format \\\"HH:MM:SS\\\".\", \"name\": \"format_time_as_str\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The formatted string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"seconds\": {\"description\": \"The duration in seconds.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"seconds\"], \"type\": \"object\"}}, {\"description\": \"Checks whether all dictionaries in the data list have the same keys. If there are any\\nmissing keys, the function raises a KeyError to indicate the inconsistent keys.\", \"name\": \"consistency_check\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if all dictionaries have the same keys, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"A list of dictionaries, where each dictionary represents a row of data with column names as keys.\", \"items\": {\"additionalProperties\": {\"type\": \"string\"}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"data\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the offset of a vehicle from the center of the lane.\", \"name\": \"get_vehicle_offset_from_center\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The offset of the vehicle from the center of the lane in meters.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"pixel_distance\": {\"description\": \"The number of pixels the vehicle is distant from the center.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"pixel_distance\"], \"type\": \"object\"}}, {\"description\": \"Computes the sum of the values in a PyTorch tensor along the batch and channel dimensions.\", \"name\": \"sum_batch_channel\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A PyTorch tensor with shape `(H, W)` containing the sum of the values in the input tensor along the batch and channel dimensions.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"A PyTorch tensor with shape `(N, C, H, W)`, where N is the batch size, C is the number of channels, H is the height, and W is the width.\", \"type\": \"object\"}}, \"required\": [\"x\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 678,
    "text": "Example:\n\nInstruction:\nhow many 3 digit number formed by using 23 , 45 , 67 once such that number is divisible by 15 .\n\nUse this API documentation for reference: [{\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 45, \"arg_1\": 3}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 3}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 3}}]\n\nGold Answer:\n8.0\n\nNow solve:\nAlong a yard 225 metres long, 26 trees are palnted at equal distances, one tree being at each end of the yard. What is the distance between two consecutive trees\n\nUse this API documentation for reference: [{\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 679,
    "text": "Example:\n\nInstruction:\na department of 10 people - 6 men and 4 women - needs to send a team of 5 to a conference . if they want to make sure that there are no more than 3 members of the team from any one gender , how many distinct groups are possible to send ?\n\nUse this API documentation for reference: [{\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 6, \"arg_1\": 5}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 4}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 6, \"arg_1\": 5}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 6, \"arg_1\": 5}}, {\"name\": \"add\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_5.result$\"}}]\n\nGold Answer:\n180.0\n\nNow solve:\nIn 1998 the profits of company N were 10 percent of revenues. In 1999, the revenues of company N fell by 20 percent, but profits were 10 percent of revenues. The profits in 1999 were what percent of the profits in 1998?\n\nUse this API documentation for reference: [{\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 680,
    "text": "Example:\n\nInstruction:\nA father said his son , \" I was as old as you are at present at the time of your birth. \" If the father age is 48 now, the son age 5 years back was\n\nUse this API documentation for reference: [{\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 48, \"arg_1\": 2}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 5}}]\n\nGold Answer:\n19.0\n\nNow solve:\nThe annual birth and death rate in a country per 1000 are 39.4 and 19.4 respectively . the number of years Q in which the population would be doubled assuming there is no emigration or immigration is\n\nUse this API documentation for reference: [{\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 681,
    "text": "Example:\n\nInstruction:\nRandomize the case of alphabetic characters in the string 'Hello World', then find the most common character in the resulting string.\n\nUse this API documentation for reference: [{\"description\": \"Randomizes the case of alphabetic characters in a string.\", \"name\": \"random_case\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new string with random uppercase and lowercase letters.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Counts the number of times a word appears in a text file.\\n\\nThe word is case-insensitive, and the function ignores any leading or trailing white spaces.\\nThe function uses a scripting language for file parsing and line-by-line reading.\", \"name\": \"word_count\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of times the word appears in the text file.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"text_file\": {\"description\": \"The path to the text file.\", \"type\": \"string\"}, \"word\": {\"description\": \"The word to count.\", \"type\": \"string\"}}, \"required\": [\"text_file\", \"word\"], \"type\": \"object\"}}, {\"description\": \"Returns the directory name of a file, excluding the file name itself.\", \"name\": \"get_directory_name\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"file_name\": {\"description\": \"The name of the file.\", \"type\": \"string\"}}, \"required\": [\"file_name\"], \"type\": \"object\"}}, {\"description\": \"Finds the most common character in a string.\", \"name\": \"most_common_char\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The most common character in the string. If there are multiple characters\\n    that appear the same number of times, the function returns the character\\n    that appears first in the string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Prepares a dataset from a query result.\", \"name\": \"prepare_dataset\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of dictionaries, where each dictionary contains the necessary information for the specific dataset you are preparing.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"query_result\": {\"description\": \"A nested list where each element is a list of strings corresponding to the desired columns in the dataset.\", \"items\": {\"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"query_result\"], \"type\": \"object\"}}, {\"description\": \"Returns the base name of a file given its path.\", \"name\": \"get_file_basename\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path of the file.\", \"nullable\": true, \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Transforms a list of (x, y) tuples into a list of (x, y, x + y) tuples.\", \"name\": \"transform_tuples\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of (x, y, x + y) tuples.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"A list of (x, y) tuples.\", \"items\": {\"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Extracts the value encoded in the first 4 bits of a bytearray.\", \"name\": \"extract_first_4_bits\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"byte_array\": {\"description\": \"The bytearray to extract the bits from.\", \"type\": \"object\"}, \"endian\": {\"description\": \"The byte ordering. Must be 'big' or 'little'.\", \"type\": \"string\"}}, \"required\": [\"byte_array\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Filters a list of integers into two lists, one with the odd numbers and one with the even numbers.\", \"name\": \"filter_odd_even\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple of two lists, with the first element being the list of odd numbers and the second element being the list of even numbers.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"The list of integers to filter.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of tuples, where each tuple is the reverse of the input tuple.\", \"name\": \"reverse_tuple_of_any_length\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"tuple_input\": {\"description\": \"The input tuple.\", \"type\": \"array\"}}, \"required\": [\"tuple_input\"], \"type\": \"object\"}}, {\"description\": \"Returns a new list of dictionaries containing only the 'knobs' key and its value from each dictionary.\\nThe output list preserves the order of the input list.\", \"name\": \"get_knobs_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list of dictionaries containing only the 'knobs' key and its value from each dictionary.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"A list of dictionaries.\", \"items\": {\"additionalProperties\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"data\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Returns the sign of a number.\", \"name\": \"sign\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The number to find the sign of.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Checks if a file name ends with any of the valid extensions.\", \"name\": \"file_extension_match\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"extension_list\": {\"description\": \"A list of valid extensions.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"file_name\": {\"description\": \"The name of the file.\", \"type\": \"string\"}}, \"required\": [\"file_name\", \"extension_list\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"random_case\", \"arguments\": {\"text\": \"Hello World\"}, \"label\": \"$var1\"}, {\"name\": \"most_common_char\", \"arguments\": {\"text\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\nl\n\nNow solve:\nThe profit earned by selling an article for $ 832 is equal to the loss incurred when the same article is sold for $ 448. What should be the sale price for making 35% profit?\n\nUse this API documentation for reference: [{\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 682,
    "text": "Example:\n\nInstruction:\nI have a string \"Hello, World!\". I want to replace all occurrences of \"World\" with \"Universe\" and then convert the resulting string to alphanumeric characters only.\n\nUse this API documentation for reference: [{\"description\": \"Finds the middle node of a linked list.\", \"name\": \"find_middle_node\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The middle node of the linked list. If the linked list is empty or has only one node,\\n    returns None.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"head\": {\"description\": \"The head node of the linked list.\", \"type\": \"object\"}}, \"required\": [\"head\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Converts a string representing a percentage to a floating point number.\", \"name\": \"percentage_to_fraction\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A floating point number representing the percentage as a fraction between 0 and 1.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"percentage_string\": {\"description\": \"A string representing a percentage.\", \"type\": \"string\"}}, \"required\": [\"percentage_string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the n-th Fibonacci number using the iterative approach.\", \"name\": \"fib_iter\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The n-th Fibonacci number.\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The position of the Fibonacci number to calculate.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Replaces all occurrences of a pattern string with a replacement string in a text string.\", \"name\": \"replace_all_pattern\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The modified text string with all occurrences of the pattern replaced with the replacement.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"pattern\": {\"description\": \"The string to match.\", \"type\": \"string\"}, \"replacement\": {\"description\": \"The string to replace.\", \"type\": \"string\"}, \"text\": {\"description\": \"The original text string.\", \"type\": \"string\"}}, \"required\": [\"pattern\", \"replacement\", \"text\"], \"type\": \"object\"}}, {\"description\": \"Converts Fahrenheit to Celsius.\", \"name\": \"f_to_c\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The temperature in Celsius.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"f\": {\"description\": \"The temperature in Fahrenheit.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"f\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of strings representing the purchase order details.\", \"name\": \"purchase_order_details\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"purchases\": {\"description\": \"A list of dictionaries where each dictionary represents a purchase order object.\", \"items\": {\"additionalProperties\": {\"type\": \"integer\"}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"purchases\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of each column in a matrix.\", \"name\": \"column_sum\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the sum of each column in the matrix.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Converts a string of mixed alphanumeric and special characters into a new string with only alphanumeric characters.\\n\\nThe function retains the case and order of the characters, and strips out any special characters and spaces.\", \"name\": \"alphanumeric_only\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new string with only alphanumeric characters.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string to be converted.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a sorted list of the values in the `z` column of a data frame `df`.\", \"name\": \"sort_values_column\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A sorted list of the values in the `z` column.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"df\": {\"description\": \"The input data frame containing the `z` column.\", \"type\": \"object\"}}, \"required\": [\"df\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Returns the hexadecimal representation of the byte at the specified index `n` in the integer `num`.\", \"name\": \"get_byte\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The index of the byte to extract.\", \"type\": \"integer\"}, \"num\": {\"description\": \"The integer to extract the byte from.\", \"type\": \"integer\"}}, \"required\": [\"num\", \"n\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"replace_all_pattern\", \"arguments\": {\"pattern\": \"World\", \"replacement\": \"Universe\", \"text\": \"Hello, World!\"}, \"label\": \"$var1\"}, {\"name\": \"alphanumeric_only\", \"arguments\": {\"string\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\nHelloUniverse\n\nNow solve:\nA hen leaps 3 leaps for every 2 leaps of a duck, but 4 leaps of the duck are equal to 3 leaps of the hen. What is the ratio of the speed of the hen to that of the duck?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 683,
    "text": "Example:\n\nInstruction:\nA money lender lent Rs. 1000 at 4% per year and Rs. 1400 at 5% per year. The amount should be returned to him when the total interest comes to Rs. 350. Find the number of years.\n\nUse this API documentation for reference: [{\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 1000}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 1400, \"arg_1\": 5}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 100}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 350, \"arg_1\": \"$var_5.result$\"}}]\n\nGold Answer:\n3.2\n\nNow solve:\nConvert the number 100 to its hexadecimal representation with a \\\"0x\\\" prefix. Then, map each character in the hexadecimal representation to the next character in the alphabet.\n\nUse this API documentation for reference: [{\"description\": \"Extracts the frames with indices `frame1` and `frame2` from the sequence and returns a new sequence of frames with the extracted frames in reverse order.\", \"name\": \"extract_and_reverse\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new sequence of frames with the extracted frames in reverse order.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"frame1\": {\"description\": \"The index of the first frame to extract.\", \"type\": \"integer\"}, \"frame2\": {\"description\": \"The index of the second frame to extract.\", \"type\": \"integer\"}, \"sequence\": {\"description\": \"The original sequence of frames.\", \"items\": {}, \"type\": \"array\"}}, \"required\": [\"sequence\", \"frame1\", \"frame2\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Unfolds a 3D tensor into a 2D matrix.\", \"name\": \"unfold_tensor\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A 2D matrix of shape (I * J, K).\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"X\": {\"description\": \"A 3D tensor of shape (I, J, K).\", \"type\": \"object\"}}, \"required\": [\"X\"], \"type\": \"object\"}}, {\"description\": \"Converts a string to a specified data type.\", \"name\": \"string_to_type\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The converted value, or None if the conversion fails.\", \"type\": [\"boolean\", \"integer\", \"number\", \"string\"]}}}, \"parameters\": {\"properties\": {\"typ\": {\"description\": \"The data type to convert the string to.\", \"type\": \"string\"}, \"value\": {\"description\": \"The string to be converted.\", \"type\": \"string\"}}, \"required\": [\"value\", \"typ\"], \"type\": \"object\"}}, {\"description\": \"Maps each character in a string to the next character in the alphabet.\", \"name\": \"map_to_next_in_alphabet\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string where each alphabetic character is mapped to the next character in the alphabet.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Converts a positive integer number to its hexadecimal representation with a \\\"0x\\\" prefix.\", \"name\": \"int_to_hex_with_prefix\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The hexadecimal representation of the number with a \\\"0x\\\" prefix.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"number\": {\"description\": \"The positive integer number to be converted.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"number\"], \"type\": \"object\"}}, {\"description\": \"Checks if two strings overlap.\", \"name\": \"is_overlapping_strings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the strings overlap, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"string1\": {\"description\": \"The first string.\", \"type\": \"string\"}, \"string2\": {\"description\": \"The second string.\", \"type\": \"string\"}}, \"required\": [\"string1\", \"string2\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Evaluates the result of the given instruction.\\n\\nIf `b` is even, the function returns the sum of `a` and `b`.\\nIf `b` is odd, the function returns the product of `a` and `b`.\", \"name\": \"evaluate_instruction\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The result of the evaluation.\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first integer.\", \"type\": \"integer\"}, \"b\": {\"description\": \"The second integer.\", \"type\": \"integer\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Checks if a string contains a URL.\", \"name\": \"contains_url\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the string contains a URL, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The string to check.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Removes redundant dots from a file path.\", \"name\": \"clean_up_path\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The cleaned up file path.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"path\": {\"description\": \"The file path to clean up.\", \"type\": \"string\"}}, \"required\": [\"path\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Replaces placeholders in a template string with variables provided.\", \"name\": \"replace_variables\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"template\": {\"description\": \"The template string containing placeholders.\", \"type\": \"string\"}, \"variables\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary of variables to replace placeholders with.\", \"type\": \"object\"}}, \"required\": [\"template\", \"variables\"], \"type\": \"object\"}}, {\"description\": \"Converts a string of digits, separated by commas and/or spaces, into an array of integers.\", \"name\": \"convert_string_to_array\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 684,
    "text": "Example:\n\nInstruction:\nI have a protein sample with a mass of 100 grams and a volume of 50 milliliters. I want to calculate its concentration and then format the time it takes to process the sample as a string with the format `HH:mm:ss.SSS`.\n\nUse this API documentation for reference: [{\"description\": \"Checks if a given object is a binary view.\\n\\nA binary view is an object that has a `tobytes` method and a `nbytes` attribute.\", \"name\": \"is_binary_view\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the object is a binary view and False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The object to check.\"}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Produces an input/output table for a given dictionary, where the keys of the dictionary are the inputs and the values are the outputs.\\nThe input/output table is a list of tuples, where the first element is the input and the second element is the output.\\nDuplicate outputs are omitted using a set.\", \"name\": \"produce_input_output_table\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples, where the first element is the input and the second element is the output.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"The input dictionary.\", \"type\": \"object\"}}, \"required\": [\"dictionary\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the concentration of a protein sample given its mass and volume.\", \"name\": \"calculate_concentration\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The concentration of the protein sample in units of mass per unit volume.\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"mass\": {\"description\": \"The mass of the protein sample.\", \"type\": [\"integer\", \"number\"]}, \"volume\": {\"description\": \"The volume of the protein sample.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"mass\", \"volume\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Matches the regular expression against the string and returns a list of matches.\\nIf there are no matches, the function returns an empty list.\", \"name\": \"regexp_match\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"regexp\": {\"description\": \"The regular expression to match.\", \"type\": \"string\"}, \"string\": {\"description\": \"The string to match against.\", \"type\": \"string\"}}, \"required\": [\"regexp\", \"string\"], \"type\": \"object\"}}, {\"description\": \"Generates a boolean value randomly, where the probability of True and False is equal.\", \"name\": \"generate_bool\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A boolean value.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Divides a dataset of n people into two subsets of equal size.\", \"name\": \"divide_dataset\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of two subsets, where the first subset contains the indices of the people in the first subset and the second subset contains the indices of the people in the second subset. If the task is impossible, returns -1.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The size of the dataset.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Finds the keys in `a` that are not in `b`.\", \"name\": \"find_extra_keys\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of keys that are in `a` but not in `b`.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"a\": {\"additionalProperties\": {\"type\": \"object\"}, \"description\": \"A dictionary with unique string keys.\", \"type\": \"object\"}, \"b\": {\"additionalProperties\": {\"type\": \"object\"}, \"description\": \"A dictionary with unique string keys.\", \"type\": \"object\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Searches through a list of objects and returns a subset of those objects that have a certain attribute.\", \"name\": \"search_objects\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"attr_name\": {\"description\": \"The name of the attribute to search for.\", \"type\": \"string\"}, \"obj_list\": {\"description\": \"The list of objects to search through.\", \"items\": {}, \"type\": \"array\"}}, \"required\": [\"obj_list\", \"attr_name\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Formats a time in seconds as a string with the format `HH:mm:ss.SSS`.\", \"name\": \"time_format\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The formatted time string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"time\": {\"description\": \"The time in seconds as a float or integer.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"time\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns the first element of the first list, or None if the first list is empty.\", \"name\": \"first_element_or_none\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"string\"]}}}, \"parameters\": {\"properties\": {\"first_list\": {\"description\": \"The first list.\", \"items\": {\"type\": [\"integer\", \"string\"]}, \"type\": \"array\"}, \"second_list\": {\"description\": \"The second list.\", \"items\": {\"type\": [\"integer\", \"string\"]}, \"type\": \"array\"}}, \"required\": [\"first_list\", \"second_list\"], \"type\": \"object\"}}, {\"description\": \"Checks if two floating-point values `x` and `y` are close enough to be considered equal.\", \"name\": \"are_close\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if their absolute difference is less than or equal to `epsilon`, and False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"epsilon\": {\"description\": \"The threshold value.\", \"type\": \"number\"}, \"x\": {\"description\": \"The first floating-point value.\", \"type\": [\"integer\", \"number\"]}, \"y\": {\"description\": \"The second floating-point value.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"calculate_concentration\", \"arguments\": {\"mass\": 100, \"volume\": 50}, \"label\": \"$var1\"}, {\"name\": \"time_format\", \"arguments\": {\"time\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n00:00:02.000\n\nNow solve:\nGiven an array ['apple', 'banana', 'cherry'], generate a string representation of the array type and then return the type of the generated string.\n\nUse this API documentation for reference: [{\"description\": \"Calculates the result using function foo.\", \"name\": \"foo\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first argument for function foo.\", \"type\": [\"integer\", \"number\"]}, \"b\": {\"description\": \"The second argument for function foo.\", \"type\": [\"integer\", \"number\"]}, \"c\": {\"description\": \"The third argument for function foo.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"a\", \"b\", \"c\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Merges two dictionaries and returns a new dictionary with all the keys from both dictionaries and their corresponding values.\\nIf any key exists in both dictionaries, the value from the second dictionary should be used.\", \"name\": \"process_two_dictionaries\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new dictionary with all the keys from both dictionaries and their corresponding values.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"dict1\": {\"description\": \"The first dictionary.\", \"type\": \"object\"}, \"dict2\": {\"description\": \"The second dictionary.\", \"type\": \"object\"}}, \"required\": [\"dict1\", \"dict2\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Formats the name into a message using string formatting with a replacement field.\", \"name\": \"format_message\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string that includes the name argument.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"name\": {\"description\": \"The name to be formatted into a message.\", \"type\": \"string\"}}, \"required\": [\"name\"], \"type\": \"object\"}}, {\"description\": \"Generates an array type string based on the provided array.\", \"name\": \"generate_array_type\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string representing the array type.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"arr\": {\"description\": \"A list of strings representing the elements of the array.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"arr\"], \"type\": \"object\"}}, {\"description\": \"Returns a string representation of the argument's type.\", \"name\": \"get_type_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string that exactly matches the string representation of the\\n    corresponding Python built-in type.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"arg\": {\"description\": \"The argument to check the type of.\"}}, \"required\": [\"arg\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Converts a JSON-formatted string to a list of dictionaries.\", \"name\": \"convert_json_to_dict_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of dictionaries, where each dictionary corresponds to a row in the input JSON data.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"json_str\": {\"description\": \"The JSON-formatted string to convert.\", \"type\": \"string\"}}, \"required\": [\"json_str\"], \"type\": \"object\"}}, {\"description\": \"Computes the Leaky ReLU activation function for each element in the input array `x`.\\nIf x is greater than or equal to 0, it returns x. Otherwise, it returns alpha * x.\", \"name\": \"leaky_relu\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"alpha\": {\"description\": \"A positive constant.\", \"type\": \"number\"}, \"x\": {\"description\": \"The input array.\", \"type\": \"object\"}}, \"required\": [\"x\", \"alpha\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 685,
    "text": "Example:\n\nInstruction:\nIn a rectangular coordinate system, what is the area of a rectangle whose vertices have the coordinates (-4, 1), (1, 1), (1, -3) and (-4, -3)?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 1}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 3}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n20.0\n\nNow solve:\nIf the sides of a triangle are 20 cm, 12 cm and 16 cm, what is its area?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 686,
    "text": "Example:\n\nInstruction:\nThere are 240 doctors and nurses at a hospital. If the ratio of doctors to nurses is 3 to 7, how many nurses are at the hospital?\n\nUse this API documentation for reference: [{\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 7}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 240, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 7}}]\n\nGold Answer:\n168.0\n\nNow solve:\n3 pumps, working 8 hours a day, can empty a tank in 2 days. How many hours a day must 12 pumps work to empty the tank in 1 day?\n\nUse this API documentation for reference: [{\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 687,
    "text": "Example:\n\nInstruction:\n10 : 4 seconds :: ? : 6 minutes\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 10, \"arg_1\": 4}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 6, \"arg_1\": \"$var_1.result$\"}}]\n\nGold Answer:\n15.0\n\nNow solve:\nI want to simulate a coin toss experiment 10 times and then determine the variable type of the result.\n\nUse this API documentation for reference: [{\"description\": \"Calculates the probability of at least one of two independent events occurring.\", \"name\": \"probability_at_least_one\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"p1\": {\"description\": \"The probability of the first event occurring.\", \"type\": [\"integer\", \"number\"]}, \"p2\": {\"description\": \"The probability of the second event occurring.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"p1\", \"p2\"], \"type\": \"object\"}}, {\"description\": \"Extracts the captions from a given JSON file.\", \"name\": \"extract_captions\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of extracted captions, each of which is a string.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"json_file\": {\"description\": \"The path to the JSON file containing the captions.\", \"type\": \"string\"}}, \"required\": [\"json_file\"], \"type\": \"object\"}}, {\"description\": \"Formats a string of Python code by indenting each line by 4 spaces.\\n\\nThe formatted string is surrounded by triple quotes, and the contents of the string are escaped to ensure that it is a valid Python string literal.\", \"name\": \"format_code\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The formatted string.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"code\": {\"description\": \"The string of Python code to format.\", \"type\": \"object\"}}, \"required\": [\"code\"], \"type\": \"object\"}}, {\"description\": \"Converts a degree value to a radian value, where the output should be between -180 and 180 degrees.\\nThe function is self-contained and does not rely on any external libraries.\", \"name\": \"degree_to_radian\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"degree\": {\"description\": \"The degree value to be converted to radian.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"degree\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Determines the variable type of the input value.\", \"name\": \"get_variable_type\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The variable type as a string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"value\": {\"description\": \"The input value to determine its type.\", \"type\": [\"integer\", \"number\", \"object\", \"string\"]}}, \"required\": [\"value\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Removes any leading or trailing whitespace from a string.\", \"name\": \"depad\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"object\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Simulates a coin toss experiment and returns a list of the number of heads obtained from each toss.\", \"name\": \"coin_toss_experiment\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the number of heads obtained from each toss.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The number of times the coin is tossed.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Captures the name of the current file and the path to the file's directory and combines them into a single string.\", \"name\": \"current_file_name_in_dir\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The name of the current file and the path to the file's directory combined into a single string, in the format `current_file_name_in_dir.txt`.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 688,
    "text": "Example:\n\nInstruction:\nJo's collection contains US, Indian and British stamps. If the ratio of US to Indian stamps is 7 to 2 and the ratio of Indian to British stamps is 5 to 1, what is the ratio of US to British stamps?\n\nUse this API documentation for reference: [{\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 7, \"arg_1\": 5}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n17.5\n\nNow solve:\nExpress 35 mps in kmph?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 689,
    "text": "Example:\n\nInstruction:\nA sum was put at simple interest at certain rate for 3 years. Had it been put at 1% higher rate it would have fetched Rs. 66 more. The sum is: A. Rs. 2,400 B. Rs. 2,100 C. Rs. 2,200 D.Rs. 2,480\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 66, \"arg_1\": 3}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n2200.0\n\nNow solve:\nIf the cost price is 91% of sp then what is the profit %\n\nUse this API documentation for reference: [{\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 690,
    "text": "Example:\n\nInstruction:\nThe amount of time that three people worked on a special project was in the ratio of 2 to 4 to 6. If the project took 144 hours, how many more hours did the hardest working person work than the person who worked the least?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 4}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 6}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 144, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 6}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 4}}, {\"name\": \"add\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 6}}, {\"name\": \"divide\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": 144, \"arg_1\": \"$var_6.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_7.result$\", \"arg_1\": 2}}, {\"name\": \"subtract\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_8.result$\"}}]\n\nGold Answer:\n48.0\n\nNow solve:\nAmit and Ananthu can do a work in 15 days and 60 days respectively. Amit started the work and left after 3 days. Ananthu took over and completed the work. In how many days was the total work completed?\n\nUse this API documentation for reference: [{\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 691,
    "text": "Example:\n\nInstruction:\nA courtyard is 21 meter long and 14 meter board is to be paved with bricks of dimensions 14 cm by 8 cm. The total number of bricks required is :\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 21, \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 14, \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 14, \"arg_1\": 8}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_4.result$\"}}]\n\nGold Answer:\n26250.0\n\nNow solve:\nAlex and Brian start a business with Rs.7000 each, and after 8 months, Brian withdraws half of his capital . How should they share the profits at the end of the 18 months?\n\nUse this API documentation for reference: [{\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 692,
    "text": "Example:\n\nInstruction:\nThe length of rectangle is thrice its breadth and its perimeter is 72 m, find the area of the rectangle?\n\nUse this API documentation for reference: [{\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 72, \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 3}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": \"$var_7.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": 72, \"arg_1\": \"$var_8.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": \"$var_9.result$\"}}]\n\nGold Answer:\n243.0\n\nNow solve:\nRhonda picked 2 pen from the table, if there were 7 pens on the table and 5 belongs to Jill, what is the probability that the 2 pen she picked does not belong to Jill?.\n\nUse this API documentation for reference: [{\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 693,
    "text": "Example:\n\nInstruction:\nCity A and City B are 140 miles apart. Train C departs City A, heading towards City B, at 4:00 and travels at 40 miles per hour. Train D departs City B, heading towards City A, at 4:40 and travels at 20 miles per hour. The trains travel on parallel tracks. At what time do the two trains meet?\n\nUse this API documentation for reference: [{\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 40}}]\n\nGold Answer:\n0.15\n\nNow solve:\nAfter 10% of the inhabitants of a village disappeared, a panic set in during which 25% of the remaining inhabitants left the village. At that time, the population was reduced to 5535. What was the number of original inhabitants?\n\nUse this API documentation for reference: [{\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 694,
    "text": "Example:\n\nInstruction:\n3 friends james , david and charlie divide $ 1230 amongs them in such a way that if $ 5 , $ 10 and $ 15 are removed from the sums that james , david and charlie received respectively , then the share of the sums that they got will be in the ratio of 9 : 10 : 11 . how much did charlie receive ?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 5, \"arg_1\": 10}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 15}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 1230, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 9, \"arg_1\": 10}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 11}}, {\"name\": \"divide\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_5.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": 11, \"arg_1\": \"$var_6.result$\"}}, {\"name\": \"add\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_7.result$\", \"arg_1\": 15}}, {\"name\": \"add\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": 5, \"arg_1\": 10}}, {\"name\": \"add\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_9.result$\", \"arg_1\": 15}}, {\"name\": \"subtract\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": 1230, \"arg_1\": \"$var_10.result$\"}}, {\"name\": \"add\", \"label\": \"$var_12\", \"arguments\": {\"arg_0\": 9, \"arg_1\": 10}}, {\"name\": \"add\", \"label\": \"$var_13\", \"arguments\": {\"arg_0\": \"$var_12.result$\", \"arg_1\": 11}}, {\"name\": \"divide\", \"label\": \"$var_14\", \"arguments\": {\"arg_0\": \"$var_11.result$\", \"arg_1\": \"$var_13.result$\"}}, {\"name\": \"add\", \"label\": \"$var_15\", \"arguments\": {\"arg_0\": \"$var_8.result$\", \"arg_1\": \"$var_14.result$\"}}, {\"name\": \"add\", \"label\": \"$var_16\", \"arguments\": {\"arg_0\": 5, \"arg_1\": 10}}, {\"name\": \"add\", \"label\": \"$var_17\", \"arguments\": {\"arg_0\": \"$var_16.result$\", \"arg_1\": 15}}, {\"name\": \"subtract\", \"label\": \"$var_18\", \"arguments\": {\"arg_0\": 1230, \"arg_1\": \"$var_17.result$\"}}, {\"name\": \"add\", \"label\": \"$var_19\", \"arguments\": {\"arg_0\": 9, \"arg_1\": 10}}, {\"name\": \"add\", \"label\": \"$var_20\", \"arguments\": {\"arg_0\": \"$var_19.result$\", \"arg_1\": 11}}, {\"name\": \"divide\", \"label\": \"$var_21\", \"arguments\": {\"arg_0\": \"$var_18.result$\", \"arg_1\": \"$var_20.result$\"}}, {\"name\": \"add\", \"label\": \"$var_22\", \"arguments\": {\"arg_0\": \"$var_15.result$\", \"arg_1\": \"$var_21.result$\"}}, {\"name\": \"add\", \"label\": \"$var_23\", \"arguments\": {\"arg_0\": 5, \"arg_1\": 10}}, {\"name\": \"add\", \"label\": \"$var_24\", \"arguments\": {\"arg_0\": \"$var_23.result$\", \"arg_1\": 15}}, {\"name\": \"subtract\", \"label\": \"$var_25\", \"arguments\": {\"arg_0\": 1230, \"arg_1\": \"$var_24.result$\"}}, {\"name\": \"add\", \"label\": \"$var_26\", \"arguments\": {\"arg_0\": 9, \"arg_1\": 10}}, {\"name\": \"add\", \"label\": \"$var_27\", \"arguments\": {\"arg_0\": \"$var_26.result$\", \"arg_1\": 11}}, {\"name\": \"divide\", \"label\": \"$var_28\", \"arguments\": {\"arg_0\": \"$var_25.result$\", \"arg_1\": \"$var_27.result$\"}}, {\"name\": \"add\", \"label\": \"$var_29\", \"arguments\": {\"arg_0\": \"$var_22.result$\", \"arg_1\": \"$var_28.result$\"}}, {\"name\": \"add\", \"label\": \"$var_30\", \"arguments\": {\"arg_0\": 5, \"arg_1\": 10}}, {\"name\": \"add\", \"label\": \"$var_31\", \"arguments\": {\"arg_0\": \"$var_30.result$\", \"arg_1\": 15}}, {\"name\": \"subtract\", \"label\": \"$var_32\", \"arguments\": {\"arg_0\": 1230, \"arg_1\": \"$var_31.result$\"}}, {\"name\": \"add\", \"label\": \"$var_33\", \"arguments\": {\"arg_0\": 9, \"arg_1\": 10}}, {\"name\": \"add\", \"label\": \"$var_34\", \"arguments\": {\"arg_0\": \"$var_33.result$\", \"arg_1\": 11}}, {\"name\": \"divide\", \"label\": \"$var_35\", \"arguments\": {\"arg_0\": \"$var_32.result$\", \"arg_1\": \"$var_34.result$\"}}, {\"name\": \"add\", \"label\": \"$var_36\", \"arguments\": {\"arg_0\": \"$var_29.result$\", \"arg_1\": \"$var_35.result$\"}}]\n\nGold Answer:\n615.0\n\nNow solve:\n24 machines can do a work in 10days. How many machines are needed to complete the work in 40days?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 695,
    "text": "Example:\n\nInstruction:\nBy selling 12 pencils for a rupee a man loses 20%. How many for a rupee should he sell in order to gain 20%?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 20}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 20}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 12}}]\n\nGold Answer:\n8.0\n\nNow solve:\nFor any positive number x, the function [x] denotes the greatest integer less than or equal to x. For example, [1] = 1, [1.367] = 1 and [1.999] = 1. If k is a positive integer such that k^2 is divisible by 45 and 80, what is the units digit of k^3/4000 ?\n\nUse this API documentation for reference: [{\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 696,
    "text": "Example:\n\nInstruction:\nA trader cheats both his supplier and customer by using faulty weights. When he buys from the supplier, he takes 30% more than the indicated weight. When he sells to his customer, he gives the customer a weight such that 40% of that is added to the weight, the weight claimed by the trader is obtained. If he charges the cost price of the weight that he claims, find his profit percentage.\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 40}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 100}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 30}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n82.0\n\nNow solve:\nThere are 1000 students in a school and among them 30 % of them attends chess class. 10% of the students who are in the chess class are also enrolled for swimming. No other students are interested in swimming so how many will attend the swimming class if all enrolled attends?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 697,
    "text": "Example:\n\nInstruction:\nFind the remainder of the division (2^14)/7.\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"power\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 14}}, {\"name\": \"reminder\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 7}}]\n\nGold Answer:\n4.0\n\nNow solve:\nGiven a string \"abcdefg\", find all substrings of length 3, then concatenate them into a single string separated by commas and spaces.\n\nUse this API documentation for reference: [{\"description\": \"Distribute n balls into m bins. Each bin can hold arbitrarily many balls.\", \"name\": \"distribute_balls\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of n-element lists, where each list represents a bin and its elements are the indices of the balls in that bin.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"m\": {\"description\": \"The number of bins.\", \"type\": \"integer\"}, \"n\": {\"description\": \"The number of balls.\", \"type\": \"integer\"}}, \"required\": [\"m\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Generates a file path based on the provided number and directory path.\\nThe file path is formatted as: `dir_path/n/num.txt`, where `n` represents the last digit of `num`.\\nIf `num` is less than `10`, prepend a zero to the filename.\", \"name\": \"generate_filepath_for_number\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The generated file path.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"dir_path\": {\"description\": \"The directory path where the file will be located.\", \"type\": \"string\"}, \"num\": {\"description\": \"The number used to generate the file path.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"num\", \"dir_path\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Converts a list of integers to a list of strings.\", \"name\": \"list_to_string_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings with each integer represented as a string.\\n    If the input list is empty, the function returns an empty list.\\n    The function handles any generic type and returns an optional value.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The input list.\", \"items\": {}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}, {\"description\": \"Returns all substrings of length `n` from a given input `string`.\", \"name\": \"find_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The length of the substrings.\", \"type\": \"integer\"}, \"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Compares the content of two files using their content's hash values.\", \"name\": \"compare_file_hashes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the hash values are the same, indicating the contents of the files are equal.\\n    False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"file1\": {\"description\": \"The path to the first file.\", \"type\": \"string\"}, \"file2\": {\"description\": \"The path to the second file.\", \"type\": \"string\"}}, \"required\": [\"file1\", \"file2\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Concatenates all strings in a list into a single string, separated by commas and spaces.\", \"name\": \"concatenate_with_commas\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string with all the input strings concatenated, separated by commas and spaces.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"my_list\": {\"description\": \"A list of strings to be concatenated.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"my_list\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Adds each tuple's first element (key) to the dictionary and assigns its corresponding second element (value) as the key's value.\\nIf the key already exists in the dictionary, its value is appended to a list in the dictionary value.\", \"name\": \"add_tuples_to_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"d\": {\"additionalProperties\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"description\": \"The dictionary to add the tuples to.\", \"type\": \"object\"}, \"t\": {\"description\": \"The list of tuples to add to the dictionary.\", \"items\": {\"prefixItems\": [{\"type\": \"string\"}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"d\", \"t\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 698,
    "text": "Example:\n\nInstruction:\nIn an election only two candidates contested. A candidate secured 70% of the valid votes and won by a majority of 178 votes. Find the total number of valid votes?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 70}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 70, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 100}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 178, \"arg_1\": \"$var_3.result$\"}}]\n\nGold Answer:\n445.0\n\nNow solve:\nGiven a dictionary {'a': 1, 'b': 2, 'c': 10, 'd': 11, 'e': 12}, select the key-value pairs where the values are greater than or equal to 10. Then, construct a string from the selected key-value pairs in the format key=value, separated by commas and enclosed in curly braces.\n\nUse this API documentation for reference: [{\"description\": \"Checks if a string is in the format \\\"<type>-<name>\\\", where <type> is either \\\"f\\\" or \\\"r\\\", and <name> is an alphanumeric word.\", \"name\": \"check_format\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the string is in the correct format, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The string to check.\", \"type\": \"object\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Converts a distance in miles or kilometers to miles.\", \"name\": \"convert_to_miles\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The distance in miles.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"distance\": {\"description\": \"A string representing a distance in miles or kilometers.\", \"type\": \"string\"}}, \"required\": [\"distance\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the mean of the squares of a list of numbers.\", \"name\": \"mean_of_squares\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The mean of the squares of the numbers in the list.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Builds a command line string from a dictionary of command line arguments.\", \"name\": \"build_command\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"args_dict\": {\"additionalProperties\": {\"type\": [\"array\", \"string\"]}, \"description\": \"A dictionary where the keys are the command line arguments and the values are the argument values.\", \"type\": \"object\"}}, \"required\": [\"args_dict\"], \"type\": \"object\"}}, {\"description\": \"Constructs a string from a dictionary of string keys and values.\\nEach key-value pair is represented as key=value, separated by commas and enclosed in curly braces.\\nIf a key has no corresponding value, it is represented as key=.\", \"name\": \"string_from_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string representation of the dictionary in the desired format.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary of string keys and values.\", \"type\": \"object\"}}, \"required\": [\"dictionary\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Calculates the total size of a neural network's parameters in bytes.\", \"name\": \"calculate_model_size\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The total size of the model's parameters in bytes.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"model\": {\"description\": \"The PyTorch model.\", \"type\": \"object\"}}, \"required\": [\"model\"], \"type\": \"object\"}}, {\"description\": \"An empty Python function that can take any number of arguments and keyword arguments.\", \"name\": \"unknown\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"args\": {\"description\": \"Any number of positional arguments.\"}, \"kwargs\": {\"description\": \"Any number of keyword arguments.\"}}, \"required\": [\"args\", \"kwargs\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Selects the key-value pairs from a dictionary where the values are greater than or equal to 10.\", \"name\": \"select_pairs\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new dictionary containing only the selected key-value pairs.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"The input dictionary.\", \"type\": \"object\"}}, \"required\": [\"dictionary\"], \"type\": \"object\"}}, {\"description\": \"Builds a dictionary where the keys are the unique characters in the string and the values are their corresponding minimum indices in the string.\", \"name\": \"build_char_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the keys are the unique characters in the string and the values are their corresponding minimum indices in the string.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"word\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"word\"], \"type\": \"object\"}}, {\"description\": \"Counts the occurrences of a character in a string using recursion.\\nIf the character is not found in the string, returns 0.\", \"name\": \"count_character_occurrences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"character\": {\"description\": \"The character to count occurrences of.\", \"type\": \"string\"}, \"string\": {\"description\": \"The input string.\", \"type\": \"object\"}}, \"required\": [\"string\", \"character\"], \"type\": \"object\"}}, {\"description\": \"Adds Gaussian noise to a PyTorch tensor.\", \"name\": \"add_noise_to_torch_tensor\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"device\": {\"description\": \"The device on which the noise tensor will be created.\", \"type\": \"object\"}, \"scale\": {\"description\": \"The standard deviation of the noise distribution.\", \"type\": \"number\"}, \"tensor\": {\"description\": \"The tensor to which noise is to be added.\", \"type\": \"object\"}}, \"required\": [\"tensor\", \"scale\", \"device\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 699,
    "text": "Example:\n\nInstruction:\nGiven a list of numbers [1.1, 2.2, 3.3, 4.4], convert them to integers and count the total number of elements.\n\nUse this API documentation for reference: [{\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Converts a signal from voltage to dBm using the formula $P_{dBm} = 10 \\\\cdot \\\\log_{10}(P_{dBm})$.\", \"name\": \"convert_voltage_to_dbm\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"voltage\": {\"description\": \"The input signal in either dBm or voltage.\", \"type\": \"number\"}}, \"required\": [\"voltage\"], \"type\": \"object\"}}, {\"description\": \"Computes the standard deviation of a function given the partial derivatives and standard deviations of its variables.\", \"name\": \"error_propagation\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"partial_x\": {\"description\": \"The partial derivative of the function with respect to x.\", \"type\": \"number\"}, \"partial_y\": {\"description\": \"The partial derivative of the function with respect to y.\", \"type\": \"number\"}, \"sigma_x\": {\"description\": \"The standard deviation of x.\", \"type\": \"number\"}, \"sigma_y\": {\"description\": \"The standard deviation of y.\", \"type\": \"number\"}}, \"required\": [\"partial_x\", \"partial_y\", \"sigma_x\", \"sigma_y\"], \"type\": \"object\"}}, {\"description\": \"Counts the total number of elements in an object that supports the `__getitem__` and `__len__` protocols.\", \"name\": \"count_elements_in_object\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The object to count the elements in.\"}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Converts a list of numbers in float format to an equivalent list of integers.\", \"name\": \"to_integer_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"float_list\": {\"description\": \"A list of numbers in float format.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"float_list\"], \"type\": \"object\"}}, {\"description\": \"Calculates the arithmetic mean of a given list of numbers. If the list is empty, return 0.\", \"name\": \"avg\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of the `foo` attribute of all objects in a list.\", \"name\": \"get_sum_of_foo\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The sum of the `foo` attribute of all objects in the list.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"obj_list\": {\"description\": \"A list of objects, where each object is a dictionary with a `foo` attribute.\", \"items\": {\"additionalProperties\": {\"type\": \"integer\"}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"obj_list\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Adds a space to each line of the input string while preserving the original indentation.\", \"name\": \"add_space_to_str_lines\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The modified string with a space added to each line.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"to_integer_list\", \"arguments\": {\"float_list\": [1.1, 2.2, 3.3, 4.4]}, \"label\": \"$var1\"}, {\"name\": \"count_elements_in_object\", \"arguments\": {\"obj\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n4\n\nNow solve:\nI have a DNA sequence \"ATCG\". I want to find its complement. Then, I want to generate a pair of numbers x and y that are uniformly random and are in the range of [0, 1000000000].\n\nUse this API documentation for reference: [{\"description\": \"Creates a dictionary with fruit names as keys and default values.\", \"name\": \"default_fruit_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"default_value\": {\"description\": \"The default value for each fruit name in the dictionary.\", \"type\": \"integer\"}, \"fruit_list\": {\"description\": \"A list of fruit names.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"fruit_list\"], \"type\": \"object\"}}, {\"description\": \"Checks if any character in the string occurs more than once.\", \"name\": \"is_any_char_repeated\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if any character occurs more than once, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Computes the nth term of the Fibonacci sequence.\", \"name\": \"compute_nth_fibonacci\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing the nth term and a boolean to indicate whether it is valid.\\n    If the input is not a non-negative integer, the function returns (None, False).\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The term to compute.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Complements a DNA sequence by mapping nucleotides according to the given rules.\", \"name\": \"complement_dna_sequence\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The complemented DNA sequence.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"dna_sequence\": {\"description\": \"The DNA sequence to be complemented.\", \"type\": \"string\"}}, \"required\": [\"dna_sequence\"], \"type\": \"object\"}}, {\"description\": \"Finds the lowest temperature from a list of temperatures.\", \"name\": \"find_lowest_temperature\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The lowest temperature, or None if the list is empty.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"T\": {\"description\": \"A list of temperatures.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"T\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Checks if the target number exists in the list of numbers.\", \"name\": \"target_number_exists\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the target number is found in the list, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"target\": {\"description\": \"The target integer to find in the list.\", \"type\": \"integer\"}}, \"required\": [\"numbers\", \"target\"], \"type\": \"object\"}}, {\"description\": \"Function to generate a pair of numbers x and y that are uniformly random and are in the range of [0, 1000000000].\", \"name\": \"generate_pair_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"random_seed\": {\"description\": \"(optional) a seed for the random number generator. If not provided, a random seed will be generated.\", \"nullable\": true, \"type\": \"integer\"}}, \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of keys that have the given value in the dictionary.\\nIf no keys with the value are found, returns an empty list.\", \"name\": \"get_ids_by_value\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {}, \"description\": \"The dictionary to search in.\", \"type\": \"object\"}, \"value\": {\"description\": \"The value to search for.\"}}, \"required\": [\"dictionary\", \"value\"], \"type\": \"object\"}}, {\"description\": \"Determines the coordinates of a cell in a two-dimensional grid based on the cell number and number of cells in each row.\", \"name\": \"cell_coordinate\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple `(row, col)` representing the coordinates of the cell in the grid.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"cell\": {\"description\": \"The cell number.\", \"type\": \"integer\"}, \"num_cells_in_row\": {\"description\": \"The number of cells in each row of the grid.\", \"type\": \"integer\"}}, \"required\": [\"cell\", \"num_cells_in_row\"], \"type\": \"object\"}}, {\"description\": \"Calculates the critical success index (CSI) given the truth and forecast arrays.\", \"name\": \"compute_csi\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"forecast\": {\"description\": \"A 2D numpy array containing binary values (0 or 1) indicating the presence or absence of a weather event.\", \"type\": \"object\"}, \"truth\": {\"description\": \"A 2D numpy array containing binary values (0 or 1) indicating the presence or absence of a weather event.\", \"type\": \"object\"}}, \"required\": [\"truth\", \"forecast\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Constructs a query to search for a user in LDAP given a username.\", \"name\": \"construct_ldap_query\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A query string in the form of a string, with placeholders for the username and other parameters.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"username\": {\"description\": \"The username to search for.\", \"type\": \"string\"}}, \"required\": [\"username\"], \"type\": \"object\"}}, {\"description\": \"Zips a JSON document by changing the value of a key and compressing the resulting JSON string.\", \"name\": \"zip_json\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"json_document\": {\"description\": \"The JSON document to zip.\", \"type\": \"string\"}, \"key\": {\"description\": \"The key to modify in the JSON document.\", \"type\": \"string\"}, \"new_value\": {\"description\": \"The new value to assign to the key.\", \"type\": \"string\"}}, \"required\": [\"json_document\", \"key\", \"new_value\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 700,
    "text": "Example:\n\nInstruction:\nIf an integer n is to be chosen at random from the integers 1 to 96, inclusive, what is the probability that n(n + 1)(n + 2) will be divisible by 6?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 96, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 96, \"arg_1\": 6}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 96}}]\n\nGold Answer:\n0.6666666666666666\n\nNow solve:\nFind the simple interest on $10000 at 6% per annum for 12 months?\n\nUse this API documentation for reference: [{\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 701,
    "text": "Example:\n\nInstruction:\nA high school has 360 students 1/2 attend the arithmetic club, 5/8 attend the biology club and 3/4 attend the chemistry club. 3/8 attend all 3 clubs. If every student attends at least one club how many students attend exactly 2 clubs.\n\nUse this API documentation for reference: [{\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 360, \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 360, \"arg_1\": 5}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 8}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 360, \"arg_1\": 3}}, {\"name\": \"divide\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": 4}}, {\"name\": \"add\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": \"$var_7.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": 360, \"arg_1\": 3}}, {\"name\": \"divide\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_9.result$\", \"arg_1\": 8}}, {\"name\": \"multiply\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": \"$var_10.result$\", \"arg_1\": 2}}, {\"name\": \"subtract\", \"label\": \"$var_12\", \"arguments\": {\"arg_0\": \"$var_8.result$\", \"arg_1\": \"$var_11.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_13\", \"arguments\": {\"arg_0\": \"$var_12.result$\", \"arg_1\": 360}}]\n\nGold Answer:\n45.0\n\nNow solve:\nThe percentage profit earned by selling an article for Rs. 1920 is equal to the percentage loss incurred by selling the same article for Rs. 1280. At what price should the article be sold to make 20% profit?\n\nUse this API documentation for reference: [{\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 702,
    "text": "Example:\n\nInstruction:\nThe price of stock increased by 8% last year and decreased by 6% this year. What is the net percentage change in the price of the stock?\n\nUse this API documentation for reference: [{\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 8}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 100}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 6}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 100}}, {\"name\": \"subtract\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n1.52\n\nNow solve:\nSandy had $231 left after spending 30% of the money she took for shopping. How much money did Sandy take along with her?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 703,
    "text": "Example:\n\nInstruction:\nBecause he\u2019s taxed by his home planet, Mork pays a tax rate of 40% on his income, while Mindy pays a rate of only 20% on hers. If Mindy earned 4 times as much as Mork did, what was their combined tax rate?\n\nUse this API documentation for reference: [{\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 40, \"arg_1\": 100}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 20, \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 4, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 4}}, {\"name\": \"divide\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_5.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": 100, \"arg_1\": \"$var_6.result$\"}}]\n\nGold Answer:\n24.0\n\nNow solve:\nHow many 3 digit positive integers with distinct digits are there, which are not multiples of 10?\n\nUse this API documentation for reference: [{\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 704,
    "text": "Example:\n\nInstruction:\nIf 40% of (x-y) = 20% of (x+y), then what percent of x is y?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 40, \"arg_1\": 20}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 40, \"arg_1\": 20}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n33.3\n\nNow solve:\nIf a wholesaler distributes items to several outlets (A, B, C and D) in the ratio of 1/12 : 1/13 : 1/15 : 1/2, then find the total number of items the wholesaler distributes?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 705,
    "text": "Example:\n\nInstruction:\nIf 2^y = 4^(5x + 3) and 3^(x - 7) = 9^y, what is the value of x + y ?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"negate\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 7}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 3}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 2}}, {\"name\": \"negate\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\"}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 10}}, {\"name\": \"subtract\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": \"$var_7.result$\"}}, {\"name\": \"negate\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": 7}}, {\"name\": \"add\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_8.result$\", \"arg_1\": \"$var_9.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": \"$var_10.result$\", \"arg_1\": 2}}, {\"name\": \"negate\", \"label\": \"$var_12\", \"arguments\": {\"arg_0\": 7}}, {\"name\": \"multiply\", \"label\": \"$var_13\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 3}}, {\"name\": \"multiply\", \"label\": \"$var_14\", \"arguments\": {\"arg_0\": \"$var_13.result$\", \"arg_1\": 2}}, {\"name\": \"negate\", \"label\": \"$var_15\", \"arguments\": {\"arg_0\": \"$var_14.result$\"}}, {\"name\": \"add\", \"label\": \"$var_16\", \"arguments\": {\"arg_0\": \"$var_12.result$\", \"arg_1\": \"$var_15.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_17\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 10}}, {\"name\": \"subtract\", \"label\": \"$var_18\", \"arguments\": {\"arg_0\": \"$var_17.result$\", \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_19\", \"arguments\": {\"arg_0\": \"$var_16.result$\", \"arg_1\": \"$var_18.result$\"}}, {\"name\": \"add\", \"label\": \"$var_20\", \"arguments\": {\"arg_0\": \"$var_11.result$\", \"arg_1\": \"$var_19.result$\"}}]\n\nGold Answer:\n-5.0\n\nNow solve:\nyou have to send 3000 grapes 1000 kilometers from grapecity to appleland . your truck can carry 1000 grapes at a time . every time you travel a kilometer towards appleland you must pay a tax of 1 grape but you pay nothing when going in the other direction ( towards grapecity ) . what is highest number of grapes you can get to appleland ?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 706,
    "text": "Example:\n\nInstruction:\nA man sells an article at 10% gain. Had be sold at for Rs.60/- more he could have gained 20% what is cost price of article\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 20, \"arg_1\": 10}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 60, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n600.0\n\nNow solve:\nA student has to obtain 30% of the total marks to pass. He got 150 marks and failed by 30 marks. The maximum marks are?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 707,
    "text": "Example:\n\nInstruction:\nMachine A produces 100 parts twice as fast as Machine B does. Machine B produces 100 parts in 80 minutes. If each machine produces parts at a constant rate, how many parts does Machine A produce in 20 minutes?\n\nUse this API documentation for reference: [{\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 80}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 20}}]\n\nGold Answer:\n50.0\n\nNow solve:\nThere is enough provisions for 600 men in an army camp for 25 days. If there were 300 men less, how long will the provision last?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 708,
    "text": "Example:\n\nInstruction:\nA reduction of 40% in the price of oil enables a house wife to obtain 5kgs more for Rs.800, what is the reduced price for kg?\n\nUse this API documentation for reference: [{\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 800, \"arg_1\": 40}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 100}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 5}}]\n\nGold Answer:\n64.0\n\nNow solve:\nI want to extract the content of a text file located at '/path/to/file'. Then, I want to add equal padding of 5 to both sides of the extracted content. After that, I want to retrieve the shape information of a PyTorch tensor.\n\nUse this API documentation for reference: [{\"description\": \"Adds equal padding to both sides of a string.\", \"name\": \"add_paddings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"padding_width\": {\"description\": \"The width of the padding. Must be a positive integer.\", \"type\": [\"integer\", \"number\"]}, \"text\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"text\", \"padding_width\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Appends a list of path components into a single path string.\\nThe function handles platform-specific path separators appropriately.\\nIt does not remove any leading or trailing separators.\", \"name\": \"append_path_components\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"path_components\": {\"description\": \"A list of path components.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"path_components\"], \"type\": \"object\"}}, {\"description\": \"Generates a tensor with a random shape of `rank` dimensions using `numpy.random.rand`.\", \"name\": \"get_random_tensor\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tensor with a random shape of `rank` dimensions.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"rank\": {\"description\": \"The number of dimensions for the tensor.\", \"type\": \"integer\"}, \"seed\": {\"description\": \"The seed to set the random seed to.\", \"type\": \"integer\"}}, \"required\": [\"seed\", \"rank\"], \"type\": \"object\"}}, {\"description\": \"Flattens a list of iterables into a generator object.\", \"name\": \"flatten_iterables\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"iterables\": {\"description\": \"A list of iterables to be flattened.\", \"type\": \"object\"}}, \"required\": [\"iterables\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Reads a data file containing a list of integers and returns a dictionary containing the frequency of each integer.\", \"name\": \"compute_frequency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary containing the frequency of each integer.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the data file.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Splits a file name into its base name and extension.\\n\\nIf the file name does not have an extension, returns the file name as the base name and an empty string as the extension.\", \"name\": \"split_file_name\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing the base name and extension.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"file_name\": {\"description\": \"The file name to split.\", \"type\": \"string\"}}, \"required\": [\"file_name\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Encodes a 32-bit unsigned integer value into a bytearray of 5 bytes.\\nThe first byte has the first 0-7 bits of the value, the second byte has the next 8-15 bits of the value,\\nand so on. The last byte is the final 8 bits of the value.\", \"name\": \"encode_32bit_int\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"value\": {\"description\": \"The 32-bit unsigned integer value to be encoded.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"value\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum, difference, product, and quotient of two numbers.\", \"name\": \"four_operations\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing the sum, difference, product, and quotient of the two numbers.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The first number.\", \"type\": \"number\"}, \"y\": {\"description\": \"The second number.\", \"type\": \"number\"}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Extracts the content of a text file as a string.\", \"name\": \"text_file_to_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The content of the file as a string. If the file does not exist, an empty string is returned.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"path\": {\"description\": \"The path to the text file.\", \"type\": \"string\"}}, \"required\": [\"path\"], \"type\": \"object\"}}, {\"description\": \"Retrieves the shape information of a PyTorch tensor.\", \"name\": \"shape_info\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list containing the size of each dimension of the tensor.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"tensor\": {\"description\": \"The input PyTorch tensor.\", \"type\": \"object\"}}, \"required\": [\"tensor\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 709,
    "text": "Example:\n\nInstruction:\n3 different containers contain 50 litres , 100 litres and 150 litres of mixture of milk and water respectively . what is the biggest measure can measure all the different quantities exactly ?\n\nUse this API documentation for reference: [{\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"gcd\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 50, \"arg_1\": 100}}, {\"name\": \"gcd\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 150}}]\n\nGold Answer:\n50.0\n\nNow solve:\nIf $120 invested at a certain rate of simple interest amounts to $240 at the end of 3 years,How much will $150 amount to at the same rate of interest in 6 years?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 710,
    "text": "Example:\n\nInstruction:\nA library has an average of 510 visitors on Sunday and 240 on other days. The average number of visitors per day in a month of 30 days beginning with a Sunday is\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 510}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 1}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 240}}, {\"name\": \"add\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_6.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_7.result$\", \"arg_1\": 30}}]\n\nGold Answer:\n285.0\n\nNow solve:\nA shopkeeper loses 15%,if an article is sold for $102. What should be the selling price of the article to gain 20%?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 711,
    "text": "Example:\n\nInstruction:\nIf a man lost 4% by selling oranges at the rate of 48 a rupee at how many a rupee must he sell them to gain 44%?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 4}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 48}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 44}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}]\n\nGold Answer:\n32.0\n\nNow solve:\nFind the principle on a certain sum of money at 5% per annum for 2 2/5 years if the amount being Rs.1904?\n\nUse this API documentation for reference: [{\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 712,
    "text": "Example:\n\nInstruction:\nI have a list of numbers [1, 2, 3, 4, 5]. I want to calculate the difference between each element and its adjacent element, and then convert the resulting list into a formatted string.\n\nUse this API documentation for reference: [{\"description\": \"Joins a path with the root directory.\", \"name\": \"my_joinpath\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The joined path.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"path\": {\"description\": \"The path to join with the root directory.\", \"type\": \"string\"}, \"root_dir\": {\"description\": \"The root directory.\", \"type\": \"string\"}}, \"required\": [\"path\", \"root_dir\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Checks if the string representations of `n` and its reversed version are equal.\", \"name\": \"reversed_equal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the string representations of `n` and its reversed version are equal, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"A non-negative integer or float.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Repeats each element in a list or tuple `n` times.\", \"name\": \"repeat_elements\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list or tuple containing `n` copies of each element in `my_list`.\", \"type\": [\"array\", \"array\"]}}}, \"parameters\": {\"properties\": {\"my_list\": {\"description\": \"The list or tuple to repeat.\", \"type\": [\"array\", \"array\"]}, \"n\": {\"description\": \"The number of times to repeat each element.\", \"type\": \"integer\"}}, \"required\": [\"my_list\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Calculates the factorial of a positive integer using recursion.\", \"name\": \"get_factorial\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The positive integer to calculate the factorial of.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Swaps the keys and values of a dictionary.\", \"name\": \"key_values_swap\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new dictionary with keys and values swapped.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {}, \"description\": \"The dictionary to swap keys and values.\", \"type\": \"object\"}}, \"required\": [\"dictionary\"], \"type\": \"object\"}}, {\"description\": \"Returns a new list containing the difference between each element and its adjacent element.\\nIf an element has no adjacent element, its corresponding new element should be 0.\", \"name\": \"diff_adjacent\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}, {\"description\": \"Converts a DataFrame with a `labels` column of lists to a DataFrame with a `label` column of strings.\", \"name\": \"convert_dataframe\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new DataFrame with the desired structure.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"df\": {\"description\": \"The input DataFrame.\", \"type\": \"object\"}}, \"required\": [\"df\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Converts a list of numbers into a formatted string.\\n\\nEach number is represented as a string, padded to 3 characters with leading zeros.\\nIf the number is even, the string is in uppercase. Otherwise, the string is in lowercase.\\nThe strings are separated by commas and a space.\", \"name\": \"convert_list_to_formatted_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A formatted string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Extracts audio parameters from a given audio file.\", \"name\": \"extract_audio_params\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing the number of channels, sample rate, and bit depth.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"audio_file_path\": {\"description\": \"The path to the audio file.\", \"type\": \"string\"}}, \"required\": [\"audio_file_path\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Checks if the given object has the specified attribute.\", \"name\": \"check_has_attribute\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"attr\": {\"description\": \"The attribute to check for.\", \"type\": \"string\"}, \"obj\": {\"description\": \"The object to check.\"}}, \"required\": [\"obj\", \"attr\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"diff_adjacent\", \"arguments\": {\"nums\": [1, 2, 3, 4, 5]}, \"label\": \"$var1\"}, {\"name\": \"convert_list_to_formatted_string\", \"arguments\": {\"numbers\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n001, 001, 001, 001, 000\n\nNow solve:\nIn a survey of parents, exactly 7/8 of the mothers and 3/4 of the fathers held full-time jobs. If 40 percent of the parents surveyed were women, what percent of the parents did not hold full-time jobs?\n\nUse this API documentation for reference: [{\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 713,
    "text": "Example:\n\nInstruction:\nGiven a list of integers [1, 2, 3, -4, -5, 6, -7], move all negative numbers to the back of the list, then shift the elements of the list by 2 indexes to the right.\n\nUse this API documentation for reference: [{\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Shifts the elements of a list by `n` indexes.\", \"name\": \"shift_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The input list of numbers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"n\": {\"description\": \"The number of indexes to shift the elements.\", \"type\": \"integer\"}}, \"required\": [\"lst\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns the index of the suffix in the string.\", \"name\": \"get_suffix_index\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The index of the suffix in the string, or -1 if the suffix is not found.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The original string.\", \"type\": \"string\"}, \"suffix\": {\"description\": \"The suffix to search for.\", \"type\": \"string\"}}, \"required\": [\"string\", \"suffix\"], \"type\": \"object\"}}, {\"description\": \"Checks if the filename extension is 'csv'.\", \"name\": \"validate_csv_file_extension\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the filename extension is 'csv', False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The name of the file to check.\", \"type\": \"string\"}}, \"required\": [\"filename\"], \"type\": \"object\"}}, {\"description\": \"Converts a string containing a structured triplet in the format \\\"key1, key2, key3\\\" to a tuple of three elements where each element is a string representing a key in the triplet.\", \"name\": \"convert_triplet\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple of three elements where each element is a string representing a key in the triplet.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"triplet_str\": {\"description\": \"The string containing the structured triplet.\", \"type\": \"string\"}}, \"required\": [\"triplet_str\"], \"type\": \"object\"}}, {\"description\": \"Replaces all occurrences of the characters in the passed dictionary with the corresponding escaped values.\", \"name\": \"replace_with_escapes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"escape_dict\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary of the form {'char': 'escape_val'}, where 'char' is a character to be replaced and 'escape_val' is its corresponding escaped value.\", \"type\": \"object\"}, \"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\", \"escape_dict\"], \"type\": \"object\"}}, {\"description\": \"Extracts all consecutive substrings of the given string that match the regular expression.\", \"name\": \"extract_consecutive_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of all consecutive substrings that match the regular expression.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Calculates the average intensity of an RGB image.\", \"name\": \"average_intensity\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A 2D numpy array representing the average intensity of the image.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"image\": {\"description\": \"A 3D numpy array representing the RGB image.\", \"type\": \"object\"}}, \"required\": [\"image\"], \"type\": \"object\"}}, {\"description\": \"Computes the expected value of a discrete uniform random variable X that takes values 1, 2, 3, ..., n, each with probability 1/n.\", \"name\": \"expected_value\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The number of possible outcomes.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Moves all negative numbers to the back of the list.\", \"name\": \"move_negatives\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list with all negative numbers at the back.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"move_negatives\", \"arguments\": {\"lst\": [1, 2, 3, -4, -5, 6, -7]}, \"label\": \"$var1\"}, {\"name\": \"shift_list\", \"arguments\": {\"lst\": \"$var1.output_0$\", \"n\": 2}, \"label\": \"$var2\"}]\n\nGold Answer:\n[3, 6, -4, -5, -7, 1, 2]\n\nNow solve:\nI want to highlight the substring of the string \"Hello, World!\" starting at index 7 in red color and with a yellow background.\n\nUse this API documentation for reference: [{\"description\": \"Clamps a value to a specified range.\", \"name\": \"clamp_value\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The clamped value.\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"max_value\": {\"description\": \"The maximum value of the range. Default is 1.\", \"type\": [\"integer\", \"number\"]}, \"min_value\": {\"description\": \"The minimum value of the range. Default is 0.\", \"type\": [\"integer\", \"number\"]}, \"value\": {\"description\": \"The value to clamp.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"value\"], \"type\": \"object\"}}, {\"description\": \"Checks if a given string is a valid version number.\\n\\nA version number is valid if it follows the format \\\"major.minor.patch\\\", where\\nmajor, minor, and patch are all non-negative integers separated by dots, and\\npatch is optional.\", \"name\": \"is_valid_version_number\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A boolean value indicating whether the version number is valid.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"version\": {\"description\": \"The string to check.\", \"type\": \"string\"}}, \"required\": [\"version\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Recursively replaces each value in the input dictionary with a dictionary.\\n\\nThe new dictionary has the original value as the key and the number of times\\nthe value appears in the original dictionary as the value.\", \"name\": \"recursion\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new dictionary with the same keys as the input dictionary and the\\n    values replaced as described above.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"d\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"The input dictionary.\", \"type\": \"object\"}}, \"required\": [\"d\"], \"type\": \"object\"}}, {\"description\": \"Rotates the elements in the array by `k` positions in the right direction.\", \"name\": \"angle_rotation\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The array after rotating the elements by `k` positions in the right direction.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"arr\": {\"description\": \"The array of numbers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"k\": {\"description\": \"The number of positions to rotate the elements in the array.\", \"type\": \"integer\"}}, \"required\": [\"arr\", \"k\"], \"type\": \"object\"}}, {\"description\": \"Calculates the midpoint values of asset price data over a specified window size.\", \"name\": \"calculate_midpoints\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of midpoint values.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"price_data\": {\"description\": \"A list of asset price data points.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"window_size\": {\"description\": \"The size of the sliding window.\", \"type\": \"integer\"}}, \"required\": [\"price_data\", \"window_size\"], \"type\": \"object\"}}, {\"description\": \"Converts a Unix timestamp (seconds since epoch) to a human-readable string with the format \\\"%Y-%m-%d %H:%M:%S\\\".\", \"name\": \"timestamp_to_str\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string representing the timestamp in the format \\\"%Y-%m-%d %H:%M:%S\\\".\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"timestamp\": {\"description\": \"A tuple of integers representing the year, month, day, hour, minute, and second.\", \"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}, {\"type\": \"integer\"}, {\"type\": \"integer\"}, {\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}}, \"required\": [\"timestamp\"], \"type\": \"object\"}}, {\"description\": \"Extracts all words from a given string text (including non-alphabetical characters).\\n\\nThe function returns a list of words, where each word is a list of alphanumeric characters.\", \"name\": \"extract_words_from_text\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of words extracted from the input text.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string to extract words from.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Computes the floor of `n / d` without using division, floating-point operations, built-in functions like `math.floor`, or converting it into computing the ceiling. Instead, use integer division to achieve the result.\", \"name\": \"floor_divide_without_div\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"d\": {\"description\": \"The denominator.\", \"type\": \"integer\"}, \"n\": {\"description\": \"The numerator.\", \"type\": \"integer\"}}, \"required\": [\"n\", \"d\"], \"type\": \"object\"}}, {\"description\": \"Returns the substring of `s` starting at index `i` and ending at the end of the string.\\nIf `i` is out of bounds, an empty string is returned.\", \"name\": \"substring_from_index\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"i\": {\"description\": \"The starting index.\", \"type\": [\"integer\", \"number\"]}, \"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\", \"i\"], \"type\": \"object\"}}, {\"description\": \"Highlights the given text in the specified color and background color.\", \"name\": \"highlight\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"background_color\": {\"description\": \"The background color of the text. Default is 'transparent'.\", \"type\": \"string\"}, \"color\": {\"description\": \"The color of the text. Default is 'black'.\", \"type\": \"string\"}, \"text\": {\"description\": \"The input string to be highlighted.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the decimal value of the binary number 10^n.\", \"name\": \"decimal_of_power_of_ten\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The decimal value of the binary number 10^n.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The exponent of the binary number 10.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 714,
    "text": "Example:\n\nInstruction:\nGiven a list of strings ['apple', 'banana', 'cherry', 'date', 'elderberry'], reverse the order of the list and then return the first and last two elements of the reversed list.\n\nUse this API documentation for reference: [{\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Reverses the order of a list of strings.\", \"name\": \"reverse_string_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A reversed copy of the input list. If the input list is empty, returns an empty list.\\n    If the input list contains only the string \\\"N/A\\\", returns a list with only the string \\\"N/A\\\".\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string_list\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"string_list\"], \"type\": \"object\"}}, {\"description\": \"Retrieve the population of a country from a dictionary.\", \"name\": \"get_population\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The population data for the specified country, or None if the country is not in the dictionary.\\n\\nExample:\\n    >>> populations = {'China': 1439323776, 'India': 1380004385, 'United States': 331002651}\\n    >>> get_population('China', populations)\\n    1439323776\\n    >>> get_population('United Kingdom', populations) is None\\n    True\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"country\": {\"description\": \"A string representing the country name.\", \"type\": \"string\"}, \"populations\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"A dictionary containing country names as keys and population data as values.\", \"type\": \"object\"}}, \"required\": [\"country\", \"populations\"], \"type\": \"object\"}}, {\"description\": \"Returns a sublist containing only the first and last two elements of the input list.\", \"name\": \"get_first_and_last_items\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A sublist containing the first and last two elements of the input list.\\n    If the input list has fewer than four elements, returns an empty list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"The input list or array.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"input_list\"], \"type\": \"object\"}}, {\"description\": \"Counts the number of nodes in a binary tree.\", \"name\": \"count_size\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of nodes in the binary tree.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"root\": {\"description\": \"The root node of the binary tree.\", \"nullable\": true, \"type\": \"object\"}}, \"required\": [\"root\"], \"type\": \"object\"}}, {\"description\": \"Computes the indices of the k smallest values in the tensor x.\", \"name\": \"compute_min_value_indices\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The indices of the k smallest values in the tensor x.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"k\": {\"description\": \"The number of smallest values to find.\", \"type\": \"integer\"}, \"x\": {\"description\": \"The input tensor.\", \"type\": \"object\"}}, \"required\": [\"x\", \"k\"], \"type\": \"object\"}}, {\"description\": \"Recursively traverses a Pytorch model and identifies all parameters that have a name that contains a given substring.\", \"name\": \"has_parameter_with_substring\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A boolean indicating whether any matching parameters were found.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"model\": {\"description\": \"The Pytorch model to traverse.\", \"type\": \"object\"}, \"substring\": {\"description\": \"The substring to search for in parameter names.\", \"type\": \"string\"}}, \"required\": [\"model\", \"substring\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Reads input data from a file and returns a list of dictionaries.\", \"name\": \"read_and_parse\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of dictionaries, where each dictionary contains a single key-value pair.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the input file.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Checks if two objects have the same `source` attribute and are different from `None`.\", \"name\": \"is_same_source\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if both objects have the same `source` attribute and are different from `None`. Otherwise, False.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"obj1\": {\"description\": \"The first object.\"}, \"obj2\": {\"description\": \"The second object.\"}}, \"required\": [\"obj1\", \"obj2\"], \"type\": \"object\"}}, {\"description\": \"Generates all k-mers of a given input string.\", \"name\": \"k_mers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of k-mers.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"k\": {\"description\": \"The length of the k-mers.\", \"type\": \"integer\"}, \"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\", \"k\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Finds the index of the key for a given value in a custom ordered dictionary.\", \"name\": \"find_key_index\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The index of the key if found, otherwise -1.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"ordered_dict\": {\"additionalProperties\": {}, \"description\": \"A custom ordered dictionary with an ordered list of keys.\", \"type\": \"object\"}, \"target_value\": {\"description\": \"The value to search for in the dictionary.\"}}, \"required\": [\"ordered_dict\", \"target_value\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Formats the given dictionary as a tab-separated values string.\", \"name\": \"format_dict_as_tsv\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"data\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary containing the data to be formatted.\", \"type\": \"object\"}}, \"required\": [\"data\"], \"type\": \"object\"}}, {\"description\": \"Finds the first value in `data` that matches the first key in `keys`.\", \"name\": \"find_by_key\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The first value in `data` that matches the first key in `keys`, or `None` if no match is found.\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"data\": {\"additionalProperties\": {\"type\": [\"integer\", \"number\"]}, \"description\": \"A dictionary containing key-value pairs.\", \"type\": \"object\"}, \"keys\": {\"description\": \"A list of keys to search for in `data`.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"data\", \"keys\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"reverse_string_list\", \"arguments\": {\"string_list\": [\"apple\", \"banana\", \"cherry\", \"date\", \"elderberry\"]}, \"label\": \"$var1\"}, {\"name\": \"get_first_and_last_items\", \"arguments\": {\"input_list\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n['elderberry', 'date', 'banana', 'apple']\n\nNow solve:\nA rectangular grassy plot 110m by 65cm has a gravel path .5cm wide all round it on the inside. Find the cost of gravelling the path at 80 paise per sq.mt\n\nUse this API documentation for reference: [{\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 715,
    "text": "Example:\n\nInstruction:\nWalking with 4/5 of my usual speed, I miss the bus by 7 minutes. What is my usual time?\n\nUse this API documentation for reference: [{\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 5, \"arg_1\": 4}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 7, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 5}}]\n\nGold Answer:\n28.0\n\nNow solve:\nA batsman had a certain average of runs for 16 innings. In the 17th innings, he made a score of 87 runs thereby increasing his average by 3. What is his average after 17 innings?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 716,
    "text": "Example:\n\nInstruction:\nI have a number 100. I want to calculate its square root using the Newton method. Then, I want to check if the square root is in the range [9, 11].\n\nUse this API documentation for reference: [{\"description\": \"Calculates a new vector based on the given vector, direction, and distance.\", \"name\": \"move_vector_by_direction\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"direction\": {\"description\": \"A string representing the direction of movement (north, south, east, or west).\", \"type\": \"string\"}, \"distance\": {\"description\": \"A positive integer representing the distance to move in the given direction.\", \"type\": \"integer\"}, \"vector\": {\"description\": \"A tuple of two integers representing the x and y coordinates of the vector.\", \"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}}, \"required\": [\"vector\", \"direction\", \"distance\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Randomizes the order of the keys in a dictionary while keeping the values the same.\", \"name\": \"randomize_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new dictionary with the same keys and values as the input dictionary,\\n    but with the keys in a random order.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"d\": {\"description\": \"The dictionary to be randomized.\", \"type\": \"object\"}}, \"required\": [\"d\"], \"type\": \"object\"}}, {\"description\": \"Creates a new list where the first element is the second element of the input list,\\nthe second element is the first element of the input list, the third element is the\\nfourth element of the input list, and so on.\", \"name\": \"switch_elements\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list with the elements switched as described.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The input list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}, {\"description\": \"Generates a random string of lowercase alphanumeric characters and underscores.\", \"name\": \"generate_random_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A random string of lowercase alphanumeric characters and underscores.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"length\": {\"description\": \"The length of the random string to generate.\", \"type\": \"integer\"}}, \"required\": [\"length\"], \"type\": \"object\"}}, {\"description\": \"Computes the binary classification accuracy by comparing the predicted class labels to the true labels.\", \"name\": \"binary_classification_accuracy\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The binary classification accuracy.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"y_pred\": {\"description\": \"A tensor of size `(m, n)` with the model's predictions for `m` samples, each with `n` class probabilities.\", \"type\": \"object\"}, \"y_true\": {\"description\": \"A tensor of size `(m, n)` with the true class labels for each sample.\", \"type\": \"object\"}}, \"required\": [\"y_pred\", \"y_true\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the number of occurrences of a substring at each point in a list of points.\", \"name\": \"substring_count_at_points\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where each key is the string representation of a point and the corresponding value is the number of occurrences of the substring in the input string.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string.\", \"type\": \"string\"}, \"points\": {\"description\": \"A list of points, where each point is a tuple of two integers representing the coordinates of the point.\", \"items\": {\"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"input_string\", \"points\"], \"type\": \"object\"}}, {\"description\": \"Translates a numeric value into a corresponding text-based label.\", \"name\": \"label_value\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A text-based label corresponding to the input value.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"value\": {\"description\": \"The numeric value to be translated.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"value\"], \"type\": \"object\"}}, {\"description\": \"Replaces the values in a dictionary with their lengths.\\nIf the value is not a dictionary, its length is set to 1.\", \"name\": \"replace_with_lengths\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary with the same structure as the input dictionary, but with the values replaced by their lengths.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {\"additionalProperties\": {\"type\": \"string\"}, \"type\": \"object\"}, \"description\": \"The input dictionary.\", \"type\": \"object\"}}, \"required\": [\"dictionary\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Applies a hash function to an integer `i` and returns an integer that is less than `n`.\\n\\nThe hash function is a combination of bitwise operations, such as shifting and masking.\", \"name\": \"hash_integer\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"An integer that is less than `n`.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"i\": {\"description\": \"The integer to be hashed.\", \"type\": \"integer\"}, \"n\": {\"description\": \"The maximum value of the hashed integer.\", \"type\": \"integer\"}}, \"required\": [\"i\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Calculates the square root of a number using the Newton method.\", \"name\": \"my_sqrt\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The square root of the number as a floating-point number.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The number to calculate the square root of.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Checks if a value `x` is in the range [`low`, `high`]. If `low` is not specified, assign it the value of `None`,\\nand if `high` is not specified, assign it the value of `None`. If both `low` and `high` are `None`, return `True`.\", \"name\": \"check_in_range\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"high\": {\"description\": \"The upper bound of the range.\", \"nullable\": true, \"type\": \"number\"}, \"low\": {\"description\": \"The lower bound of the range.\", \"nullable\": true, \"type\": \"number\"}, \"x\": {\"description\": \"The value to check.\", \"type\": \"number\"}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"my_sqrt\", \"arguments\": {\"n\": 100}, \"label\": \"$var1\"}, {\"name\": \"check_in_range\", \"arguments\": {\"x\": \"$var1.output_0$\", \"low\": 9, \"high\": 11}, \"label\": \"$var2\"}]\n\nGold Answer:\nTrue\n\nNow solve:\nA bus 75 m long is running with a speed of 21 km/hr. In what time will it pass a woman who is walking at 3 km/hr in the direction opposite to that in which the bus is going?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 717,
    "text": "Example:\n\nInstruction:\nThe average salary of the employees in a office is Rs.120/month.The avg salary of officers is Rs.460 and of non officers is Rs 110. If the no.of officers is 15,then find the No of nonofficers in the office.\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 15, \"arg_1\": 460}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 15, \"arg_1\": 120}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 120, \"arg_1\": 110}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_4.result$\"}}]\n\nGold Answer:\n510.0\n\nNow solve:\nIf x is a number such that x^2 + 2x - 24 = 0 and x^2 - 5x + 4 = 0, then x =\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 718,
    "text": "Example:\n\nInstruction:\n10 camels cost as much as 24 horses, 16 horses cost as much as 4 oxen and 6 oxen as much as 4 elephants. If the cost of 10 elephants is Rs.170000, find the cost of a camel?\n\nUse this API documentation for reference: [{\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 24, \"arg_1\": 4}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 4}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 170000}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 10, \"arg_1\": 16}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 6}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 10}}, {\"name\": \"divide\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_6.result$\"}}]\n\nGold Answer:\n6800.0\n\nNow solve:\nCalculate the Nusselt criterion for a laminar flow with a Reynolds number of 1000, then format the result with a precision of 3, and finally find the unique elements in the intersection of the lists [1, 2, 3] and [2, 3, 4].\n\nUse this API documentation for reference: [{\"description\": \"Calculates the number of days between the earliest and latest dates in a list of dates.\", \"name\": \"num_days_between\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of days between the earliest and latest dates in the list.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"dates\": {\"description\": \"A list of dates in string format (YYYY-MM-DD).\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"dates\"], \"type\": \"object\"}}, {\"description\": \"Replaces the last three characters of a string with `***`.\", \"name\": \"last_three_characters_replaced_by_asterisk\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input string with the last three characters replaced with `***`.\\n    If the input string is shorter than three characters, the function\\n    returns the original string without modification.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Find the unique elements in the intersection of two lists.\", \"name\": \"unique_sorted_intersection_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A sorted list containing only the unique elements that are present in both lists.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"list1\": {\"description\": \"The first list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"list2\": {\"description\": \"The second list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"list1\", \"list2\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the complex exponential of each element in a complex tensor `z`.\\n\\nThe complex exponential is defined as `e^(z*1j)`. Here `1j` denotes the imaginary part of the complex number.\", \"name\": \"complex_exponential\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tensor of the same shape as `z` containing the complex exponential of each element in `z`.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"z\": {\"description\": \"A complex tensor.\", \"type\": \"object\"}}, \"required\": [\"z\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Calculates the Nusselt criterion for the given flow type and Reynolds number.\", \"name\": \"nusselt_criterion\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"flow_type\": {\"description\": \"Either \\\"laminar\\\" or \\\"turbulent\\\".\", \"type\": \"string\"}, \"reynolds_number\": {\"description\": \"The Reynolds number.\", \"type\": \"number\"}}, \"required\": [\"flow_type\", \"reynolds_number\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Formats a floating-point number `x` with a given precision `p`.\\nIf `x` is less than 0.001, it formats it using scientific notation.\", \"name\": \"format_number_with_precision\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"p\": {\"description\": \"The precision to use for formatting.\", \"type\": \"integer\"}, \"x\": {\"description\": \"The floating-point number to format.\", \"type\": \"number\"}}, \"required\": [\"x\", \"p\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Counts the number of consecutive 0s in the binary representation of an integer n.\", \"name\": \"count_consecutive_zeros\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of consecutive 0s in the binary representation of n.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The integer to count the consecutive 0s in its binary representation.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Processes a batch of multi-dimensional arrays into tensors.\", \"name\": \"process_batch\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"batch\": {\"description\": \"A list of multi-dimensional arrays.\", \"items\": {\"items\": {\"type\": [\"integer\", \"number\"]}, \"type\": \"array\"}, \"type\": \"array\"}, \"shape\": {\"description\": \"The shape of the tensor to be created.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"batch\", \"shape\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 719,
    "text": "Example:\n\nInstruction:\nIf there are only 2 wheelers and 4 wheelers parked in a school located at the heart of the city, find the number of 4 wheelers parked there if the total number of wheels is 82?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 82, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 4}}]\n\nGold Answer:\n20.0\n\nNow solve:\nA, B and C can do a piece of work in 7 days, 14 days and 28 days respectively. How long will they take to finish the work, if all the three work together?\n\nUse this API documentation for reference: [{\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 720,
    "text": "Example:\n\nInstruction:\nWeights of two friends Ram and Shyam are in the ratio 3:5. If Ram's weight is increased by 10% and total weight of Ram and Shyam become 82.8 kg, with an increases of 15%. By what percent did the weight of Shyam has to be increased?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 15, \"arg_1\": 10}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 5}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 15, \"arg_1\": \"$var_3.result$\"}}]\n\nGold Answer:\n18.0\n\nNow solve:\nn^(n/2)=2 is true when n=2 in the same way what is the value of n if n^(n/2) =4?\n\nUse this API documentation for reference: [{\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 721,
    "text": "Example:\n\nInstruction:\nA person buys an article at $380. At what price should he sell the article so as to make a profit of 25%?\n\nUse this API documentation for reference: [{\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 25, \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 380, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 380, \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n475.0\n\nNow solve:\n8 men can dig a pit in 20 days. If a man works half as much again a s a boy, then 4 men and 9 boys can dig a similar pit in:\n\nUse this API documentation for reference: [{\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 722,
    "text": "Example:\n\nInstruction:\nIn how many ways 4 boys and 4 girls can be seated in a row so that they are alternate.\n\nUse this API documentation for reference: [{\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"factorial\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 4}}, {\"name\": \"factorial\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 4}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n576.0\n\nNow solve:\nCalculate the error between a predicted value of 45 and the actual value of 50, then format the error as a percentage.\n\nUse this API documentation for reference: [{\"description\": \"Formats a floating point value as a percentage string, with a maximum of two decimal places, while handling edge cases such as zero values.\", \"name\": \"format_percentage\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The formatted percentage string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"value\": {\"description\": \"The floating point value to be formatted as a percentage.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"value\"], \"type\": \"object\"}}, {\"description\": \"Finds lines in a file that contain the word \\\"Python\\\" and returns them with the word in uppercase.\", \"name\": \"find_lines_with_python\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of lines containing the word \\\"PYTHON\\\".\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The name of the file to search.\", \"type\": \"string\"}}, \"required\": [\"filename\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of keys from the dictionary that have the given string as a prefix.\\nAdditionally, the function removes any keys from the dictionary that are not present in the output list.\", \"name\": \"prefix_match\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"The dictionary to search for keys with the given prefix.\", \"type\": \"object\"}, \"prefix\": {\"description\": \"The prefix to search for in the keys of the dictionary.\", \"type\": \"string\"}}, \"required\": [\"dictionary\", \"prefix\"], \"type\": \"object\"}}, {\"description\": \"Determines if the `description` attribute of a given `post` object contains the word \\\"link\\\" (case insensitive).\", \"name\": \"has_link_in_description\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the `description` attribute contains the word \\\"link\\\", False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"post\": {\"description\": \"The post object.\"}}, \"required\": [\"post\"], \"type\": \"object\"}}, {\"description\": \"Reads the bit value at the specified position in the binary representation of an integer.\", \"name\": \"read_bit\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The bit value at the specified position.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"i\": {\"description\": \"The integer to read the bit from.\", \"type\": \"integer\"}, \"position\": {\"description\": \"The position of the bit to read.\", \"type\": \"integer\"}}, \"required\": [\"i\", \"position\"], \"type\": \"object\"}}, {\"description\": \"Reads a CSV file containing product details and returns a list of Product objects.\", \"name\": \"read_products\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of Product objects.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The name of the CSV file containing product details.\", \"type\": \"string\"}}, \"required\": [\"filename\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Reverses the relationships in a dictionary.\", \"name\": \"reverse_relationships\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new dictionary with the relationships reversed.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"original_dict\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"The original dictionary.\", \"type\": \"object\"}}, \"required\": [\"original_dict\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Checks if a PyTorch model has been loaded to a GPU device. If not, loads the model to the GPU.\", \"name\": \"check_and_load_to_gpu\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"model\": {\"description\": \"The PyTorch model to be checked and loaded to the GPU.\", \"type\": \"object\"}}, \"required\": [\"model\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the error between a predicted value and the actual value.\", \"name\": \"calculate_error\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"y_pred\": {\"description\": \"The predicted value.\", \"type\": [\"integer\", \"number\"]}, \"y_true\": {\"description\": \"The actual value.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"y_true\", \"y_pred\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of scores associated with the given student id. If the student is not present\\nin the grades list, returns None. The grades list is a list of tuples in the format\\n(student_id, subject, score), where student_id is an integer, subject is a string, and\\nscore is a float.\", \"name\": \"get_scores\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"grades\": {\"description\": \"A list of tuples representing grades.\", \"items\": {\"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"string\"}, {\"type\": \"number\"}], \"type\": \"array\"}, \"type\": \"array\"}, \"student_id\": {\"description\": \"An integer representing a student's ID.\", \"type\": \"integer\"}}, \"required\": [\"grades\", \"student_id\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Constructs a SQL query for pagination with a specific page number and page size.\", \"name\": \"construct_pagination_query\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing the SQL query string and the parameters for the query.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"columns\": {\"description\": \"The columns to query.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"page_number\": {\"description\": \"The page number.\", \"type\": \"integer\"}, \"page_size\": {\"description\": \"The number of items per page.\", \"type\": \"integer\"}, \"table_name\": {\"description\": \"The name of the table to query.\", \"type\": \"string\"}}, \"required\": [\"table_name\", \"columns\", \"page_number\", \"page_size\"], \"type\": \"object\"}}, {\"description\": \"Calculates the bin centers for a histogram given a sorted list of numbers.\", \"name\": \"calculate_bin_centers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A sorted list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 723,
    "text": "Example:\n\nInstruction:\nA student was asked to find 4/5 of a number. But the student divided the number by 4/5, thus the student got 9 more than the correct answer. Find the number.\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 5}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 9, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 5}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 5}}, {\"name\": \"divide\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 5}}, {\"name\": \"multiply\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": \"$var_6.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_7.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_8.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 5}}, {\"name\": \"divide\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": \"$var_9.result$\", \"arg_1\": \"$var_10.result$\"}}]\n\nGold Answer:\n20.0\n\nNow solve:\nIn measuring the sides of a rectangle, one side is taken 4% in excess, and the other 3% in deficit. Find the error percent in the area calculated from these measurements.\n\nUse this API documentation for reference: [{\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 724,
    "text": "Example:\n\nInstruction:\nGiven a list of string values ['12', '15', '20', 'abc', '30', '45', 'xyz'], first clean the values to remove non-numeric values and then filter the remaining integers to only include those that are greater than 10 and divisible by 3.\n\nUse this API documentation for reference: [{\"description\": \"Collects values of properties from a list of objects into a dictionary.\\n\\nEach property is a key in the dictionary, and the corresponding value is a list of those property values for all the objects in the list.\", \"name\": \"collect_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where each key is a property and the corresponding value is a list of those property values for all the objects in the list.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"objects\": {\"description\": \"A list of objects, where each object is a dictionary with string keys and any values.\", \"items\": {\"additionalProperties\": {}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"objects\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Filters a list of integers to only include those that are greater than 10 and divisible by 3.\", \"name\": \"filter_integers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of integers that are greater than 10 and divisible by 3.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"values\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"values\"], \"type\": \"object\"}}, {\"description\": \"Filters an input list of numbers using a LISP-style list comprehension.\\nGiven a list of numbers, the function returns a list containing only the odd numbers.\\nUses a list comprehension to iterate over the input list and a condition to filter only the odd numbers.\", \"name\": \"filter_lisp_style\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of integers containing only the odd numbers from the input list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Transforms a list of logs into a dictionary where the keys are the keys in the dictionaries and the values are lists with the values in the corresponding dictionaries.\", \"name\": \"transform_logs\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the keys are the keys in the dictionaries and the values are lists with the values in the corresponding dictionaries.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"logs\": {\"description\": \"A list of dictionaries where each dictionary represents a log.\", \"items\": {\"additionalProperties\": {\"type\": \"integer\"}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"logs\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Expands the dimension of a batch of inputs and replaces negative values with 0.\\n\\nGiven a batch of inputs `x` with shape `(batch_size, input_dim)`, the function\\nreturns a batch of inputs with shape `(batch_size, 1)`.\\n\\nThe function also replaces any negative values in the inputs with 0.\", \"name\": \"expand_and_replace\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A batch of inputs with shape `(batch_size, 1)` and negative values replaced with 0.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The input batch of shape `(batch_size, input_dim)`.\", \"type\": \"object\"}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns the first non-repeated character in a string.\", \"name\": \"first_non_repeated_character\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The first non-repeated character in the string, or None if there is no non-repeated character.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Converts a list of string values to integers and removes any non-numeric values.\", \"name\": \"clean_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the remaining numeric values.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"values\": {\"description\": \"A list of string values.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"values\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"clean_values\", \"arguments\": {\"values\": [\"12\", \"15\", \"20\", \"abc\", \"30\", \"45\", \"xyz\"]}, \"label\": \"$var1\"}, {\"name\": \"filter_integers\", \"arguments\": {\"values\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n[12, 15, 30, 45]\n\nNow solve:\nIf the sales tax reduced from 3 1/2 % to 3 1/3%, then what difference does it make to a person who purchases an article with market price of $ 8400 ?\n\nUse this API documentation for reference: [{\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 725,
    "text": "Example:\n\nInstruction:\nIf 40% of a certain number is 160, then what is 90% of that number?\n\nUse this API documentation for reference: [{\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 40, \"arg_1\": 100}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 160, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 90, \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}]\n\nGold Answer:\n360.0\n\nNow solve:\n34.\tThe side surface of a cylinder is rolled with a rectangular plate. If the perimeter of the circular base Is 9 feet, and the diagonal of the rectangular plate was 15 ft. What is height of the of the cylinder?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 726,
    "text": "Example:\n\nInstruction:\n5 years ago , the average age of a , b , c and d was 45 years . with e joining them now , the average of all the 5 is 50 years . the age of e is ?\n\nUse this API documentation for reference: [{\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 50, \"arg_1\": 5}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 45, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 5, \"arg_1\": 4}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_5.result$\"}}]\n\nGold Answer:\n50.0\n\nNow solve:\nIn a 500 m race, the ratio of the speeds of two contestants A and B is 3 : 4. A has a start of 170 m. Then, A wins by:\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 727,
    "text": "Example:\n\nInstruction:\nGenerate all possible bit patterns of length 3. Then, concatenate the bit patterns one by one using a for loop.\n\nUse this API documentation for reference: [{\"description\": \"Computes and returns an MD5 hash of the current system time in milliseconds, represented as a hexadecimal string.\", \"name\": \"md5_hash_time\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A hexadecimal string representing the MD5 hash of the current system time in milliseconds.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Determines whether a given node is an ancestor of another node in a tree represented as a dictionary.\", \"name\": \"is_ancestor\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the first node is an ancestor of the second node, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"ancestor\": {\"description\": \"The name of the node to check if it is an ancestor.\", \"type\": \"string\"}, \"descendant\": {\"description\": \"The name of the node to check if it is a descendant.\", \"type\": \"string\"}, \"tree\": {\"additionalProperties\": {\"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"description\": \"A dictionary representing the tree.\", \"type\": \"object\"}}, \"required\": [\"tree\", \"ancestor\", \"descendant\"], \"type\": \"object\"}}, {\"description\": \"Sorts the keys of a dictionary in alphabetical order, where the keys are first filtered by their first letter being a lowercase letter.\", \"name\": \"sort_keys_alphabetically\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the sorted keys.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {\"type\": \"object\"}, \"description\": \"The dictionary to sort.\", \"type\": \"object\"}}, \"required\": [\"dictionary\"], \"type\": \"object\"}}, {\"description\": \"Generates all possible bit patterns of length `n`.\", \"name\": \"generate_bit_patterns\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of all possible bit patterns, where each pattern is represented as a string consisting of '0' and '1' characters.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The length of the bit patterns.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Converts a string with underscores into camel case.\", \"name\": \"camel_case\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The camel case version of the input string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Generates a random number `r` between `-delta` and `delta`, and then returns `x + r`.\", \"name\": \"fluctuate_position\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"delta\": {\"description\": \"The maximum allowable fluctuation.\", \"type\": \"number\"}, \"x\": {\"description\": \"The horizontal coordinate of a 2D point.\", \"type\": \"number\"}}, \"required\": [\"x\", \"delta\"], \"type\": \"object\"}}, {\"description\": \"Concatenates a string one character at a time using a for loop.\", \"name\": \"concatenate_one_by_one\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The concatenated string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string to be concatenated.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Converts an image file to a base64-encoded string.\", \"name\": \"image_to_base64\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The base64-encoded string of the image.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"path_or_bytes\": {\"description\": \"The file path or BytesIO object of the image.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"path_or_bytes\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"generate_bit_patterns\", \"arguments\": {\"n\": 3}, \"label\": \"$var1\"}, {\"name\": \"concatenate_one_by_one\", \"arguments\": {\"string\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n000001010011100101110111\n\nNow solve:\nA starts business with Rs. 3500 and after 5 months, B joins with A as his partner. After a year, the profit is divided in the ratio 2:3. What is B's contribution in the capital\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 728,
    "text": "Example:\n\nInstruction:\nWe bought 85 hats at the store. Blue hats cost $6 and green hats cost $7. The total price was $560. How many green hats did we buy?\n\nUse this API documentation for reference: [{\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 85, \"arg_1\": 6}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 560, \"arg_1\": \"$var_1.result$\"}}]\n\nGold Answer:\n50.0\n\nNow solve:\nIf 20 liters of chemical X are added to 80 liters of a mixture that is 25% chemical X and 75% chemical Y, then what percentage of the resulting mixture is chemical X?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 729,
    "text": "Example:\n\nInstruction:\nGiven a list of tokens ['Hello', 'world', 'this', 'is', 'a', 'test'], detokenize the list into a string. Then, extract the first name from the string.\n\nUse this API documentation for reference: [{\"description\": \"Converts a string representing a time span into a total number of seconds.\", \"name\": \"time_span_to_seconds\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The total number of seconds.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"time_span\": {\"description\": \"A string representing a time span in the format 'Xh Ym Zs', where X, Y, and Z are positive integers.\", \"type\": \"string\"}}, \"required\": [\"time_span\"], \"type\": \"object\"}}, {\"description\": \"Detokenizes a list of tokens into a string.\", \"name\": \"detokenize\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"token_list\": {\"description\": \"A list of tokens.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"token_list\"], \"type\": \"object\"}}, {\"description\": \"Returns the kth element of the given list or integer.\\nIf k is out of bounds, returns the last element.\", \"name\": \"kth_element\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"arr\": {\"description\": \"The list or integer to get the kth element from.\", \"type\": [\"integer\", \"object\"]}, \"k\": {\"description\": \"The index of the element to return.\", \"type\": \"integer\"}}, \"required\": [\"arr\", \"k\"], \"type\": \"object\"}}, {\"description\": \"Checks if all characters in a string are the same.\", \"name\": \"all_characters_same\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if all characters in the string are the same, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Selects the best `k` individuals based on their `fitness` attribute.\", \"name\": \"select_ibea\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"individuals\": {\"description\": \"A list of individuals.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}, \"k\": {\"description\": \"The number of individuals to select.\", \"type\": \"integer\"}}, \"required\": [\"individuals\", \"k\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Extracts the first name from a given string that contains the name in the format `first_name last_name`.\", \"name\": \"extract_first_name\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The first name as a string. If the string is empty or the format is not correct, returns an empty string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"name\": {\"description\": \"The input string containing the name.\", \"nullable\": true, \"type\": \"string\"}}, \"required\": [\"name\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the day count since 1970-01-01 for a given date in the format of `YYYY_MM_DD`.\", \"name\": \"day_count\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"date_str\": {\"description\": \"The date string in the format of `YYYY_MM_DD`.\", \"type\": \"string\"}}, \"required\": [\"date_str\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Checks if a file is a valid .xlsx or .csv file.\", \"name\": \"is_valid_xlsx_or_csv\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the file is a valid .xlsx or .csv file, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path of the file to check.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Groups all the 0's together and all the 1's together in a list.\", \"name\": \"group_zeros_and_ones\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of 0's and 1's with all the 0's grouped together and all the 1's grouped together.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"A list of 0's and 1's.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"input_list\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"detokenize\", \"arguments\": {\"token_list\": [\"Hello\", \"world\", \"this\", \"is\", \"a\", \"test\"]}, \"label\": \"$var1\"}, {\"name\": \"extract_first_name\", \"arguments\": {\"name\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\nHello world this is a\n\nNow solve:\nThe function f(P) represents the number of ways that prime numbers can be uniquely summed to form a certain number P such that P = a + b + c + d\u2026 where those summed variables are each prime and a \u2264 b \u2264 c \u2264 d ... For instance f(8) = 3 and the unique ways are 2 + 2 + 2 + 2 and 2 + 3 + 3 and 3 + 5. What is f(12)?\n\nUse this API documentation for reference: [{\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 730,
    "text": "Example:\n\nInstruction:\nGiven a percentage of 50, convert it to a decimal, then multiply the result by 2.\n\nUse this API documentation for reference: [{\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Converts a sudoku board from a string to a CSV string.\", \"name\": \"sudoku_to_csv\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string representing the sudoku board in CSV format.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input\": {\"description\": \"A string representing a sudoku board. Rows are separated by the newline character \\\" \\\", columns are separated by the space character \\\" \\\", and empty cells are represented by the character \\\"0\\\".\", \"type\": \"string\"}}, \"required\": [\"input\"], \"type\": \"object\"}}, {\"description\": \"Creates a new list `extracted` that contains all integers from `nums` that are present in `nums` more than once.\\nSorts `extracted` in ascending order.\", \"name\": \"extract_duplicates\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of integers that appear more than once in `nums`, sorted in ascending order.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}, {\"description\": \"Sorts the array `arr` in ascending order based on the difference between the `i`th bit of each element and the `i`th bit of the largest element in the array.\", \"name\": \"sort_by_bit_difference\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The sorted array.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"arr\": {\"description\": \"The input array of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"i\": {\"description\": \"The index of the bit to consider.\", \"type\": \"integer\"}}, \"required\": [\"arr\", \"i\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of tuples containing the first two highest scores along with their corresponding names.\", \"name\": \"get_top_two_scores_and_names\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"scores_and_names\": {\"description\": \"A list of tuples containing names and scores.\", \"items\": {\"prefixItems\": [{\"type\": \"string\"}, {\"type\": \"number\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"scores_and_names\"], \"type\": \"object\"}}, {\"description\": \"Extracts the value of the `Cookie` field from an HTTP header.\", \"name\": \"extract_cookie\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The value of the `Cookie` field if it exists, or None if it does not.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"header_text\": {\"description\": \"The HTTP header as a string.\", \"type\": \"string\"}}, \"required\": [\"header_text\"], \"type\": \"object\"}}, {\"description\": \"Converts a string or bytes object to a valid Python string.\", \"name\": \"make_python_str\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A valid Python string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string or bytes object.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Converts a percentage to a decimal.\", \"name\": \"percentage_to_decimal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A float representing the value in decimal form.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"percentage\": {\"description\": \"A float or integer representing a percentage.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"percentage\"], \"type\": \"object\"}}, {\"description\": \"Creates a new dictionary with the same keys as the input dictionary, but with only non-null values.\", \"name\": \"filter_out_missing_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new dictionary with the same keys as the input dictionary, but with only non-null values.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"dict_\": {\"additionalProperties\": {\"type\": \"object\"}, \"description\": \"The input dictionary.\", \"type\": \"object\"}}, \"required\": [\"dict_\"], \"type\": \"object\"}}, {\"description\": \"Flattens a list of iterables into a generator object.\", \"name\": \"flatten_iterables\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"iterables\": {\"description\": \"A list of iterables to be flattened.\", \"type\": \"object\"}}, \"required\": [\"iterables\"], \"type\": \"object\"}}, {\"description\": \"Sorts the unique integers in an array in descending order of their occurrence frequency.\", \"name\": \"sort_unique_by_frequency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples, where each tuple contains an integer and its frequency.\\n    The integers are sorted in descending order of their frequency, with the integers\\n    that appear more often listed first.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"array\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"array\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Multiplies the input by 2.\", \"name\": \"multiply_by_2\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The input value.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"x\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"percentage_to_decimal\", \"arguments\": {\"percentage\": 50}, \"label\": \"$var1\"}, {\"name\": \"multiply_by_2\", \"arguments\": {\"x\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n1.0\n\nNow solve:\nwhat is the Max number of rectangular boxes, each measuring 5 inches by 2 inches by 7 inches, that can be packed into a rectangular packing box measuring 15 inches by 20 inches by 35 inches, if all boxes are aligned in the same direction?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 731,
    "text": "Example:\n\nInstruction:\nI want to generate a random character and then convert it to a string, replacing any non-numeric characters with '0'.\n\nUse this API documentation for reference: [{\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Initializes the model's learning rate, weight decay, and momentum with the values in `hyperparams`.\\nIf a key is missing, the function uses default values 0.01, 0.01, and 0.9, respectively.\", \"name\": \"initialize_hyperparameters\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"hyperparams\": {\"additionalProperties\": {\"type\": \"number\"}, \"description\": \"A dictionary containing the hyperparameters.\", \"type\": \"object\"}}, \"required\": [\"hyperparams\"], \"type\": \"object\"}}, {\"description\": \"Generates a multiline string of length `n` consisting of multiple lines, where each line contains a single character repeated `n` times.\", \"name\": \"create_output\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The generated multiline string.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The length of the string and the number of times the character is repeated in each line.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Returns a sorted list containing all unique counter values from the sparse matrix.\\nA counter value is the value of a cell in the matrix.\", \"name\": \"get_sparse_matrix_unique_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"sparse_matrix\": {\"description\": \"A two-dimensional list of lists containing non-negative integers.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"sparse_matrix\"], \"type\": \"object\"}}, {\"description\": \"Generates a configuration file from a given filename and a dictionary of properties.\\n\\nThe function writes the properties to the file in a human-readable format,\\nwith one property per line, and the property name and value separated by an equal sign.\", \"name\": \"generate_configuration_file\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The name of the configuration file.\", \"type\": \"string\"}, \"properties\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary of key-value pairs representing the properties.\", \"type\": \"object\"}}, \"required\": [\"filename\", \"properties\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Validate the exon definitions of a gene.\", \"name\": \"validate_exons\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the exon definitions are valid, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"exons\": {\"description\": \"A list of tuples representing the exon definitions. Each tuple contains the start and end positions of an exon.\", \"items\": {\"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"exons\"], \"type\": \"object\"}}, {\"description\": \"Appends a string to the end of the original string.\", \"name\": \"append_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The original string with the appended string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"append_str\": {\"description\": \"The string to be appended.\", \"type\": \"string\"}, \"default_string\": {\"description\": \"The default string to return if the original string is not a string.\", \"type\": \"string\"}, \"string\": {\"description\": \"The original string.\", \"nullable\": true, \"type\": \"string\"}}, \"required\": [\"string\", \"append_str\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Extracts keys from a dictionary that have a value greater than 100.\", \"name\": \"extract_over_100\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of keys that have a value greater than 100.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"dict\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"The dictionary to extract keys from.\", \"type\": \"object\"}}, \"required\": [\"dict\"], \"type\": \"object\"}}, {\"description\": \"Sorts the keys of a dictionary in alphabetical order, where the keys are first filtered by their first letter being a lowercase letter.\", \"name\": \"sort_keys_alphabetically\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the sorted keys.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {\"type\": \"object\"}, \"description\": \"The dictionary to sort.\", \"type\": \"object\"}}, \"required\": [\"dictionary\"], \"type\": \"object\"}}, {\"description\": \"Validates a student ID.\", \"name\": \"validate_id\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the input string is a valid student ID, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string to validate.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Converts `a` to a string, replacing any non-numeric characters with `b`.\", \"name\": \"convert_lossy\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The input string to be converted.\", \"type\": \"string\"}, \"b\": {\"description\": \"The character to replace non-numeric characters in `a`.\", \"type\": \"string\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Generates a random character from a list of lowercase letters and numbers.\", \"name\": \"generate_char\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A random character from the list of lowercase letters and numbers.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Calculates the number of seconds from a timedelta object.\", \"name\": \"timedelta_to_seconds\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of seconds as a float.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"td\": {\"description\": \"The timedelta object to convert to seconds.\", \"nullable\": true, \"type\": \"object\"}}, \"required\": [\"td\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Returns the longest possible sublist of unique elements from the input list.\", \"name\": \"get_longest_unique_sublist\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The longest possible sublist of unique elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"list_of_elements\": {\"description\": \"A list of elements.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"list_of_elements\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"generate_char\", \"arguments\": {}, \"label\": \"$var1\"}, {\"name\": \"convert_lossy\", \"arguments\": {\"a\": \"$var1.output_0$\", \"b\": \"0\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n0\n\nNow solve:\nPraveen starts business with Rs.3640 and after 5 months, Hari joins with Praveen as his partner. After a year, the profit is divided in the ratio 2 : 3. What is Hari\u2019s contribution in the capital?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 732,
    "text": "Example:\n\nInstruction:\nI have a file path '/api/data/file.json'. I want to extract the substrings that appear after the last occurrence of the word 'api' in the file path. Then, I want to pad the length of each substring to 4 digits with leading zeroes.\n\nUse this API documentation for reference: [{\"description\": \"Pads a number with leading zeroes so that it has at least 4 digits in length.\", \"name\": \"pad_to_len\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The padded number as a string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"num\": {\"description\": \"The number to pad.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"num\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Finds all strings in a list that contain the substring \\\"cat\\\" or \\\"dog\\\".\", \"name\": \"find_cat_dog\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list containing all strings that contain either \\\"cat\\\" or \\\"dog\\\" in the `strings` list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"strings\": {\"description\": \"A list of strings to search.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"strings\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Finds the intersection of two lists using dynamic programming to store results and avoid repeated computation.\", \"name\": \"find_intersection\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The intersection of the two lists as a new list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"A\": {\"description\": \"The first list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"B\": {\"description\": \"The second list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"A\", \"B\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of all the file substrings that appear in the file path after the last occurrence of the word 'api'.\", \"name\": \"get_substrings_after_api\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of file substrings that appear after the last occurrence of the word 'api' in the file path.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The file path to extract the substrings from.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Checks if two strings share a common word, ignoring punctuation, case, and Unicode characters.\", \"name\": \"has_common_words\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the strings share a common word, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first string.\", \"type\": \"string\"}, \"b\": {\"description\": \"The second string.\", \"type\": \"string\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Converts a string to a float.\\n\\nIf the string is empty, the function returns None. Otherwise, it tries to convert the string to a float and returns the result. If the conversion fails, the function returns a negative number.\", \"name\": \"convert_string_to_float\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The converted float value if the conversion is successful, None if the string is empty, or a negative number if the conversion fails.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string to be converted to a float.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Adds a feature to a dictionary from a file if the key matches.\", \"name\": \"add_feature\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {\"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"description\": \"The dictionary to add the feature to.\", \"type\": \"object\"}, \"filename\": {\"description\": \"The name of the file to load the feature from.\", \"type\": \"string\"}}, \"required\": [\"dictionary\", \"filename\"], \"type\": \"object\"}}, {\"description\": \"Loads a file containing JSON lines into a dictionary, where each line represents an object in JSON format.\\nThe function returns a list of objects. Each object has two keys: \\\"id\\\" and \\\"data\\\", where \\\"id\\\" is a string and \\\"data\\\" is a dictionary of string keys and string values.\", \"name\": \"load_json_lines\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The name of the file to load.\", \"type\": \"string\"}}, \"required\": [\"filename\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"get_substrings_after_api\", \"arguments\": {\"file_path\": \"/api/data/file.json\"}, \"label\": \"$var1\"}, {\"name\": \"pad_to_len\", \"arguments\": {\"num\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n['data', 'file.json']\n\nNow solve:\nWe had $1400 left after spending 30% of the money that we took for shopping. How much money did we start with?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 733,
    "text": "Example:\n\nInstruction:\nOne fourth of a solution that was 10% sugar by weight was replaced with by a second solution resulting in a solution that was 16 percent sugar by weight. The second solution was what percent sugar by weight?\n\nUse this API documentation for reference: [{\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 16, \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 100, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 4}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 100}}, {\"name\": \"subtract\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 100, \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 10, \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": \"$var_6.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_7.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 4}}, {\"name\": \"multiply\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_9.result$\", \"arg_1\": 100}}, {\"name\": \"divide\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": \"$var_8.result$\", \"arg_1\": \"$var_10.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_12\", \"arguments\": {\"arg_0\": \"$var_11.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n34.0\n\nNow solve:\nramu rides his bike at an average speed of 45 km / hr and reaches his desitination in 4 hours . somu covers the same distance in 6 hours . if ramu covered his journey at an average speed which was 9 km / hr less and somu covered his journey at an average speed which was 10 km / hr more , then the difference in their times taken to reach the destination would be ( in minutes ) .\n\nUse this API documentation for reference: [{\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 734,
    "text": "Example:\n\nInstruction:\nReeya obtained 40, 60, 70, 80 and 80 out of 100 in different subjects, What will be the average\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 40, \"arg_1\": 60}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 70}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 80}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 80}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_5.result$\"}}]\n\nGold Answer:\n66.0\n\nNow solve:\nI want to find the index of the second occurrence of the character 'a' in the string 'banana'. Then, I want to calculate the sum of the arithmetic sequence of N integers, where N is the index of the second occurrence of 'a' in 'banana'.\n\nUse this API documentation for reference: [{\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Traverses the Document Object Model (DOM) of an XML document and extracts all tags with the name \\\"article\\\".\", \"name\": \"extract_articles\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of XML tags.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"xml_string\": {\"description\": \"The XML document as a string.\", \"type\": \"string\"}}, \"required\": [\"xml_string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of the text inside each paragraph tag.\", \"name\": \"get_paragraph_text\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the text inside each paragraph tag.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"tags\": {\"description\": \"A list of html tags.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"tags\"], \"type\": \"object\"}}, {\"description\": \"Creates a new Tensor that has the values of 1 where either `x` or `y` is 1, and 0 elsewhere.\", \"name\": \"tensor_logic\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new Tensor with values of 1 where either `x` or `y` is 1, and 0 elsewhere.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"A Torch Tensor.\", \"type\": \"object\"}, \"y\": {\"description\": \"A Torch Tensor of the same size as `x`.\", \"type\": \"object\"}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Checks whether a given list is a superset of another list.\", \"name\": \"is_superset\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the first list is a superset of the second list, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"list1\": {\"description\": \"The first list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"list2\": {\"description\": \"The second list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"list1\", \"list2\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of the arithmetic sequence of N integers (starting from 1) and returns it as an array.\", \"name\": \"get_sequence_sum\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of integers representing the sum of the arithmetic sequence for each integer from 1 to N.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The number of integers in the sequence.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Returns the result of x minus y if the result is positive, otherwise it returns the result of x multiplied by y.\", \"name\": \"subtract_or_multiply\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The first integer.\", \"type\": \"integer\"}, \"y\": {\"description\": \"The second integer.\", \"type\": \"integer\"}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Returns the index of the second occurrence of a character in a string.\\nIf there is no second occurrence, returns -1.\\nIf the character occurs only once, returns -1.\", \"name\": \"second_occurrence_index\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The index of the second occurrence of the character in the string, or -1 if there is no second occurrence.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"c\": {\"description\": \"The character to find.\", \"type\": \"string\"}, \"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\", \"c\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 735,
    "text": "Example:\n\nInstruction:\nCalculate the resolution of an image with a width of 100, a height of 200, and 20000 pixels, then replace any occurrence of the substring \"apple\" with \"orange\" in the resulting resolution string.\n\nUse this API documentation for reference: [{\"description\": \"Calculates the resolution of an image given its dimensions and number of pixels.\", \"name\": \"calculate_resolution\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The resolution of the image as a string in the format of \\\"{X}x{Y}\\\", where {X} is the width and {Y} is the height.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"height\": {\"description\": \"The height of the image.\", \"type\": \"integer\"}, \"pixels\": {\"description\": \"The total number of pixels in the image.\", \"type\": \"integer\"}, \"width\": {\"description\": \"The width of the image.\", \"type\": \"integer\"}}, \"required\": [\"width\", \"height\", \"pixels\"], \"type\": \"object\"}}, {\"description\": \"Checks if a given data type is a user-defined class and returns the class name as a string.\", \"name\": \"is_user_defined_class\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The class name as a string if the data is a user-defined class, otherwise False.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"The data to check.\"}}, \"required\": [\"data\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Merges two sorted lists into one.\", \"name\": \"merge_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list that is the result of merging the two input lists.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"alist\": {\"description\": \"The first sorted list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"blist\": {\"description\": \"The second sorted list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"alist\", \"blist\"], \"type\": \"object\"}}, {\"description\": \"Constructs an XPath expression to match an element with a specific tag name and attributes.\", \"name\": \"get_xpath_expr\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"attrs\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"The attributes of the element.\", \"type\": \"object\"}, \"tag_name\": {\"description\": \"The tag name of the element.\", \"type\": \"string\"}}, \"required\": [\"tag_name\", \"attrs\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Replaces any occurrence of the substring \\\"apple\\\" with \\\"orange\\\" using a regular expression.\\nIf the substring \\\"apple\\\" occurs at the end of the string, it is also replaced with \\\"orange\\\".\", \"name\": \"replace_apple_with_orange\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The modified string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Sorts two variables in descending order using conditional swapping and ternary operators.\", \"name\": \"sort_descending\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple of the variables in descending order.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The first variable.\", \"type\": \"number\"}, \"y\": {\"description\": \"The second variable.\", \"type\": \"number\"}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Groups and aggregates data from a Pandas dataframe.\", \"name\": \"group_and_aggregate_data\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the keys are the unique values of the grouping column and the values are the sum of the values in the 'median_income' column for the corresponding group.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"df\": {\"description\": \"The input dataframe.\", \"type\": \"object\"}, \"grouping_column\": {\"description\": \"The name of the column used for grouping.\", \"type\": \"string\"}}, \"required\": [\"df\", \"grouping_column\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Generates a unique document ID based on a given string.\\n\\nThe function hashes the string and returns a 6-character alphanumeric document ID.\\nThe function does not allow duplicate IDs for different strings.\", \"name\": \"generate_document_id\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A 6-character alphanumeric document ID.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string to generate the document ID from.\", \"type\": \"object\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Filters the words in the input dictionary whose frequency of occurrence is greater than or equal to 100.\", \"name\": \"filter_words\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary with the filtered words from the input dictionary whose frequency of occurrence is greater than or equal to 100.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {\"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"description\": \"A dictionary with key-value pairs where the keys are unicode strings and the values are lists of unicode strings.\", \"type\": \"object\"}, \"freq_array\": {\"description\": \"A 2D array that represents the frequency of occurrence of each word in the dictionary.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"dictionary\", \"freq_array\"], \"type\": \"object\"}}, {\"description\": \"Concatenates a list of HTML strings into a single string with no HTML tags.\", \"name\": \"concatenate_html_strings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A single string that is a concatenation of the input strings and has no HTML tags embedded within it.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"html_strings\": {\"description\": \"A list of HTML strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"html_strings\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the exponentiation of a given integer without the use of built-in exponentiation operators or functions.\", \"name\": \"exponentiation\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"base_num\": {\"description\": \"The base number.\", \"type\": [\"integer\", \"number\"]}, \"exp_power\": {\"description\": \"The exponent power.\", \"type\": \"integer\"}}, \"required\": [\"base_num\", \"exp_power\"], \"type\": \"object\"}}, {\"description\": \"Converts a hexadecimal color code to a list of RGB values.\", \"name\": \"hex_code_to_rgb\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of integers representing the RGB values.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"hex_code\": {\"description\": \"A string representing a hexadecimal color code.\", \"type\": \"string\"}}, \"required\": [\"hex_code\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"calculate_resolution\", \"arguments\": {\"width\": 100, \"height\": 200, \"pixels\": 20000}, \"label\": \"$var1\"}, {\"name\": \"replace_apple_with_orange\", \"arguments\": {\"text\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n1x1\n\nNow solve:\nIf a - b = 3 and a(power 2) + b(power 2) = 23, find the value of ab.\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 736,
    "text": "Example:\n\nInstruction:\nI want to perform integer division between 10 and 3, then add one to the result if it is an integer.\n\nUse this API documentation for reference: [{\"description\": \"Adds one to the input `x` if `x` is an integer and returns the result.\\nOtherwise, if `x` is not an integer, the function prints an error message\\nand returns `None`.\", \"name\": \"add_one_if_int\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input value plus one if `x` is an integer, otherwise `None`.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The input value.\", \"type\": [\"integer\", \"string\"]}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Concatenates a string with the \\\"name\\\" attribute of an object, if it exists.\\nIf the \\\"name\\\" attribute does not exist, the original string is returned.\", \"name\": \"concatenate_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The object to access the \\\"name\\\" attribute from.\"}, \"string\": {\"description\": \"The string to be concatenated.\", \"type\": \"string\"}}, \"required\": [\"string\", \"obj\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Parses an HTML form in string format and extracts all the key-value pairs from it.\\n\\nThe function returns a dictionary mapping the form field names to their values.\\nIt only supports text form fields and does not use any external libraries for parsing the HTML.\", \"name\": \"parse_form\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary mapping the form field names to their values.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"form_str\": {\"description\": \"The HTML form in string format.\", \"type\": \"string\"}}, \"required\": [\"form_str\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Counts the number of occurrences of each word in a CSV file.\", \"name\": \"count_words_in_csv\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary with the words as keys and the number of occurrences as values.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The name of the CSV file.\", \"type\": \"string\"}}, \"required\": [\"filename\"], \"type\": \"object\"}}, {\"description\": \"Inverts a binary tree by swapping each node's left and right child nodes.\", \"name\": \"invert_binary_tree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The root node of the inverted binary tree.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"root\": {\"description\": \"The root node of the binary tree.\", \"nullable\": true, \"type\": \"object\"}}, \"required\": [\"root\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Converts an IP address string into an integer using bitwise operations and integer representation.\", \"name\": \"convert_ip_to_int\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"ip_address\": {\"description\": \"A string representing a valid IP address.\", \"type\": \"string\"}}, \"required\": [\"ip_address\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Performs integer division between two integers a and b.\\nIf b is zero, the function returns an error message.\\nOtherwise, the function returns the quotient of a divided by b,\\nrounded down to the nearest integer. If the quotient is 0,\\nthe function returns the string \\\"Zero\\\".\", \"name\": \"int_div\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"string\"]}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The dividend.\", \"type\": \"integer\"}, \"b\": {\"description\": \"The divisor.\", \"type\": \"integer\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"int_div\", \"arguments\": {\"a\": 10, \"b\": 3}, \"label\": \"$var1\"}, {\"name\": \"add_one_if_int\", \"arguments\": {\"x\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n4\n\nNow solve:\nA certain sum of money is divided among A, B and C so that for each Rs. A has, B has 65 paisa and C 40 paisa. If C's share is Rs.40, find the sum of money?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 737,
    "text": "Example:\n\nInstruction:\nmonica planned her birthday party . she prepared 5 muffins for each of her guests and kept aside two additional muffins in case someone will want extra . after the party , it turned out that one of the guests did n ' t come but every one of the guests that did come ate 6 muffins and 6 muffins remained . how many guests did monica plan on ?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 6, \"arg_1\": 6}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 5}}]\n\nGold Answer:\n2.0\n\nNow solve:\nFor a group of n people, k of whom are of the same sex, the (n-k)/n expression yields an index for a certain phenomenon in group dynamics for members of that sex. For a group that consists of 20 people, 8 of whom are females, by how much does the index for the females exceed the index for the males in the group?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 738,
    "text": "Example:\n\nInstruction:\nOn dividing 123 by a number, the quotient is 7 and the remainder is 4. Find the divisor.\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 123, \"arg_1\": 7}}, {\"name\": \"floor\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\"}}]\n\nGold Answer:\n17.0\n\nNow solve:\nCalculate the sum of the squares of the naturally ordered odd numbers from 1 to 10, then convert the result to a binary list.\n\nUse this API documentation for reference: [{\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of the squares of naturally ordered odd numbers from 1 to n (inclusive).\", \"name\": \"sum_of_squares_of_odd_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The sum of the squares of the naturally ordered odd numbers from 1 to n (inclusive).\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"A positive integer.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Normalizes a string by converting all upper-case characters to lower-case and all lower-case characters to upper-case.\", \"name\": \"normalize_case\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The normalized string.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string to be normalized.\", \"type\": \"object\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Converts a positive integer to a list of 0's and 1's representing its binary value.\", \"name\": \"int_to_binary_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"num\": {\"description\": \"The positive integer to be converted.\", \"type\": \"integer\"}}, \"required\": [\"num\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Extracts the function number defined in the text using regular expressions.\\n\\nThe function number is defined as a number that appears within parentheses after the word \\\"function\\\" in the text.\\nThe function returns the extracted number as a string, or None if no function number is found.\", \"name\": \"extract_function_number\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The extracted function number as a string, or None if no function number is found.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input text to search for the function number.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Converts an exception tuple to a dictionary.\", \"name\": \"convert_exception_to_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary with the exception name as the key and the message as the value.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"exception_tuple\": {\"description\": \"A tuple containing an exception type and a message.\", \"prefixItems\": [{\"type\": \"object\"}, {\"type\": \"string\"}], \"type\": \"array\"}}, \"required\": [\"exception_tuple\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Pads a number with leading zeros to make it have a minimum length of `pad_len`.\", \"name\": \"pad_num\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"num\": {\"description\": \"The number to pad.\", \"type\": [\"integer\", \"number\"]}, \"pad_len\": {\"description\": \"The minimum length of the padded number.\", \"type\": \"integer\"}}, \"required\": [\"num\", \"pad_len\"], \"type\": \"object\"}}, {\"description\": \"Converts a value to an integer or returns a default value if the value cannot be converted.\", \"name\": \"convert_to_int_or_default\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"default_value\": {\"description\": \"The default value to be returned if the conversion fails.\", \"type\": [\"integer\", \"number\"]}, \"value\": {\"description\": \"The value to be converted to an integer.\", \"type\": [\"integer\", \"number\", \"string\"]}}, \"required\": [\"value\"], \"type\": \"object\"}}, {\"description\": \"Copies values from the first JSON object to the second one.\", \"name\": \"copy_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"obj1\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"The first JSON object.\", \"type\": \"object\"}, \"obj2\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"The second JSON object.\", \"type\": \"object\"}}, \"required\": [\"obj1\", \"obj2\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Returns a new list containing only the values that are present in `include_list` and not present in `exclude_list`.\", \"name\": \"exclude_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"exclude_list\": {\"description\": \"The list of values to exclude.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"include_list\": {\"description\": \"The list of values to include.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"include_list\", \"exclude_list\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 739,
    "text": "Example:\n\nInstruction:\nGiven a sorted list [1, 2, 3, 4, 5], use binary search to find the index of the number 3. Then, mutate the point (1, 1) by adding the index to both x and y.\n\nUse this API documentation for reference: [{\"description\": \"Randomly samples a specified number of items from a list, with or without replacement.\", \"name\": \"sample_items\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of sampled items.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"items\": {\"description\": \"The list of items to sample from.\", \"type\": \"array\"}, \"num_items\": {\"description\": \"The number of items to sample.\", \"type\": \"integer\"}, \"replacement\": {\"description\": \"Whether to perform sampling with replacement. Defaults to False.\", \"type\": \"boolean\"}}, \"required\": [\"items\", \"num_items\"], \"type\": \"object\"}}, {\"description\": \"Determines whether a given command is a request or a response.\", \"name\": \"check_command_type\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"command\": {\"description\": \"The command to check.\", \"type\": [\"integer\", \"string\"]}}, \"required\": [\"command\"], \"type\": \"object\"}}, {\"description\": \"Calculates the 95th percentile value of a list of numbers.\", \"name\": \"calculate_95th_percentile\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The 95th percentile value of the list.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Recursively performs binary search on a sorted array for a given target.\", \"name\": \"recursive_binary_search\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The index of the target in the list if found, otherwise -1.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A sorted list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"target\": {\"description\": \"The target integer to search for.\", \"type\": \"integer\"}}, \"required\": [\"nums\", \"target\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Checks if the given array has any NaN values.\", \"name\": \"check_nan\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the array has any NaN values, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"arr\": {\"description\": \"The input array to check for NaN values.\", \"type\": \"object\"}}, \"required\": [\"arr\"], \"type\": \"object\"}}, {\"description\": \"Converts a string to uppercase format used in HTTP headers, with words separated by hyphens (-) and without any spaces.\", \"name\": \"convert_to_http_header_name\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The converted string or None if the input is not a string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Converts a string to a list of bytes in the format '0x11, 0x22, 0x33, ...'.\", \"name\": \"convert_string_to_list_of_bytes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of bytes in the format '0x11, 0x22, 0x33, ...'.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Mutates the given point (x, y) by adding x to dx, and y to dy.\\nReturns the result as a tuple (x', y').\\nApplies the mutation only if the sum of x and dx and the sum of y and dy are both positive numbers.\", \"name\": \"mutate_point\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"dx\": {\"description\": \"The amount to add to x.\", \"type\": \"number\"}, \"dy\": {\"description\": \"The amount to add to y.\", \"type\": \"number\"}, \"x\": {\"description\": \"The x-coordinate of the point.\", \"type\": \"number\"}, \"y\": {\"description\": \"The y-coordinate of the point.\", \"type\": \"number\"}}, \"required\": [\"x\", \"y\", \"dx\", \"dy\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"recursive_binary_search\", \"arguments\": {\"nums\": [1, 2, 3, 4, 5], \"target\": 3}, \"label\": \"$var1\"}, {\"name\": \"mutate_point\", \"arguments\": {\"x\": 1, \"y\": 1, \"dx\": \"$var1.output_0$\", \"dy\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n[3, 3]\n\nNow solve:\nThe membership of a committee consists of 3 English teachers, 4 Mathematics teachers, and 2 Social Studies teachers. If 2 committee members are to be selected at random to write the committee\u2019s report, what is the probability that the two members selected will both be social teachers?\n\nUse this API documentation for reference: [{\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 740,
    "text": "Example:\n\nInstruction:\nCalculate the average speed of a car that traveled 100 km in 2 hours, and then look up the value in a symmetric table with the average speed as the key. The symmetric table is [[10, 20], [30, 40], [50, 60]].\n\nUse this API documentation for reference: [{\"description\": \"Computes the number of bins that contain at least one non-zero count in a range.\", \"name\": \"count_bins\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"counts\": {\"description\": \"The number of times that each value has been seen.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"high\": {\"description\": \"The upper bound of the range.\", \"type\": \"number\"}, \"low\": {\"description\": \"The lower bound of the range.\", \"type\": \"number\"}, \"values\": {\"description\": \"The values of the bins.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"values\", \"counts\", \"low\", \"high\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of all integers in a list.\", \"name\": \"find_sum_of_integers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"input_list\"], \"type\": \"object\"}}, {\"description\": \"Groups a list of tuples containing a name and an age by age and sorts them by name.\", \"name\": \"group_tuples_by_age\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the keys are the ages and the values are lists of names sorted by name.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"tuples\": {\"description\": \"A list of tuples containing a name and an age.\", \"items\": {\"prefixItems\": [{\"type\": \"string\"}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"tuples\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Looks up a value in a symmetric table given a key.\", \"name\": \"lookup_symmetric_table\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"string\"]}}}, \"parameters\": {\"properties\": {\"fallback_value\": {\"description\": \"The value to return if the key is not found in the table.\", \"nullable\": true, \"type\": [\"integer\", \"string\"]}, \"key\": {\"description\": \"The key to look up in the table.\", \"type\": [\"integer\", \"string\"]}, \"table\": {\"description\": \"A 2-D list representing a symmetric table.\", \"items\": {\"items\": {\"type\": [\"integer\", \"string\"]}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"table\", \"key\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Parses a string of comma-separated numbers and returns a list of tuples with the numbers and their lengths.\", \"name\": \"parse_string_to_tuples\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples where the first element in each tuple is the number and the second element is the length of the number.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"A string of comma-separated numbers.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Encodes a list of tags into a URL-friendly string separated by dashes (-).\", \"name\": \"encode_tags\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"tags\": {\"description\": \"A list of tags, each with a `.name` attribute.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"tags\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Retrieves weather data from a given URL.\", \"name\": \"get_weather_data\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary containing the temperature, humidity, wind_speed, and rainfall data.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"url\": {\"description\": \"The URL to retrieve the data from.\", \"type\": \"string\"}}, \"required\": [\"url\"], \"type\": \"object\"}}, {\"description\": \"Moves a value to the front of a list.\", \"name\": \"move_to_front\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The input list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"value\": {\"description\": \"The value to move to the front of the list.\", \"type\": \"integer\"}}, \"required\": [\"lst\", \"value\"], \"type\": \"object\"}}, {\"description\": \"Builds an HTML string containing the numbers from 1 to `n` enclosed in a `<span>` element.\", \"name\": \"build_span_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"An HTML string containing the numbers from 1 to `n` enclosed in a `<span>` element.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The number of `<span>` elements to generate.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Calculates the average speed of a car based on the provided distance (km) and time (hrs).\", \"name\": \"calculate_average_speed\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"distance\": {\"description\": \"The distance traveled by the car in kilometers.\", \"type\": \"number\"}, \"time\": {\"description\": \"The time taken to travel the distance in hours.\", \"type\": \"number\"}}, \"required\": [\"distance\", \"time\"], \"type\": \"object\"}}, {\"description\": \"Extracts the value of the \\\"device_id\\\" key from the payload dictionary.\", \"name\": \"extract_device_id\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The value of the \\\"device_id\\\" key from the payload dictionary, or the default value if the key is not present.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"default_value\": {\"description\": \"The default value to return if the \\\"device_id\\\" key is not present in the payload dictionary.\", \"type\": \"string\"}, \"payload\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"The payload dictionary.\", \"type\": \"object\"}}, \"required\": [\"payload\", \"default_value\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"calculate_average_speed\", \"arguments\": {\"distance\": 100, \"time\": 2}, \"label\": \"$var1\"}, {\"name\": \"lookup_symmetric_table\", \"arguments\": {\"table\": [[10, 20], [30, 40], [50, 60]], \"key\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n60\n\nNow solve:\nThe S.I. on a certain sum of money for 5 years at 6% per annum is half the C.I. on Rs. 3000 for 2 years at 15% per annum. The sum placed on S.I. is?\n\nUse this API documentation for reference: [{\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 741,
    "text": "Example:\n\nInstruction:\nOf the goose eggs laid at a certain pond, 2/3 hatched and 3/4 of the geese that hatched from those eggs survived the first month. Of the geese that survived the first month, 3/5 did not survive the first year. If 125 geese survived the first year and if no more than one goose hatched from each egg, how many goose eggs were laid at the pond?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 5}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 125, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 4}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 3}}, {\"name\": \"divide\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": \"$var_6.result$\"}}]\n\nGold Answer:\n625.0\n\nNow solve:\nA dishonest dealer professes to sell goods at the cost price but uses a weight of 720 grams per kg, what is his percent?\n\nUse this API documentation for reference: [{\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 742,
    "text": "Example:\n\nInstruction:\nSolution X is 10 percent alcohol by volume, and solution Y is 30 percent alcohol by volume. How many milliliters of solution Y must be added to 150 milliliters of solution X to create a solution that is 25 percent alcohol by volume?\n\nUse this API documentation for reference: [{\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 25, \"arg_1\": 10}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 30, \"arg_1\": 25}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 150}}]\n\nGold Answer:\n450.0\n\nNow solve:\nOil cans x and y are right circular cylinders and the height and radius of y are each 5 times those of x. If the oil in can x filled to capacity sells for $1, how much does the oil in y sell for if y is only 1/5th filled?\n\nUse this API documentation for reference: [{\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 743,
    "text": "Example:\n\nInstruction:\nA broker invested her own money in the stock market. During the first year, she increased her stock market wealth by 40 percent. In the second year, largely as a result of a slump in the stock market, she suffered a 30 percent decrease in the value of her stock investments. What was the net increase or decrease on her overall stock investment wealth by the end of the second year?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 40, \"arg_1\": 100}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 30, \"arg_1\": 100}}, {\"name\": \"subtract\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n-2.0\n\nNow solve:\n\u221a4 percent of 4\u221a4 =\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 744,
    "text": "Example:\n\nInstruction:\nConvert 10000 seconds into a formatted string of the form `HH:MM:SS`, then encode the resulting string into a string containing the ASCII values of each character in the string.\n\nUse this API documentation for reference: [{\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Checks if each line in the file matches a regular expression for a phone number.\", \"name\": \"check_phone_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if a line matches the regular expression, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The name of the file to check.\", \"type\": \"string\"}}, \"required\": [\"filename\"], \"type\": \"object\"}}, {\"description\": \"Encodes a string `s` into a string containing the ASCII values of each character in `s`.\", \"name\": \"encode_ascii\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Reads a file and returns a list of strings, where each string is a line in the file.\", \"name\": \"read_file_to_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings, where each string is a line in the file.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"path\": {\"description\": \"The path to the file to read.\", \"type\": \"string\"}}, \"required\": [\"path\"], \"type\": \"object\"}}, {\"description\": \"Converts a number of seconds into a formatted string of the form `HH:MM:SS`.\\n\\nThe function pads the hours, minutes, and seconds with leading zeros if necessary\\nto ensure the resulting string has exactly two digits per field.\", \"name\": \"convert_seconds_to_formatted_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A formatted string of the form `HH:MM:SS`.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"seconds\": {\"description\": \"The number of seconds to convert.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"seconds\"], \"type\": \"object\"}}, {\"description\": \"Filters a list of comments to include only those with authors from a given list of author IDs.\", \"name\": \"filter_comments\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of dictionaries, where each dictionary contains a comment ID and an author ID, and the author ID is in the given list of author IDs.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"author_ids\": {\"description\": \"A list of author IDs.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"comments\": {\"description\": \"A list of dictionaries, where each dictionary contains a comment ID and an author ID.\", \"items\": {\"additionalProperties\": {\"type\": \"integer\"}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"comments\", \"author_ids\"], \"type\": \"object\"}}, {\"description\": \"Calculates the weighted sum of a list of features using a list of coefficients.\", \"name\": \"predict_score\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"A list of coefficients corresponding to the features.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"features\": {\"description\": \"A list of features.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"features\", \"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Parses a range description string and returns a list of integers.\", \"name\": \"parse_range_description\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string representing a range description as a comma-separated list of ranges.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Finds the number of perfect squares less than or equal to `n`.\", \"name\": \"find_perfect_squares_num\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of perfect squares less than or equal to `n`.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"A positive integer or float.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"convert_seconds_to_formatted_string\", \"arguments\": {\"seconds\": 10000}, \"label\": \"$var1\"}, {\"name\": \"encode_ascii\", \"arguments\": {\"s\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n4850585254585248\n\nNow solve:\ntough and tricky questions : work / rate problems . a group of 4 junior lawyers require 7 hours to complete a legal research assignment . how many hours would it take a group of 3 legal assistants to complete the same research assignment assuming that a legal assistant works at two - thirds the rate of a junior lawyer ? source : chili hot gmat\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 745,
    "text": "Example:\n\nInstruction:\nAn engine moves at the speed of 90 kmph without any coaches attached to it.Speed of the train reduces at the rate that varies directly as the square root of the number of coaches attached.When 9 coaches are attached speed decreases to 78 kmph.What will be the speed of train when 25 coaches are attached.\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"sqrt\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 25}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 90, \"arg_1\": 78}}, {\"name\": \"sqrt\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 9}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 90, \"arg_1\": \"$var_5.result$\"}}]\n\nGold Answer:\n70.0\n\nNow solve:\nA shopkeeper sold an book offering a discount of 5% and earned a profit of 25%. What would have been the percentage of profit earned if no discount was offered?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 746,
    "text": "Example:\n\nInstruction:\nI have a string 'HelloWorld'. I want to convert it to snake case and then replace all instances of 'o' with 'a'.\n\nUse this API documentation for reference: [{\"description\": \"Adds keys from a list to a dictionary and sets their value to 0.\", \"name\": \"add_keys\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The modified dictionary.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"d\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"The dictionary to add keys to.\", \"type\": \"object\"}, \"l\": {\"description\": \"The list of keys to add.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"d\", \"l\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Extracts the file or folder names from a file path.\", \"name\": \"extract_file_or_folder_names\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings that are each a file or folder name in the path.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"path\": {\"description\": \"The file path.\", \"type\": \"string\"}}, \"required\": [\"path\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Converts a given string from camel case to snake case.\", \"name\": \"camel_to_snake\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The string in snake case.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"word\": {\"description\": \"The string to be converted.\", \"type\": \"string\"}}, \"required\": [\"word\"], \"type\": \"object\"}}, {\"description\": \"Check if the provided object has a certain attribute.\\n\\nIf the object does not have the attribute, raise a custom exception containing the attribute name and a message that says \\\"This object does not have a {attribute_name} attribute\\\".\", \"name\": \"check_has_attr\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"attr_name\": {\"description\": \"The name of the attribute to check for.\", \"type\": \"string\"}, \"obj\": {\"description\": \"The object to check.\"}}, \"required\": [\"obj\", \"attr_name\"], \"type\": \"object\"}}, {\"description\": \"Generates a list of 500 unique random ports, each being a random integer between 10000 and 60000 inclusive.\", \"name\": \"generate_ports\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of 500 unique random ports.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Returns the style name and family name as a string separated by a space.\\nIf the style object doesn't have a `style_name` key, returns `None`.\", \"name\": \"get_style_name\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"style\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary containing the style information.\", \"type\": \"object\"}}, \"required\": [\"style\"], \"type\": \"object\"}}, {\"description\": \"Displays the full name of a person given their first and last names.\", \"name\": \"display_name\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"first_name\": {\"description\": \"The first name of the person.\", \"type\": \"string\"}, \"last_name\": {\"description\": \"The last name of the person.\", \"type\": \"string\"}}, \"required\": [\"first_name\", \"last_name\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Replaces all instances of the word 'dog' with 'cat' in the input string.\\nIf the word is followed by 's' (e.g. 'dogs'), it is replaced by 'cats'.\", \"name\": \"replace_dogs_with_cats\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new string with all instances of 'dog' replaced by 'cat'.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Converts a color code in the #RRGGBB format to the corresponding RGB color code as a tuple of three integers in the range of 0 to 255 inclusive.\", \"name\": \"convert_to_rgb\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple of three integers representing the RGB color code.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"color_hex\": {\"description\": \"The color code in the #RRGGBB format.\", \"type\": \"string\"}}, \"required\": [\"color_hex\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Filters a string and returns a list of words that contain only uppercase letters.\", \"name\": \"filter_uppercase_words\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of words that contain only uppercase letters.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string to filter.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Performs the soft thresholding operation on a given value `x` with a threshold `lambda`.\", \"name\": \"soft_thresholding\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"lambda_\": {\"description\": \"The threshold value.\", \"type\": [\"integer\", \"number\"]}, \"x\": {\"description\": \"The value to apply the soft thresholding operation to.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"x\", \"lambda_\"], \"type\": \"object\"}}, {\"description\": \"Calculates the area based on the width and length.\", \"name\": \"calculate_area\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"length\": {\"description\": \"The length of the area.\", \"nullable\": true, \"type\": \"integer\"}, \"width\": {\"description\": \"The width of the area.\", \"nullable\": true, \"type\": \"integer\"}}, \"required\": [\"width\", \"length\"], \"type\": \"object\"}}, {\"description\": \"Swaps the items at indices `i` and `j` in `items`. Raises an `IndexError` if either of the indices is out of bounds.\", \"name\": \"swap_items\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"i\": {\"description\": \"The index of the first item to swap.\", \"type\": \"integer\"}, \"items\": {\"description\": \"The list of items to swap.\", \"items\": {}, \"type\": \"array\"}, \"j\": {\"description\": \"The index of the second item to swap.\", \"type\": \"integer\"}}, \"required\": [\"items\", \"i\", \"j\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"camel_to_snake\", \"arguments\": {\"word\": \"HelloWorld\"}, \"label\": \"$var1\"}, {\"name\": \"replace_dogs_with_cats\", \"arguments\": {\"input_string\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\nHello_world\n\nNow solve:\nGiven a list of integers [1, 2, 3, 4, 5], find the maximum change between any two integers in the list. Then, convert the maximum change to a string in the format 'HH:MM:SS'.\n\nUse this API documentation for reference: [{\"description\": \"Finds the length of the longest string in the list where the string is not the reverse of another string in the list.\", \"name\": \"find_longest_non_reversed\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The length of the longest string in the list where the string is not the reverse of another string in the list.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"words\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"words\"], \"type\": \"object\"}}, {\"description\": \"Transforms a Python bounding box to MATLAB format.\", \"name\": \"transform_bbox\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"python_bbox\": {\"description\": \"The Python bounding box, a tuple (x, y, w, h).\", \"prefixItems\": [{\"type\": \"number\"}, {\"type\": \"number\"}, {\"type\": \"number\"}, {\"type\": \"number\"}], \"type\": \"array\"}}, \"required\": [\"python_bbox\"], \"type\": \"object\"}}, {\"description\": \"Converts an integer `sec` (representing the number of seconds) to a string in the format of 'HH:MM:SS'.\", \"name\": \"convert_seconds\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string in the format of 'HH:MM:SS'.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"sec\": {\"description\": \"The number of seconds to convert.\", \"type\": \"integer\"}}, \"required\": [\"sec\"], \"type\": \"object\"}}, {\"description\": \"Quotes a string by enclosing it in angle brackets.\", \"name\": \"quote\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The quoted string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The string to be quoted.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Checks if all numbers in the list are either all positive or all negative.\", \"name\": \"is_all_pos_neg\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if all numbers in the list are either all positive or all negative, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}, {\"description\": \"Generates a unique key based on the given parameters.\", \"name\": \"generate_cache_key\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A unique key based on the given parameters.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"bool_param\": {\"description\": \"The boolean parameter.\", \"type\": \"boolean\"}, \"int_param\": {\"description\": \"The integer parameter.\", \"type\": \"integer\"}, \"string_param\": {\"description\": \"The string parameter.\", \"type\": \"string\"}}, \"required\": [\"string_param\", \"int_param\", \"bool_param\"], \"type\": \"object\"}}, {\"description\": \"Counts the total number of times a string pattern appears in a larger string.\", \"name\": \"pattern_counter\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The total number of times the pattern appears in the larger string.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"pattern\": {\"description\": \"The string pattern to search for.\", \"type\": \"object\"}, \"string\": {\"description\": \"The larger string to search in.\", \"type\": \"object\"}}, \"required\": [\"pattern\", \"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Extracts and returns the value of a <meta> tag from a given HTML document.\", \"name\": \"get_info_from_meta_tag\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of values of the specified <meta> tags. If there are no <meta> tags with the specified name,\\n    the function returns an empty list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"html_doc\": {\"description\": \"The HTML document to be searched.\", \"type\": \"string\"}, \"meta_tag\": {\"description\": \"The name of the <meta> tag to extract.\", \"type\": \"string\"}}, \"required\": [\"meta_tag\", \"html_doc\"], \"type\": \"object\"}}, {\"description\": \"Splits a data frame into a dictionary of data frames based on unique years.\", \"name\": \"split_by_year\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the keys are the unique years from the data frame and the values are data frames containing all rows with the corresponding year.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"df\": {\"description\": \"A data frame with columns 'year', 'month', and 'value'.\", \"type\": \"object\"}}, \"required\": [\"df\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Computes the average of the top-k (k=1, 2, ..., 5) values in a list of floats.\\nIf the list has fewer than k elements, the function returns `None`.\", \"name\": \"average_of_top_k\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"k\": {\"description\": \"The number of top values to consider.\", \"type\": \"integer\"}, \"lst\": {\"description\": \"A list of floats.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"lst\", \"k\"], \"type\": \"object\"}}, {\"description\": \"Calculates the maximum change between any two integers in a list.\", \"name\": \"max_change\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The maximum change between any two integers in the list.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Finds the maximum value of a list of numbers and its index.\", \"name\": \"max_value_and_index\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing the maximum value and its index.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 747,
    "text": "Example:\n\nInstruction:\nWorking simultaneously and independently at an identical constant rate, 20 machines of a certain type can produce a total of x units of product P in 4 days. How many of these machines, working simultaneously and independently at this constant rate, can produce a total of 3x units of product P in 8 days?\n\nUse this API documentation for reference: [{\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 20, \"arg_1\": 3}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 8}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n30.0\n\nNow solve:\nA and B can together finish a work in 40days. They worked together for 10days and then B left. After another 18 days, A finished the remaining work. In how many days A alone can finish the job?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 748,
    "text": "Example:\n\nInstruction:\nAn urn contains 6 red, 5 blue and 2 green marbles. If 2 marbles are picked at random, what is the probability that both are red?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 6, \"arg_1\": 5}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 6, \"arg_1\": 5}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 6, \"arg_1\": 5}}, {\"name\": \"add\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 2}}, {\"name\": \"subtract\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_7.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": \"$var_8.result$\", \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_9.result$\"}}]\n\nGold Answer:\n0.19230769230769232\n\nNow solve:\nThe average monthly salary of 20 employees in an organisation is Rs. 1400. If the manager's salary is added, then the average salary increases by Rs. 100. What is the manager's monthly salary ?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 749,
    "text": "Example:\n\nInstruction:\nFind the number which is nearest to 3105 and is exactly divisible by 21.\n\nUse this API documentation for reference: [{\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"reminder\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 3105, \"arg_1\": 21}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 21, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 3105, \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n3108.0\n\nNow solve:\nA carpenter constructed a rectangular sandbox with a capacity of 10 cubic feet. If the carpenter were to make a similar sandbox twice as long, twice as wide, and twice as high as the first sandbox, what would be the capacity, in cubic feet, of the second sandbox?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 750,
    "text": "Example:\n\nInstruction:\nThere are 6 people in the elevator. Their average weight is 150 lbs. Another person enters the elevator, and increases the average weight to 151 lbs. What is the weight of the 7th person.\n\nUse this API documentation for reference: [{\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 151, \"arg_1\": 7}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 6, \"arg_1\": 150}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n157.0\n\nNow solve:\nThere are 6 people in the elevator. Their average weight is 170 lbs. Another person enters the elevator, and increases the average weight to 151 lbs. What is the weight of the 7th person.\n\nUse this API documentation for reference: [{\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 751,
    "text": "Example:\n\nInstruction:\nThe number of timeshare condos available at Sunset Beach is 2/5 the number of timeshare condos available at Playa del Mar. If the total number of timeshare condos available at the two beaches combined is 350, what is the difference between the number of condos available at Sunset Beach and the number of condos available at Playa del Mar?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 350, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 5}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 5}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}]\n\nGold Answer:\n150.0\n\nNow solve:\nGenerate the first 5 terms of the \\\"power of two\\\" sequence. Then, calculate the product of all numbers in the sequence, excluding the number at each index.\n\nUse this API documentation for reference: [{\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Generates the first `n` terms of the \\\"power of two\\\" sequence.\\n\\nThe sequence is defined as follows: the first term is 1, the second term is 2,\\nthe third term is 4, and so on.\", \"name\": \"generate_power_of_two_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the first `n` terms of the \\\"power of two\\\" sequence.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"A non-negative integer.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Inserts the content of a file into a SQLite database.\", \"name\": \"insert_file_into_database\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of rows inserted into the database.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"conn\": {\"description\": \"The SQLite database connection.\", \"type\": \"object\"}, \"file_path\": {\"description\": \"The path to the file to be inserted.\", \"type\": \"string\"}}, \"required\": [\"conn\", \"file_path\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Constructs a SQL query that does an `INSERT` into a table named `my_table` with the given records.\\nIf the column names are not provided explicitly, they should be derived from the first dictionary in the list.\", \"name\": \"generate_sql_insert_query\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"records\": {\"description\": \"A list of dictionaries representing database records.\", \"items\": {\"additionalProperties\": {\"type\": \"string\"}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"records\"], \"type\": \"object\"}}, {\"description\": \"Counts the number of non-zero integers in a list.\", \"name\": \"count_non_zeros\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of non-zero integers in the list.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}, {\"description\": \"Calculates the product of all numbers in a list, excluding the number at each index.\", \"name\": \"exclude_product\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list where each element is the product of all numbers in the original list except the one at that index.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Sorts the keys of a dictionary and returns a string with the key-value pairs.\", \"name\": \"sort_and_print_dictionary\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string with the key-value pairs in sorted order.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"The dictionary to sort and print.\", \"type\": \"object\"}}, \"required\": [\"dictionary\"], \"type\": \"object\"}}, {\"description\": \"Filters the employees based on the given rules.\", \"name\": \"filter_employees\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"a list of dictionaries containing only the filtered employees.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"employees\": {\"description\": \"a list of dictionaries representing employees.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}, \"gender\": {\"description\": \"a string representing the desired gender ('male' or 'female').\", \"type\": \"string\"}}, \"required\": [\"employees\", \"gender\"], \"type\": \"object\"}}, {\"description\": \"Calculates the average of a list of numbers.\", \"name\": \"list_average\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The average of the numbers.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Capitalizes the first letter of each word in a string.\", \"name\": \"capitalize_first_letter_of_each_word\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Parses request headers to extract a specific cookie value by its name.\", \"name\": \"get_cookie_value\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The value of the cookie if found, otherwise `None`.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"cookie_name\": {\"description\": \"The name of the cookie to extract the value for.\", \"type\": \"string\"}, \"headers\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary with keys representing header names and values representing their corresponding values.\", \"type\": \"object\"}}, \"required\": [\"headers\", \"cookie_name\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns a new list with only the strings that contain a specific character.\", \"name\": \"get_strings_containing_char\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"my_char\": {\"description\": \"The character to search for.\", \"type\": \"string\"}, \"my_strings\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"my_strings\", \"my_char\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 752,
    "text": "Example:\n\nInstruction:\nAn uneducated retailer marks all his goods at 50% above the cost price and thinking that he will still make 25% profit, offers a discount of 25% on the marked price. What is his actual profit on the sales?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 50, \"arg_1\": 100}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 50, \"arg_1\": 100}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 25, \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_5.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_6.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_7.result$\", \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": \"$var_8.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n12.5\n\nNow solve:\nThe first, second and third terms of the proportion are 56, 16, 49. Find the fourth term.\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 753,
    "text": "Example:\n\nInstruction:\nA group of people participate in some curriculum, 30 of them practice Yoga, 20 study cooking, 15 study weaving, 5 of them study cooking only, 8 of them study both the cooking and yoga, 5 of them participate all curriculums. How many people study both cooking and weaving?\n\nUse this API documentation for reference: [{\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 20, \"arg_1\": 8}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 5}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 5}}]\n\nGold Answer:\n2.0\n\nNow solve:\nAn error 6% in excess is made while measuring the side of a square. What is the percentage of error in the calculated area of the square?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 754,
    "text": "Example:\n\nInstruction:\nThe time taken by a man to row his boat upstream is twice the time taken by him to row the same distance downstream. If the speed of the boat in still water is 45 kmph, find the speed of the stream?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 45, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 3}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 45, \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n15.0\n\nNow solve:\nConvert the integer 12345 to a byte array and reverse the byte order. Then, process a file path by replacing the file extension with \"_processed\" + file_extension. The input file path is \"example.txt\". Finally, remove all matches of the pattern \"processed\" from the processed file path.\n\nUse this API documentation for reference: [{\"description\": \"Converts an integer to a byte array and reverses the byte order.\", \"name\": \"convert_integer_to_byte_array_and_reverse\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of integers representing the reversed byte array.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"integer\": {\"description\": \"The input integer.\", \"type\": \"integer\"}}, \"required\": [\"integer\"], \"type\": \"object\"}}, {\"description\": \"Processes a file path by replacing the file extension with \\\"_processed\\\" + file_extension.\", \"name\": \"process_file_path\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The processed file path.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input_file_path\": {\"description\": \"The input file path.\", \"type\": \"string\"}}, \"required\": [\"input_file_path\"], \"type\": \"object\"}}, {\"description\": \"Removes all matches of a given pattern from a given string.\", \"name\": \"remove_all_patterns\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"pattern\": {\"description\": \"The regular expression pattern to be removed.\", \"type\": \"string\"}, \"string\": {\"description\": \"The original string.\", \"type\": \"string\"}}, \"required\": [\"string\", \"pattern\"], \"type\": \"object\"}}, {\"description\": \"Creates a matrix from a vector using numpy array broadcasting and vectorization.\\n\\nThe function takes an array of shape `(n,)` (i.e., a vector of length `n`) and returns an array of shape `(n, n)` (i.e., a matrix with `n` rows and `n` columns) where the `i`-th row is `[x[i]] * n`.\", \"name\": \"create_matrix_from_vector\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The output matrix.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"vector\": {\"description\": \"The input vector.\", \"type\": \"object\"}}, \"required\": [\"vector\"], \"type\": \"object\"}}, {\"description\": \"Validates and formats a 24-hour time string to a 12-hour time string with AM or PM.\", \"name\": \"validate_and_format_time\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string representing the reformatted 12-hour time with AM or PM.\", \"type\": [\"object\", \"string\"]}}}, \"parameters\": {\"properties\": {\"time_str\": {\"description\": \"A string representing a 24-hour time.\", \"type\": \"string\"}}, \"required\": [\"time_str\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the minimum and maximum values along each column of a 2-dimensional PyTorch tensor.\", \"name\": \"minmax\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A 1-dimensional PyTorch tensor containing the minimum and maximum values along each column.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"tensor\": {\"description\": \"A 2-dimensional PyTorch tensor containing floating-point numbers.\", \"type\": \"object\"}}, \"required\": [\"tensor\"], \"type\": \"object\"}}, {\"description\": \"Converts a string representation of a C# class into a string representation of a Python class.\", \"name\": \"convert_csharp_to_python\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The string representation of the Python class.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"csharp_class\": {\"description\": \"The string representation of the C# class.\", \"type\": \"string\"}}, \"required\": [\"csharp_class\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns a randomly selected key from the given dictionary based on the provided weights.\", \"name\": \"weighted_random_key\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"weights\": {\"additionalProperties\": {\"type\": \"number\"}, \"description\": \"A dictionary where keys are the options and values are the weights.\", \"type\": \"object\"}}, \"required\": [\"weights\"], \"type\": \"object\"}}, {\"description\": \"Samples Q columns from a 2D tensor without replacement.\", \"name\": \"sample_tensor\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A 2D tensor of shape (N, Q), where N is the number of rows in the original tensor.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"Q\": {\"description\": \"The number of columns to sample.\", \"type\": \"integer\"}, \"tensor\": {\"description\": \"The input 2D tensor.\", \"type\": \"object\"}}, \"required\": [\"tensor\", \"Q\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of the first n values of d[x].\\nIf n is greater than the length of d[x], then returns the sum of all values in d[x].\\nIf x is not in d, returns 0.\", \"name\": \"first_n_sum\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"d\": {\"additionalProperties\": {\"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"description\": \"A dictionary where d[x] is a list of values.\", \"type\": \"object\"}, \"n\": {\"description\": \"The number of values to sum.\", \"type\": \"integer\"}, \"x\": {\"description\": \"The key to look up in the dictionary.\", \"type\": \"string\"}}, \"required\": [\"d\", \"x\", \"n\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 755,
    "text": "Example:\n\nInstruction:\nFor the list [1, 2, 3], calculate the square root of each number. Then, check if the resulting list is disjoint with the list [4, 5, 6].\n\nUse this API documentation for reference: [{\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns the date of the previous weekday as a string with the same format.\", \"name\": \"previous_weekday\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"date_string\": {\"description\": \"A string representing a date in the format %Y-%m-%d.\", \"type\": \"string\"}, \"weekday\": {\"description\": \"A string representing a weekday in English.\", \"type\": \"string\"}}, \"required\": [\"date_string\", \"weekday\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Counts the number of occurrences of the substring \\\"cat\\\" in a string.\\n\\nThe function uses regular expressions to make the matching case-insensitive.\\nIt also handles empty or non-string inputs, returning 0 in those cases.\", \"name\": \"count_cats\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of occurrences of \\\"cat\\\" in the input string.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Checks if the sum of the first two numbers in a list is equal to the last number.\", \"name\": \"is_magic_sum\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the sum of the first two numbers is equal to the last number, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": [\"integer\", \"number\"]}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns the last occurrence of a substring in a given string.\", \"name\": \"last_occurrence\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The string in which to search for the substring.\", \"type\": \"string\"}, \"substring\": {\"description\": \"The substring to search for.\", \"type\": \"string\"}}, \"required\": [\"string\", \"substring\"], \"type\": \"object\"}}, {\"description\": \"Checks if two lists are disjoint (contain no common elements).\", \"name\": \"disjoint\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the lists are disjoint, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"list1\": {\"description\": \"The first list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"list2\": {\"description\": \"The second list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"list1\", \"list2\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of all the child elements with a specific tag name.\\nIf the XML node has no child elements with the given tag name, the function returns an empty list.\\nThe function also handles the case where the input XML node is None or empty.\", \"name\": \"get_all_elements_by_tag_name\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"tag_name\": {\"description\": \"The tag name of the child elements to search for.\", \"type\": \"string\"}, \"xml_node\": {\"description\": \"The XML node to search for child elements.\", \"type\": \"object\"}}, \"required\": [\"xml_node\", \"tag_name\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Converts a date in the Tibetan calendar to the same date in the Chinese calendar.\", \"name\": \"tibetan_calendar_to_chinese_calendar\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The same date in the Chinese calendar as a string in the format `YYYY-MM-DD`.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"tibetan_date\": {\"description\": \"The date in the Tibetan calendar as a string in the format `MM/DD/YYYY`.\", \"type\": \"string\"}}, \"required\": [\"tibetan_date\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the square root of each integer in a list.\", \"name\": \"square_root_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the square root of each integer in the input list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"square_root_list\", \"arguments\": {\"numbers\": [1, 2, 3]}, \"label\": \"$var1\"}, {\"name\": \"disjoint\", \"arguments\": {\"list1\": \"$var1.output_0$\", \"list2\": [4, 5, 6]}, \"label\": \"$var2\"}]\n\nGold Answer:\nTrue\n\nNow solve:\nI have a string \"Hello World!\". I want to create a database key from it and then find all non-whitespace substrings from the original string.\n\nUse this API documentation for reference: [{\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Finds the number of sentences whose tokens cover at least 80% of the total number of tokens.\", \"name\": \"find_num_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"An integer representing the number of sentences whose tokens cover at least 80% of the total number of tokens.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of strings, where each string represents a sentence.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Creates a new dictionary with each value being the key's value multiplied by 2.\", \"name\": \"double_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new dictionary with updated values.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {\"type\": \"number\"}, \"description\": \"The original dictionary.\", \"type\": \"object\"}}, \"required\": [\"dictionary\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Generates all possible combinations of elements from each list in the input dictionary.\", \"name\": \"combinations_of_lists\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of dictionaries where each dictionary contains a combination of elements from the input dictionary.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_dict\": {\"additionalProperties\": {\"items\": {\"type\": [\"integer\", \"string\"]}, \"type\": \"array\"}, \"description\": \"A dictionary where the keys are strings and the values are lists of integers or strings.\", \"type\": \"object\"}}, \"required\": [\"input_dict\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Serializes a NumPy array to a custom format, where the first line contains a single integer specifying the number of rows in the array, and each subsequent line contains all the elements in a row separated by a space.\", \"name\": \"serialize_numpy_array\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"arr\": {\"description\": \"The NumPy array to serialize.\", \"type\": \"object\"}, \"path\": {\"description\": \"The path to the file where the serialized data should be written.\", \"type\": \"string\"}}, \"required\": [\"arr\", \"path\"], \"type\": \"object\"}}, {\"description\": \"Returns a string including the specified word if a boolean parameter is True.\\nOtherwise, if the boolean is False, the function returns an empty string.\", \"name\": \"include_word\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"include\": {\"description\": \"A boolean indicating whether to include the word in the string.\", \"type\": \"boolean\"}, \"word\": {\"description\": \"The word to include in the string.\", \"type\": [\"integer\", \"string\"]}}, \"required\": [\"word\", \"include\"], \"type\": \"object\"}}, {\"description\": \"Creates a database key from a given string.\\nThe key is in the form of 'key_a-b-c', where each 'a', 'b', 'c', etc. is a character in the input string.\", \"name\": \"create_database_key\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 756,
    "text": "Example:\n\nInstruction:\nA bag contains 7 green and 8 white balls. If two balls are drawn simultaneously, the probability that both are of the same colour is -.\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 7, \"arg_1\": 8}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 8, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 8, \"arg_1\": 1}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 7, \"arg_1\": 8}}, {\"name\": \"subtract\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_5.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_6.result$\"}}, {\"name\": \"add\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": 7, \"arg_1\": 8}}, {\"name\": \"divide\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": 7, \"arg_1\": \"$var_8.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": 7, \"arg_1\": 1}}, {\"name\": \"add\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": 7, \"arg_1\": 8}}, {\"name\": \"subtract\", \"label\": \"$var_12\", \"arguments\": {\"arg_0\": \"$var_11.result$\", \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_13\", \"arguments\": {\"arg_0\": \"$var_10.result$\", \"arg_1\": \"$var_12.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_14\", \"arguments\": {\"arg_0\": \"$var_9.result$\", \"arg_1\": \"$var_13.result$\"}}, {\"name\": \"add\", \"label\": \"$var_15\", \"arguments\": {\"arg_0\": \"$var_7.result$\", \"arg_1\": \"$var_14.result$\"}}]\n\nGold Answer:\n0.4666666666666667\n\nNow solve:\nGiven a string \"abc\", convert it to unicode and store the result in a variable. Then, check if the characters in the unicode string are in alphabetical order.\n\nUse this API documentation for reference: [{\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Increments the version number of a software program by 1.\\n\\nThe version number is given as a string of the format `major.minor.patch`,\\nwhere each part is a non-negative integer.\", \"name\": \"increase_version_number\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The incremented version number as a string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"version_number\": {\"description\": \"The version number of the software program.\", \"type\": \"string\"}}, \"required\": [\"version_number\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Checks if all the lines in a file are unique.\\n\\nA single line is considered unique if it is identical to another line,\\nbut not if it is only different in case. For instance, the lines \\\"Hello\\\"\\nand \\\"hello\\\" are considered identical in this function.\", \"name\": \"check_unique_lines\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A boolean indicating whether all the lines in the file are unique.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The name of the file to check.\", \"type\": \"string\"}}, \"required\": [\"filename\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Checks if the characters in a string are in alphabetical order.\\nIf the characters are not in order, the function returns the reversed order sequence.\\nIf the characters are in order, the function returns the original input string.\", \"name\": \"check_characters_order\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"object\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Computes the exponential moving average of the time series data with a smoothing factor of 0.5.\\nMatches the index of each label in the label list with the index of the corresponding data point in the smoothed time series.\\nReturns a list of tuples containing the data point and its corresponding label.\", \"name\": \"smooth_time_series\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"A list of time series data.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"labels\": {\"description\": \"A list of time series data labels.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"data\", \"labels\"], \"type\": \"object\"}}, {\"description\": \"Serializes a Python object using the pickle module.\", \"name\": \"serialize\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The Python object to serialize.\", \"type\": \"object\"}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Adds a comment header to a string.\\n\\nThe comment header is a single-line comment containing the string's length.\\nIf the input string is empty, the function returns an empty string.\", \"name\": \"add_comment_header\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input string with a comment header, or an empty string if the input string is empty.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Converts a string to unicode if possible.\", \"name\": \"convert_to_unicode_if_available\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input string as a unicode string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string to convert to unicode.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Extracts comment lines from a Python source code file.\", \"name\": \"extract_comments\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of comment lines.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the Python source code file.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 757,
    "text": "Example:\n\nInstruction:\nAn amount at compound interest sums to Rs.17640/- in 2 years and to Rs.19404/- in 3 years at the same rate of interest. Find the rate percentage?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 19404, \"arg_1\": 17640}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 17640}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n10.0\n\nNow solve:\nSheila works 8 hours per day on Monday, Wednesday and Friday, and 6 hours per day on Tuesday and Thursday. She does not work on Saturday and Sunday. She earns $324 per week. How much does she earn in dollars per hour?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 758,
    "text": "Example:\n\nInstruction:\nthe average of 5 consecutive even numbers a , b , c , d and e is 20 . what percent of e is d ?\n\nUse this API documentation for reference: [{\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 2, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 3}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 4}}, {\"name\": \"add\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_5.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": 5}}, {\"name\": \"subtract\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": 20, \"arg_1\": \"$var_7.result$\"}}, {\"name\": \"add\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": \"$var_8.result$\", \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_9.result$\", \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": \"$var_10.result$\", \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_12\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_13\", \"arguments\": {\"arg_0\": 2, \"arg_1\": \"$var_12.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_14\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 3}}, {\"name\": \"add\", \"label\": \"$var_15\", \"arguments\": {\"arg_0\": \"$var_13.result$\", \"arg_1\": \"$var_14.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_16\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 4}}, {\"name\": \"add\", \"label\": \"$var_17\", \"arguments\": {\"arg_0\": \"$var_15.result$\", \"arg_1\": \"$var_16.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_18\", \"arguments\": {\"arg_0\": \"$var_17.result$\", \"arg_1\": 5}}, {\"name\": \"subtract\", \"label\": \"$var_19\", \"arguments\": {\"arg_0\": 20, \"arg_1\": \"$var_18.result$\"}}, {\"name\": \"add\", \"label\": \"$var_20\", \"arguments\": {\"arg_0\": \"$var_19.result$\", \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_21\", \"arguments\": {\"arg_0\": \"$var_20.result$\", \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_22\", \"arguments\": {\"arg_0\": \"$var_21.result$\", \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_23\", \"arguments\": {\"arg_0\": \"$var_22.result$\", \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_24\", \"arguments\": {\"arg_0\": \"$var_11.result$\", \"arg_1\": \"$var_23.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_25\", \"arguments\": {\"arg_0\": \"$var_24.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n91.7\n\nNow solve:\nI have a list of integers [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] and I want to find the index of the first integer that is a multiple of 3. Then, I want to pad this index with leading zeros to reach a length of 3.\n\nUse this API documentation for reference: [{\"description\": \"Returns a new string that is the input argument's value with a default value of 'No value' if input is None.\", \"name\": \"handle_none\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"value\": {\"description\": \"The input value.\", \"nullable\": true, \"type\": \"string\"}}, \"required\": [\"value\"], \"type\": \"object\"}}, {\"description\": \"Collects values of properties from a list of objects into a dictionary.\\n\\nEach property is a key in the dictionary, and the corresponding value is a list of those property values for all the objects in the list.\", \"name\": \"collect_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where each key is a property and the corresponding value is a list of those property values for all the objects in the list.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"objects\": {\"description\": \"A list of objects, where each object is a dictionary with string keys and any values.\", \"items\": {\"additionalProperties\": {}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"objects\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Creates a .tar.gz file for each string in the input list.\", \"name\": \"tar_files\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"files\": {\"description\": \"A list of strings representing the files to be archived.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"files\"], \"type\": \"object\"}}, {\"description\": \"Calculates the significance level based on the given list of values and a p-value threshold.\", \"name\": \"calculate_significance_level\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The significance level.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"p_value\": {\"description\": \"The p-value threshold.\", \"type\": \"number\"}, \"values\": {\"description\": \"A list of values.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"values\", \"p_value\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Calculates the total cost in dollars of cookies purchased.\", \"name\": \"buy_cookies\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"buy_n\": {\"description\": \"The number of cookies to purchase.\", \"type\": \"integer\"}, \"get_m_for_free\": {\"description\": \"The number of cookies received for free when buying a certain number of cookies.\", \"type\": \"integer\"}}, \"required\": [\"buy_n\", \"get_m_for_free\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Pads a number with leading zeros to reach a specified length.\", \"name\": \"pad_number_to_length\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"length\": {\"description\": \"The desired length of the padded number.\", \"type\": \"integer\"}, \"number\": {\"description\": \"The number to pad.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"number\", \"length\"], \"type\": \"object\"}}, {\"description\": \"Calculates the power spectrum of a 3D tensor.\", \"name\": \"power_spectrum\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A 2D tensor representing the average power spectrum for each channel.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"tensor\": {\"description\": \"A 3D tensor with dimensions (samples, frequency bins, channels).\", \"type\": \"object\"}}, \"required\": [\"tensor\"], \"type\": \"object\"}}, {\"description\": \"Parses a JSON string into a list of dictionaries, where each dictionary contains the \\\"id\\\", \\\"title\\\", and \\\"body\\\" fields.\\nFormats the output as a string with the following format:\\n\\nID: {id}\\nTitle: {title}\\nBody: {body}\\n\\nID: {id}\\nTitle: {title}\\nBody: {body}\", \"name\": \"parse_json_to_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The formatted string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"json_string\": {\"description\": \"The JSON string to parse.\", \"type\": \"string\"}}, \"required\": [\"json_string\"], \"type\": \"object\"}}, {\"description\": \"Returns the index of the first integer in the input list that is a multiple of n.\\nIf no such integer exists, returns -1.\", \"name\": \"get_positive_integer_index\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"n\": {\"description\": \"A positive integer.\", \"type\": \"integer\"}}, \"required\": [\"input_list\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Counts the number of occurrences of each unique string's hash value.\", \"name\": \"count_hash_frequencies\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the keys are the hash values and the values are the number of occurrences.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"strings\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"strings\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Extracts the value of the `id` attribute from the first `b` element of the given XML node.\", \"name\": \"extract_id_from_xml_node\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The value of the `id` attribute of the first `b` element.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"node\": {\"description\": \"The XML node.\", \"type\": \"string\"}}, \"required\": [\"node\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Transforms a list of dictionaries with a required `content` key and an optional `is_output` key to a list of text lines.\\nIf `is_output` is `True`, then the `content` should be wrapped in parentheses. Otherwise, the `content` should be unmodified.\\nUses a regular expression substitution to transform the `content` of the dictionary.\", \"name\": \"transform_to_text_lines\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of text lines.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lines\": {\"description\": \"A list of dictionaries with a required `content` key and an optional `is_output` key.\", \"items\": {\"additionalProperties\": {}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"lines\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 759,
    "text": "Example:\n\nInstruction:\nA cycle is bought for Rs.800 and sold for Rs.1080, find the gain percent?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 1080, \"arg_1\": 800}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 800}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n35.0\n\nNow solve:\nI have a list of integers [1, 2, 3, 4, 5]. I want to add 10 to each element in the list, then select the 3rd largest element in the resulting list.\n\nUse this API documentation for reference: [{\"description\": \"Reads the contents of a text file and returns a list of non-empty lines.\", \"name\": \"read_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of non-empty lines.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"encoding\": {\"description\": \"The text encoding.\", \"type\": \"string\"}, \"path\": {\"description\": \"The file path.\", \"type\": \"string\"}}, \"required\": [\"path\", \"encoding\"], \"type\": \"object\"}}, {\"description\": \"Combines two labeling dictionaries into a single dictionary.\", \"name\": \"combine_labels\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A single dictionary, where each key is a tag ID and the value is a list of tags, with the tags from each of the two dictionaries concatenated together.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"label_dict_list\": {\"description\": \"A list of two dictionaries, where each dictionary is a mapping from a tag ID to a list of tags.\", \"items\": {\"additionalProperties\": {\"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"label_dict_list\"], \"type\": \"object\"}}, {\"description\": \"Creates a dictionary with each key mapped to the provided default value.\", \"name\": \"dict_from_keys\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"default\": {\"description\": \"The default value for each key. If not provided, defaults to None.\", \"nullable\": true, \"type\": [\"integer\", \"number\"]}, \"keys\": {\"description\": \"A list of keys.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"keys\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Selects the Nth largest element in the array.\", \"name\": \"select_nth_largest\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"arr\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"n\": {\"description\": \"The Nth largest element to select.\", \"type\": \"integer\"}}, \"required\": [\"arr\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Joins the file_name and file_path using a file system's path separator.\", \"name\": \"join_file_name\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"file_name\": {\"description\": \"The name of the file.\", \"type\": \"string\"}, \"file_path\": {\"description\": \"The path to the file.\", \"type\": \"string\"}}, \"required\": [\"file_name\", \"file_path\"], \"type\": \"object\"}}, {\"description\": \"Calculates the power of a number.\", \"name\": \"square_with_power\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"power\": {\"description\": \"The power to which the number is to be raised. Default is 2.\", \"type\": [\"integer\", \"number\"]}, \"x\": {\"description\": \"The number to be powered.\", \"type\": \"integer\"}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Adds a given integer to a list of integers and returns the resulting list.\\nIf the input list is empty, the function throws a ValueError exception.\", \"name\": \"add_n_to_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The input list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"n\": {\"description\": \"The integer to be added to each element in the list.\", \"type\": \"integer\"}}, \"required\": [\"lst\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Determines whether a sequence of brackets is valid.\", \"name\": \"validate_brackets\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the sequence is valid, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"sequence\": {\"description\": \"A string containing brackets.\", \"type\": \"string\"}}, \"required\": [\"sequence\"], \"type\": \"object\"}}, {\"description\": \"Serializes a list of paired arguments into a JSON string, where the odd-indexed arguments are keys and the even-indexed arguments are values.\", \"name\": \"serialize_list_to_json\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The JSON string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"args\": {\"description\": \"The list of paired arguments.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"args\"], \"type\": \"object\"}}, {\"description\": \"Converts a percentage value between 0 and 1 to a score between 0 and 5.\", \"name\": \"convert_percentage_to_score\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The corresponding score.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"percentage\": {\"description\": \"The percentage value to convert.\", \"type\": \"number\"}}, \"required\": [\"percentage\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Generates a random 6-digit identification (ID) number in the format of \\\"{number}-{number}-{number}\\\", where each number is a random integer in the range of 0 to 99.\", \"name\": \"generate_six_digit_id\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string representing the generated 6-digit ID number.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 760,
    "text": "Example:\n\nInstruction:\nA certain debt will be paid in 52 installments from January 1 to December 31 of a certain year. Each of the first 22 payments is to be $410; each of the remaining payments is to be $65 more than each of the first 22 payments. What is the average (arithmetic mean) payment that will be made on the debt for the year?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 22, \"arg_1\": 410}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 410, \"arg_1\": 65}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 52, \"arg_1\": 22}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 52}}]\n\nGold Answer:\n447.5\n\nNow solve:\nLet S be the set of all positive integers that, when divided by 8, have a remainder of 5. What is the 79th number in this set?\n\nUse this API documentation for reference: [{\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 761,
    "text": "Example:\n\nInstruction:\nThe average (arithmetic mean) of 20, 40, and 60 is 5 more than the average of 10, 70, and what number?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 20, \"arg_1\": 40}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 60}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 5, \"arg_1\": 3}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 10}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 70}}, {\"name\": \"subtract\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_5.result$\"}}]\n\nGold Answer:\n25.0\n\nNow solve:\nThe sum of ages of 5 children born at the intervals of 3 years each is 80 years. What is the age of the youngest child?\n\nUse this API documentation for reference: [{\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 762,
    "text": "Example:\n\nInstruction:\nAt a restaurant, glasses are stored in two different-sized boxes. One box contains 12 glasses, and the other contains 16 glasses. If the average number of glasses per box is 15, and there are 16 more of the larger boxes, what is the total number of glasses W at the restaurant? (Assume that all boxes are filled to capacity.)\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 16, \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 15}}]\n\nGold Answer:\n480.0\n\nNow solve:\nThe ratio of numbers is 5:6 and their H.C.F is 4. Their L.C.M is:\n\nUse this API documentation for reference: [{\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 763,
    "text": "Example:\n\nInstruction:\nA man and a boy complete a work together in 24 days. If for the last 6 days man alone does the work then it is completed in 26 days. How long the boy will take to complete the work alone?\n\nUse this API documentation for reference: [{\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 26, \"arg_1\": 6}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 26, \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n72.0\n\nNow solve:\nFind \u221a? /20 = 4 ?\n\nUse this API documentation for reference: [{\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 764,
    "text": "Example:\n\nInstruction:\nI want to replace the first occurrence of a `*` in the string 'stack_project_name/stack_name' with 'new_name' and then convert the resulting string to a sequence of integers representing the Unicode values of the characters in the string.\n\nUse this API documentation for reference: [{\"description\": \"Calculates the name of the stack from the given stack path.\", \"name\": \"calculate_stack_name\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"stack_path\": {\"description\": \"The path to a CloudFormation stack, which is in the format of 'stack_project_name/stack_name' or just 'stack_name'.\", \"type\": \"string\"}}, \"required\": [\"stack_path\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Extends `left` with the elements of `right`.\", \"name\": \"extend\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"left\": {\"description\": \"The list to be extended.\", \"type\": \"array\"}, \"right\": {\"description\": \"The list containing elements to be added to `left`.\", \"type\": \"array\"}}, \"required\": [\"left\", \"right\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Creates a dictionary from a list of tuples.\", \"name\": \"list_to_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where keys are the tuples' first elements and values are the tuples' second elements.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"tuple_list\": {\"description\": \"A list of tuples where the first element is the key and the second element is the value.\", \"items\": {\"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"string\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"tuple_list\"], \"type\": \"object\"}}, {\"description\": \"Replaces all spaces in a string with \\\"%20\\\".\", \"name\": \"replace_string_with_spaces\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string.\", \"nullable\": true, \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Maps the category of each book in a dataframe to its corresponding category name.\", \"name\": \"map_category_to_book\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"df\": {\"description\": \"A pandas dataframe with `category_id` and `category_name` columns.\", \"type\": \"object\"}, \"lookup\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary mapping category IDs to category names.\", \"type\": \"object\"}}, \"required\": [\"df\", \"lookup\"], \"type\": \"object\"}}, {\"description\": \"Replaces the first occurrence of a `*` in `s1` with `s2`.\", \"name\": \"replace_first_star\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s1\": {\"description\": \"The input string.\", \"type\": \"string\"}, \"s2\": {\"description\": \"The string to replace the first `*` with.\", \"type\": \"string\"}}, \"required\": [\"s1\", \"s2\"], \"type\": \"object\"}}, {\"description\": \"Counts the frequency of a given attribute in a list of objects.\", \"name\": \"count_attribute\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the keys are the attribute values and the values are their frequencies.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"attribute\": {\"description\": \"The name of the attribute to count.\", \"type\": \"string\"}, \"objects\": {\"description\": \"A list of objects.\", \"items\": {}, \"type\": \"array\"}}, \"required\": [\"objects\", \"attribute\"], \"type\": \"object\"}}, {\"description\": \"Finds the first pair of numbers in the list whose sum is equal to the target.\", \"name\": \"get_first_pair_with_sum\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list containing the two numbers if a pair is found, or None if no pair is found.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"target\": {\"description\": \"An integer representing the target sum.\", \"type\": \"integer\"}}, \"required\": [\"lst\", \"target\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the value of the mathematical constant pi.\", \"name\": \"pi\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The value of pi.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Converts a string to a sequence of integers, where each integer represents a character's Unicode value.\\nThe conversion supports both ASCII and Unicode characters. For Unicode characters, they are encoded to UTF-8 before calculating their Unicode values.\", \"name\": \"str_to_unicode\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of integers representing the Unicode values of the characters in the input string.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"calculate_stack_name\", \"arguments\": {\"stack_path\": \"stack_project_name/stack_name\"}, \"label\": \"$var1\"}, {\"name\": \"replace_first_star\", \"arguments\": {\"s1\": \"$var1.output_0$\", \"s2\": \"new_name\"}, \"label\": \"$var2\"}, {\"name\": \"str_to_unicode\", \"arguments\": {\"s\": \"$var2.output_0$\"}, \"label\": \"$var3\"}]\n\nGold Answer:\n[115, 116, 97, 99, 107, 95, 110, 97, 109, 101]\n\nNow solve:\nA certain car uses one gallon of gasoline every 32 miles when it travels on highway, and one gallon of gasoline every 20 miles when it travels in the city. When a car travels 4 miles on highway and 4 additional miles in the city, it uses what percent more gasoline than if it travels 8 miles on the highway?\n\nUse this API documentation for reference: [{\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 765,
    "text": "Example:\n\nInstruction:\nCalculate the integer square root of 100 and then check if it is within a tolerance of 10 with an expected value of 10 and a tolerance of 0.1.\n\nUse this API documentation for reference: [{\"description\": \"Calculates the sum of all integer literals in the input string `s` in their original numeric form.\", \"name\": \"sum_integer_literals\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string containing integer literals.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Extracts preprocessed data from a Pandas dataframe.\", \"name\": \"extract_data_from_dataframe\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple of two elements, `(X, y)`. `X` is a numpy array containing the input features,\\n    while `y` is a numpy array containing the corresponding labels.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"df\": {\"description\": \"The input dataframe.\", \"type\": \"object\"}}, \"required\": [\"df\"], \"type\": \"object\"}}, {\"description\": \"Calculates the integer square root of a non-negative number.\\n\\nThe integer square root of a non-negative number `n` is the greatest integer `x`\\nwhose square is less than or equal to `n`.\", \"name\": \"integer_square_root\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The integer square root of `n`.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"A non-negative number.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Computes the factorial of a number n using a naive approach.\", \"name\": \"naive_factorial\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"A positive integer.\", \"nullable\": true, \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Returns a new dictionary with default values replaced if they exist in `args`.\", \"name\": \"default_args\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"args\": {\"description\": \"A dictionary containing the arguments.\", \"type\": \"object\"}, \"default_values\": {\"description\": \"A dictionary containing the default values for each argument.\", \"type\": \"object\"}}, \"required\": [\"args\", \"default_values\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Checks if the absolute difference between actual and expected is less than or equal to tolerance * expected.\", \"name\": \"within_tolerance\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"actual\": {\"description\": \"The actual value.\", \"type\": [\"integer\", \"number\"]}, \"expected\": {\"description\": \"The expected value.\", \"type\": [\"integer\", \"number\"]}, \"tolerance\": {\"description\": \"The ratio of tolerance (default is 0.001).\", \"type\": \"number\"}}, \"required\": [\"actual\", \"expected\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Extracts the string enclosed within brackets if it is found, or a default value if not.\", \"name\": \"extract_string_between_brackets\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The string enclosed within brackets if it is found, or the default value \\\"No match found\\\".\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Calculates the covariance matrix of a list of time series data after centering each series.\", \"name\": \"center_and_covariance\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The covariance matrix of the centered time series data.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"ts_data\": {\"description\": \"A list of time series data, where each series is a list of float values.\", \"items\": {\"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"ts_data\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Performs tokenization on a given input text and filters out words that are shorter than a specified minimum length.\", \"name\": \"tokenization_filter\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of lowercase words from the input text that are longer than or equal to the specified minimum length.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"min_length\": {\"description\": \"The minimum length of words to be included in the output.\", \"type\": \"integer\"}, \"text\": {\"description\": \"The input text to be tokenized.\", \"type\": \"string\"}}, \"required\": [\"text\", \"min_length\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"integer_square_root\", \"arguments\": {\"n\": 100}, \"label\": \"$var1\"}, {\"name\": \"within_tolerance\", \"arguments\": {\"actual\": \"$var1.output_0$\", \"expected\": 10, \"tolerance\": 0.1}, \"label\": \"$var2\"}]\n\nGold Answer:\nTrue\n\nNow solve:\nGiven a list of strings ['apple', 'banana', 'cherry'], convert it to the format '0: apple1: banana2: cherry'. Then, remove all consecutive spaces in the resulting string.\n\nUse this API documentation for reference: [{\"description\": \"Converts a list of strings to a single string, where each string is formatted as follows:\\n`\\\"{1}: {2}\\\"`. The first string should be the string representation of the list index,\\nthe second should be the original list string, and there should be no comma or space\\nbetween the two. For example, the input list [\\\"a\\\", \\\"b\\\", \\\"c\\\"] should result in the output\\nstring \\\"0: a1: b2: c\\\".\", \"name\": \"convert_to_format\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A single string formatted as described above.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"A list of strings to be converted.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"input_list\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Generates a list of constraints for a boolean variable.\", \"name\": \"generate_constraints\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"index_format\": {\"description\": \"A callable representing the format for the variable indices.\", \"type\": \"object\"}, \"n\": {\"description\": \"A positive integer representing the number of constraints to generate.\", \"type\": \"integer\"}, \"var_prefix\": {\"description\": \"A string representing the prefix for the variable names.\", \"type\": \"string\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Removes all consecutive spaces in a string using regular expressions.\", \"name\": \"remove_consecutive_spaces\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The cleaned string with all consecutive spaces replaced by a single space.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Finds the closest entity from a list of entities to a given coordinate.\", \"name\": \"find_closest\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"coordinate\": {\"description\": \"A tuple of two integers representing the coordinate.\", \"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"entities\": {\"description\": \"A list of entities represented as tuples of two integers.\", \"items\": {\"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"entities\", \"coordinate\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Creates a new list with each element being the sum of the previous `k` elements.\", \"name\": \"rolling_sum\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"k\": {\"description\": \"The number of previous elements to sum.\", \"type\": \"integer\"}, \"n\": {\"description\": \"The size of the list.\", \"type\": \"integer\"}}, \"required\": [\"n\", \"k\"], \"type\": \"object\"}}, {\"description\": \"Validates an instance of a generic custom class `MyClass` that accepts a list of `int`s, floats, or a combination of both.\\nIf the instance is not valid, raises a `ValueError` exception with a meaningful error message.\", \"name\": \"validate_my_class\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"instance\": {\"description\": \"The instance to validate.\", \"items\": {\"type\": [\"integer\", \"number\"]}, \"type\": \"array\"}}, \"required\": [\"instance\"], \"type\": \"object\"}}, {\"description\": \"Returns the last occurrence of a substring in a given string.\", \"name\": \"last_occurrence\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The string in which to search for the substring.\", \"type\": \"string\"}, \"substring\": {\"description\": \"The substring to search for.\", \"type\": \"string\"}}, \"required\": [\"string\", \"substring\"], \"type\": \"object\"}}, {\"description\": \"Converts a given string to a new string where each lowercase character is replaced with the uppercase version of that character and each uppercase character is replaced with the lowercase version of that character.\", \"name\": \"opposite_case\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The converted string.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"object\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the total number of apples and oranges eaten in the first `num_days` days.\", \"name\": \"calculate_total_apples_oranges\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing the total number of apples and oranges.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"num_apples\": {\"description\": \"The number of apples eaten per day.\", \"type\": \"integer\"}, \"num_days\": {\"description\": \"The number of days.\", \"type\": \"integer\"}, \"num_oranges\": {\"description\": \"The number of oranges eaten per day.\", \"type\": \"integer\"}}, \"required\": [\"num_apples\", \"num_oranges\", \"num_days\"], \"type\": \"object\"}}, {\"description\": \"Extracts the content from a HTML string.\", \"name\": \"extract_content\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The content without the HTML tags.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"html\": {\"description\": \"The HTML string.\", \"type\": \"object\"}}, \"required\": [\"html\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 766,
    "text": "Example:\n\nInstruction:\nWhen x is multiplied by 3, the result is 18 more than the result of subtracting x from 70. What is the value of x?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 70, \"arg_1\": 18}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n22.0\n\nNow solve:\n3 years ago, Paula was 3 times as old as Karl. In 9 years, Paula will be twice as old as Karl. What is the sum of their ages now?\n\nUse this API documentation for reference: [{\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 767,
    "text": "Example:\n\nInstruction:\nGiven a string 's', replace all occurrences of 7 with 1 and then calculate the number of bytes needed to encode the resulting string as ASCII.\n\nUse this API documentation for reference: [{\"description\": \"Replaces certain text in a string with a given replacement string, but only if the text is surrounded by quotation marks.\", \"name\": \"replace_in_quotes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"replacement_text\": {\"description\": \"The replacement text. If not provided, the original text will be returned.\", \"nullable\": true, \"type\": \"string\"}, \"string\": {\"description\": \"The original string.\", \"type\": \"string\"}, \"text\": {\"description\": \"The text to find.\", \"type\": \"string\"}}, \"required\": [\"string\", \"text\"], \"type\": \"object\"}}, {\"description\": \"Transforms a list of dictionaries into a list of keys and a list of values.\", \"name\": \"transform_dict_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples containing the values corresponding to the keys in the input dictionaries.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"A list of dictionaries.\", \"items\": {\"additionalProperties\": {\"type\": \"string\"}, \"type\": \"object\"}, \"type\": \"array\"}, \"keys\": {\"description\": \"A list of keys.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"input_list\", \"keys\"], \"type\": \"object\"}}, {\"description\": \"Inverts a permutation of integers.\", \"name\": \"invert_permutation\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new array which inverts the permutation.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"permutation\": {\"description\": \"A permutation of integers from 0 to the length of the array minus 1.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"permutation\"], \"type\": \"object\"}}, {\"description\": \"Returns the input string if it is not empty, otherwise returns \\\"default\\\".\", \"name\": \"default_str\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"nullable\": true, \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Replaces all occurrences of 7 with 1 in a given string.\", \"name\": \"replace_seven\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input string with all occurrences of 7 replaced with 1.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Replaces all occurrences of {macro} in the string with the specified macro value.\\nIf a macro name is not found in the list, leave it as {macro} in the result.\", \"name\": \"macro_sub\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"macros\": {\"additionalProperties\": {}, \"description\": \"A dictionary of macro name, value pairs.\", \"type\": \"object\"}, \"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\", \"macros\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the number of bytes needed to encode a string as ASCII.\", \"name\": \"count_bytes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of bytes needed to encode the string as ASCII.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"object\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Parses a list of strings and creates a dictionary where each key is a key name and each value is the corresponding value.\", \"name\": \"parse_and_assign\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where each key is a key name and each value is the corresponding value.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"A list of strings of the form `key1:value1,key2:value2,key3:value3,\\u2026`.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"data\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Recursively traverses a file system directory and returns a list of all files, including their absolute paths.\", \"name\": \"list_all_files\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings representing the absolute paths of all files in the directory and its subdirectories.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"directory\": {\"description\": \"A string representing the directory path to traverse.\", \"type\": \"string\"}}, \"required\": [\"directory\"], \"type\": \"object\"}}, {\"description\": \"Replaces the substring \\\"route\\\" with \\\"path\\\" in the given error message.\", \"name\": \"replace_route_with_path\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new error message with \\\"route\\\" replaced with \\\"path\\\".\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"error_message\": {\"description\": \"The error message to modify.\", \"type\": \"object\"}}, \"required\": [\"error_message\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the Euclidean distance between two 1-dimensional vectors.\", \"name\": \"compute_vector_distance\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The Euclidean distance between the two vectors.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"vector1\": {\"description\": \"The first 1-dimensional vector.\", \"type\": \"object\"}, \"vector2\": {\"description\": \"The second 1-dimensional vector.\", \"type\": \"object\"}}, \"required\": [\"vector1\", \"vector2\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Extracts the second number from a string that contains two numbers separated by a space.\\nIf the pattern does not match, uses a fallback value of 0.\", \"name\": \"extract_second_number\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Chooses a random item from a list. If the input list is empty, returns None.\", \"name\": \"random_item\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The input list.\", \"items\": {\"nullable\": true, \"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"replace_seven\", \"arguments\": {\"input_string\": \"s\"}, \"label\": \"$var1\"}, {\"name\": \"count_bytes\", \"arguments\": {\"string\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n1\n\nNow solve:\nIn the manufacture of a certain product, 7 percent of the units produced are defective and 4 percent of the defective units are shipped for sale. What percent of the units produced are defective units that are shipped for sale?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 768,
    "text": "Example:\n\nInstruction:\nGiven a list of numbers [1, 2, 3, 4, 5], construct a string of numbers. Then, tokenize and capitalize the string.\n\nUse this API documentation for reference: [{\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Deletes all files with .tmp extensions in the given directory.\", \"name\": \"delete_temp_files\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"directory\": {\"description\": \"The directory to search for temporary files.\", \"type\": \"string\"}}, \"required\": [\"directory\"], \"type\": \"object\"}}, {\"description\": \"Converts a dictionary into a list of two-element tuples.\", \"name\": \"convert_dict_to_tuples\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of two-element tuples, where each tuple consists of a key from the dictionary and the corresponding value.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"my_dict\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"The dictionary to be converted.\", \"type\": \"object\"}}, \"required\": [\"my_dict\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the inverse logarithm value given a logarithm value and its base.\", \"name\": \"calculate_inverse_log\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The inverse logarithm value.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"base\": {\"description\": \"The base of the logarithm.\", \"type\": \"number\"}, \"log_val\": {\"description\": \"The logarithm value.\", \"type\": \"number\"}}, \"required\": [\"log_val\", \"base\"], \"type\": \"object\"}}, {\"description\": \"Parses line-delimited text into a list of dictionaries, where each dictionary maps each name in the first line to its value in the corresponding line.\", \"name\": \"parse_lines\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of dictionaries, where each dictionary maps each name in the first line to its value in the corresponding line.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The line-delimited text to be parsed.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Constructs a string of numbers from a list of numbers.\\n\\nFor each element in the list, adds \\\"n element x\\\" to the string, where `x` is replaced by the element and `n` is the index of the element plus one.\\nIf the list is empty, the function returns an empty string.\", \"name\": \"get_string_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}, {\"description\": \"Tokenizes a string into a list of words and capitalizes the first letter of each word.\", \"name\": \"tokenize_and_capitalize\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input string with the first letter of each word capitalized.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string to tokenize and capitalize.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Generates `n` samples from a probability distribution `p`.\", \"name\": \"sample_from_distribution\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The number of samples to generate.\", \"type\": \"integer\"}, \"p\": {\"description\": \"A probability distribution represented by a list of floats.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"n\", \"p\"], \"type\": \"object\"}}, {\"description\": \"Checks whether a given URL matches a specific pattern.\\n\\nThe URL pattern is a string containing a combination of alphanumeric characters, dots (.), hyphens (-), underscores (_), and asterisks (*). The asterisks are placeholders that match any number of characters.\", \"name\": \"match_url_pattern\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the URL matches the pattern, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"pattern\": {\"description\": \"The URL pattern to be matched.\", \"type\": \"string\"}, \"url\": {\"description\": \"The URL to be checked.\", \"type\": \"string\"}}, \"required\": [\"url\", \"pattern\"], \"type\": \"object\"}}, {\"description\": \"Parses a given terminal code and returns the associated string.\\nThe terminal code is represented by a series of 0s and 1s.\\nFor each 0, append the letter 'B' to the string. For each 1, append the letter 'A' to the string.\\nThe length of the terminal code is always a multiple of 4.\", \"name\": \"parse_terminal_code\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"terminal_code\": {\"description\": \"The terminal code to parse.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"terminal_code\"], \"type\": \"object\"}}, {\"description\": \"Checks if the keys and values in a mapping are valid.\", \"name\": \"validate_mapping\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the mapping is valid, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"mapping\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary with string keys and string values.\", \"type\": \"object\"}}, \"required\": [\"mapping\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Constructs and returns the full path of the file by joining `directory` and `file_name` with a separator.\\nIf the file does not exist, the function raises an `OSError` with a message \\\"File does not exist\\\".\", \"name\": \"full_path\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"directory\": {\"description\": \"The directory where the file is located.\", \"type\": [\"object\", \"string\"]}, \"file_name\": {\"description\": \"The name of the file.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"directory\", \"file_name\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Validates the header format of a text file containing a list of floating-point numbers.\", \"name\": \"validate_header\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the header format is valid, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"header\": {\"description\": \"The header string to validate.\", \"type\": \"string\"}}, \"required\": [\"header\"], \"type\": \"object\"}}, {\"description\": \"Converts a string into a JSON-like object.\", \"name\": \"convert_string_to_json\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary object representing the JSON-like object.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string to convert.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"get_string_numbers\", \"arguments\": {\"nums\": [1, 2, 3, 4, 5]}, \"label\": \"$var1\"}, {\"name\": \"tokenize_and_capitalize\", \"arguments\": {\"text\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n1 Element 1 2 Element 2 3 Element 3 4 Element 4 5 Element 5\n\nNow solve:\nA train is 435 meter long is running at a speed of 45 km/hour. In what time will it pass a bridge of 140 meter length\n\nUse this API documentation for reference: [{\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 769,
    "text": "Example:\n\nInstruction:\nIf 25^5 \u00d7 5^(-1) = (125)^x , then what is the value of x?\n\nUse this API documentation for reference: [{\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 5}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 3}}]\n\nGold Answer:\n3.0\n\nNow solve:\nIt costs $2 for the first 15 minutes to use the bumper cars at a fair ground. After the first 15 minutes it costs $6 per hour. If a certain customer uses the bumper cars for 3 hours and 25 minutes, how much will it cost him?\n\nUse this API documentation for reference: [{\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 770,
    "text": "Example:\n\nInstruction:\n{-10, -6, -5, -4, -2.5, -1, 0, 2.5, 4, 6, 7, 10}\nA number is to be selected at random from the set above. What is the probability that the number will be a solution to the equation (x-4)(x+9)(2X+5) = 0?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 6, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_1.result$\"}}]\n\nGold Answer:\n0.08333333333333333\n\nNow solve:\nTwo employees X and Y are paid a total of Rs. 440 per week by their employer. If X is paid 120 percent of the sum paid to Y, how much is Y paid per week?\n\nUse this API documentation for reference: [{\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 771,
    "text": "Example:\n\nInstruction:\nA train speeds past a pole in 10seconds and a platform 50 m long in 20 seconds. Its length is:\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 50, \"arg_1\": \"$var_1.result$\"}}]\n\nGold Answer:\n50.0\n\nNow solve:\nThe speed of a car increases by 2kms after every one hour. If the distance travelled in the first one hour was 35kms, what was the total distance travelled in 12 hours?\n\nUse this API documentation for reference: [{\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 772,
    "text": "Example:\n\nInstruction:\nGiven a string path \"My Path/To/Somewhere\", convert it to a URL-safe path and then split the resulting string into subarrays of size 3.\n\nUse this API documentation for reference: [{\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Pads an image with zeros on the left, top, right, and bottom.\\n\\nThe padding values are evenly distributed on both sides of the image.\", \"name\": \"image_padding\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"image\": {\"description\": \"A 2D NumPy array of shape (H, W) representing the image.\", \"type\": \"object\"}, \"padding\": {\"description\": \"The amount of padding to apply to the image.\", \"type\": \"integer\"}}, \"required\": [\"image\", \"padding\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Converts a string path to a URL-safe path.\\nRemoves all non-alphanumeric characters from the path, replaces spaces with underscores,\\nand converts the path to lowercase. Handles any potential errors gracefully.\", \"name\": \"convert_to_url_path\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The URL-safe path.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"path\": {\"description\": \"The string path to convert.\", \"nullable\": true, \"type\": \"string\"}}, \"required\": [\"path\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Checks if a given image's width and height are equal.\", \"name\": \"check_image_dimensions\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the width and height are equal, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"height\": {\"description\": \"The height of the image.\", \"type\": \"integer\"}, \"width\": {\"description\": \"The width of the image.\", \"type\": \"integer\"}}, \"required\": [\"width\", \"height\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Sum the values of a dictionary, but first validate that all the values in the dictionary are numbers.\", \"name\": \"sum_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {\"type\": \"number\"}, \"description\": \"A dictionary where the values are numbers.\", \"type\": \"object\"}}, \"required\": [\"dictionary\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Converts a list of integers into a string representing a space-separated sequence of those integers.\\nIf a file path is provided as an optional parameter, the function saves the string in that file.\\nIf the file path is not provided, the function returns the string.\", \"name\": \"integer_list_to_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The string representing the space-separated sequence of integers, or None if the file path is provided.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"An optional file path to save the string.\", \"nullable\": true, \"type\": \"string\"}, \"integer_list\": {\"description\": \"A list of integers to be converted into a string.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"integer_list\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Splits an array of numbers into subarrays of fixed size.\", \"name\": \"make_lists\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of subarrays, each with a maximum size of `size`.\\n    The last subarray can be shorter than `size`.\\n    If the original array is empty or `size` is negative,\\n    the function returns an empty list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"The array of numbers to split.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"size\": {\"description\": \"The maximum size of each subarray.\", \"type\": \"integer\"}}, \"required\": [\"numbers\", \"size\"], \"type\": \"object\"}}, {\"description\": \"Remaps the keys in a dictionary to match the column names in a given list.\", \"name\": \"remap_keys\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary with the keys remapped to the column names in `columns`.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"columns\": {\"description\": \"A list of column names.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"data\": {\"additionalProperties\": {\"items\": {}, \"type\": \"array\"}, \"description\": \"A dictionary where the keys are column names and the values are the corresponding data.\", \"type\": \"object\"}}, \"required\": [\"columns\", \"data\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"convert_to_url_path\", \"arguments\": {\"path\": \"My Path/To/Somewhere\"}, \"label\": \"$var1\"}, {\"name\": \"make_lists\", \"arguments\": {\"numbers\": \"$var1.output_0$\", \"size\": 3}, \"label\": \"$var2\"}]\n\nGold Answer:\n['my_', 'pat', 'hto', 'som', 'ewh', 'ere']\n\nNow solve:\nA student travels from his house to school at 10 km/hr and reaches school 1 hour late. The next day he travels 12 km/hr and reaches school 1 hour early. What is the distance between his house and the school?\n\nUse this API documentation for reference: [{\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 773,
    "text": "Example:\n\nInstruction:\nEscape the Markdown special characters in the string \"Hello, *World*!\". Then, check whether the resulting string is a PDF file or not.\n\nUse this API documentation for reference: [{\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Checks whether a given filename is a PDF file or not.\", \"name\": \"is_pdf_file\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing a boolean indicating whether the file is a PDF and the name of the file without the extension.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The name of the file.\", \"type\": \"string\"}}, \"required\": [\"filename\"], \"type\": \"object\"}}, {\"description\": \"Quantizes a tensor of floating-point values to 8-bit integers.\", \"name\": \"quantize_tensor\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"q\": {\"description\": \"The quantization parameter.\", \"type\": \"number\"}, \"tensor\": {\"description\": \"The input tensor of floating-point values.\", \"type\": \"object\"}}, \"required\": [\"tensor\", \"q\"], \"type\": \"object\"}}, {\"description\": \"Calculates the number of key-value pairs in a dictionary.\", \"name\": \"dict_length\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of key-value pairs in the dictionary, or None if the input is not a dictionary.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"dict_input\": {\"additionalProperties\": {}, \"description\": \"The dictionary to calculate the length of.\", \"type\": \"object\"}}, \"required\": [\"dict_input\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"An event-driven echo service that accepts an input string and returns the string after an artificial delay.\", \"name\": \"echo_event\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The echoed string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"delay\": {\"description\": \"The artificial delay in seconds.\", \"type\": \"integer\"}, \"input_string\": {\"description\": \"The input string to be echoed.\", \"type\": \"string\"}}, \"required\": [\"input_string\", \"delay\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Escapes all Markdown special characters in a given text.\", \"name\": \"escape_markdown\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The escaped text.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input text.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Creates a dictionary that maps each unique string to a list of its indices in the input list.\", \"name\": \"string_index_map\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary that maps each unique string to a list of its indices in the input list.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"strings\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"strings\"], \"type\": \"object\"}}, {\"description\": \"Scans the entire file system starting from the root path for a file with a given name.\\nIf found, returns the full path to the file. If not found, returns None.\", \"name\": \"find_from_root\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"file_name\": {\"description\": \"The name of the file to search for.\", \"type\": \"string\"}, \"root_path\": {\"description\": \"The root path to start the search from.\", \"type\": \"string\"}}, \"required\": [\"root_path\", \"file_name\"], \"type\": \"object\"}}, {\"description\": \"Performs a step-by-step replacement of keys in `mapping` in the order of their lengths.\", \"name\": \"parse_and_replace\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"mapping\": {\"description\": \"A dictionary containing the keys to replace and their corresponding values.\", \"type\": \"object\"}, \"text\": {\"description\": \"The input string to perform the replacements on.\", \"type\": \"string\"}}, \"required\": [\"text\", \"mapping\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Replaces a line that matches the regular expression `pattern` in the given `text` with the replacement `repl`.\", \"name\": \"replace_line_with_pattern\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The modified `text` as a string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"pattern\": {\"description\": \"The regular expression pattern to search for.\", \"type\": \"string\"}, \"repl\": {\"description\": \"The replacement string.\", \"type\": \"string\"}, \"text\": {\"description\": \"The input text.\", \"type\": \"string\"}}, \"required\": [\"text\", \"pattern\", \"repl\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"escape_markdown\", \"arguments\": {\"text\": \"Hello, *World*!\"}, \"label\": \"$var1\"}, {\"name\": \"is_pdf_file\", \"arguments\": {\"filename\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n[False, 'Hello, \\\\*World\\\\*!']\n\nNow solve:\nA reduction of 10% in the price of tea enables a dealer to purchase 25 kg more tea for Rs. 22500. What is the reduced price per kg of tea?\n\nUse this API documentation for reference: [{\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 774,
    "text": "Example:\n\nInstruction:\nIf P is a prime number greater than 3, find the remainder when P^2 + 14 is divided by 12.\n\nUse this API documentation for reference: [{\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 4}}, {\"name\": \"power\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 14, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 12, \"arg_1\": 3}}, {\"name\": \"subtract\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_4.result$\"}}]\n\nGold Answer:\n3.0\n\nNow solve:\nCreate a 3x3 identity matrix, then find the maximum value for each row in the matrix.\n\nUse this API documentation for reference: [{\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Creates a square matrix of the given size, where each element on the main diagonal is 1, and all other elements are 0.\", \"name\": \"create_identity_matrix\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of lists, where each sublist represents a row of the matrix.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"size\": {\"description\": \"The size of the matrix.\", \"type\": \"integer\"}}, \"required\": [\"size\"], \"type\": \"object\"}}, {\"description\": \"Validates and corrects a time string in 24-hour format.\", \"name\": \"validate_and_correct_time\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The corrected time string with leading zeroes.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"time_string\": {\"description\": \"A string representing a time value in 24-hour format, e.g., \\\"19:35\\\" or \\\"23:59\\\".\", \"type\": \"string\"}}, \"required\": [\"time_string\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Checks whether the command line argument starts with `python`.\\nIf it does, prints a message and returns `True`; otherwise, prints a different message and returns `False`.\\nIf no command line arguments are provided, raises an exception.\", \"name\": \"check_command_args\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Concatenates two numpy 2D arrays along the second axis and returns a numpy 3D array.\", \"name\": \"concatenate_arrays\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"A numpy 2D array of shape (N, M).\", \"type\": \"object\"}, \"y\": {\"description\": \"A numpy 2D array of shape (N, K).\", \"type\": \"object\"}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Expands the tilde \\\"~\\\" in a file path to the current user's home directory.\\nReturns the expanded path if the path contains a tilde, otherwise returns the path as-is.\", \"name\": \"expand_tilde\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"path\": {\"description\": \"The file path to be expanded.\", \"type\": \"string\"}}, \"required\": [\"path\"], \"type\": \"object\"}}, {\"description\": \"Validates task objects to ensure they have valid values for their task_id, name, and description attributes.\", \"name\": \"validate_task_objects\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if all objects in the list have valid values for their task_id, name, and description attributes. False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"objects\": {\"description\": \"A list of task objects to validate.\", \"items\": {}, \"type\": \"array\"}}, \"required\": [\"objects\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Normalizes and rescales a time series dataset.\", \"name\": \"normalize_and_rescale\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"dataset\": {\"description\": \"A pandas DataFrame containing columns 'Time', 'Value', and 'Diff'.\", \"type\": \"object\"}}, \"required\": [\"dataset\"], \"type\": \"object\"}}, {\"description\": \"Creates a function that takes a number and returns the sum of all numbers in the list plus the input number.\", \"name\": \"make_adder\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A function that takes a number and returns the sum of all numbers in the list plus the input number.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Finds the maximum value for each row in a 2D array.\", \"name\": \"find_max_for_each_row\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A 1D array with dimensions m x 1, where each element is the maximum value of the corresponding row in the input array.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"A\": {\"description\": \"A 2D array with dimensions m x n.\", \"items\": {\"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"A\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 775,
    "text": "Example:\n\nInstruction:\nA student chose a number, multiplied it by 3, then subtracted 138 from the result and got 102. What was the number he chose?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 102, \"arg_1\": 138}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 3}}]\n\nGold Answer:\n80.0\n\nNow solve:\nOut of 400 students of a school, 325 play football, 175 play cricket and 50 neither play football nor cricket. How many students play both football and cricket ?\n\nUse this API documentation for reference: [{\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 776,
    "text": "Example:\n\nInstruction:\nThe sum of the fourth and twelfth term of an arithmetic progression is 20. What is the sum of the first 16 terms of the arithmetic progression?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 20, \"arg_1\": 16}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}]\n\nGold Answer:\n160.0\n\nNow solve:\nAdd the suffix '_edited' to the filename 'image.jpg'. Then, align the resulting filename to the left within a string of length 20.\n\nUse this API documentation for reference: [{\"description\": \"Determines if any two rows are equal in a PyTorch tensor.\", \"name\": \"any_rows_equal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if any two rows are equal, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"tensor\": {\"description\": \"A PyTorch tensor of shape `(n, 2)`.\", \"type\": \"object\"}}, \"required\": [\"tensor\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Creates a new dictionary with the same keys as the input dictionary, but with only non-null values.\", \"name\": \"filter_out_missing_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new dictionary with the same keys as the input dictionary, but with only non-null values.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"dict_\": {\"additionalProperties\": {\"type\": \"object\"}, \"description\": \"The input dictionary.\", \"type\": \"object\"}}, \"required\": [\"dict_\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Filters out multiples of 5 from a list of integers.\", \"name\": \"filter_multiples_of_5\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of integers that are not multiples of 5.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}, {\"description\": \"Converts a string of hexadecimal values to the corresponding byte array.\", \"name\": \"hex_to_bytes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"hex_str\": {\"description\": \"A string of hexadecimal values. The input string is guaranteed to be of even length.\", \"type\": \"string\"}}, \"required\": [\"hex_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Adds a suffix to a filename before the extension.\", \"name\": \"add_suffix_to_filename\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The filename with the suffix added before the extension.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The filename to add the suffix to.\", \"nullable\": true, \"type\": \"string\"}, \"suffix\": {\"description\": \"The suffix to add to the filename.\", \"type\": \"string\"}}, \"required\": [\"filename\", \"suffix\"], \"type\": \"object\"}}, {\"description\": \"Aligns a string `s` to the left within a string of length `length`.\\nIf the original string is longer than `length`, it will be truncated from the right.\\nIf the original string is shorter than `length`, spaces will be added to the right.\", \"name\": \"align_left\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"length\": {\"description\": \"The desired length of the string. Must be a nonnegative integer.\", \"type\": [\"integer\", \"number\"]}, \"s\": {\"description\": \"The string to be aligned.\", \"type\": \"string\"}}, \"required\": [\"s\", \"length\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Generates a template tag function that takes a template string and a set of values.\\nThe function returns a string with the values substituted into the template string.\", \"name\": \"template_tag\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"template_string\": {\"description\": \"The template string with placeholders.\", \"type\": \"string\"}, \"values\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary containing the values to substitute into the template string.\", \"type\": \"object\"}}, \"required\": [\"template_string\", \"values\"], \"type\": \"object\"}}, {\"description\": \"Converts a continuous value into a discrete index based on a list of index bounds.\", \"name\": \"convert_to_discrete\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The index of the discrete range that the continuous value falls into, or `None` if the value falls outside of all bounds.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"continuous_value\": {\"description\": \"The continuous value to convert.\", \"type\": \"number\"}, \"index_bounds\": {\"description\": \"A list of tuples representing the lower and upper bounds of each discrete range.\", \"items\": {\"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"continuous_value\", \"index_bounds\"], \"type\": \"object\"}}, {\"description\": \"Creates a 2D matrix of size rows x cols filled with zeros.\", \"name\": \"create_grid\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"cols\": {\"description\": \"The number of columns in the matrix.\", \"type\": \"integer\"}, \"rows\": {\"description\": \"The number of rows in the matrix.\", \"type\": \"integer\"}}, \"required\": [\"rows\", \"cols\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 777,
    "text": "Example:\n\nInstruction:\n4 shepherds were watching over the flocks and they were commenting on how many sheep they each had. If ram had 3 more sheep than he would have one less than rahul. wheras akar has the same number as the other 3 shepherds put togeher. If john had 3 less sheep he would have exactly trile the number of ram. If they were evenly distributed if they would each have 11 seep how many sheep did ram have?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 11, \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 3}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_4.result$\"}}]\n\nGold Answer:\n3.0\n\nNow solve:\nCalculate the factorial of 5 using tail recursion, then calculate the label given the factorial value and a threshold of 100.\n\nUse this API documentation for reference: [{\"description\": \"Calculates a value based on the input x.\", \"name\": \"new_foo\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The input value.\", \"type\": \"integer\"}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates a label given a value and a threshold.\", \"name\": \"calculate_label\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"threshold\": {\"description\": \"The threshold value.\", \"type\": [\"integer\", \"number\"]}, \"value\": {\"description\": \"The value to compare with the threshold.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"value\", \"threshold\"], \"type\": \"object\"}}, {\"description\": \"Returns the index of the first non-matching character between two strings.\\nIf the strings are identical, returns -1.\", \"name\": \"first_non_matching_index\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"string1\": {\"description\": \"The first string.\", \"type\": \"string\"}, \"string2\": {\"description\": \"The second string.\", \"type\": \"string\"}}, \"required\": [\"string1\", \"string2\"], \"type\": \"object\"}}, {\"description\": \"Computes the mean of each row in a 2D array with a given shape.\", \"name\": \"compute_mean_of_rows\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A 1D array of the same length, where each element is the average value of the corresponding row in the input array.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"array_2d\": {\"description\": \"The input 2D array.\", \"type\": \"object\"}}, \"required\": [\"array_2d\"], \"type\": \"object\"}}, {\"description\": \"Converts a timecode to the equivalent frame number given a frame rate.\", \"name\": \"timecode_to_frame_number\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The total frame number.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"frame_rate\": {\"description\": \"The frame rate.\", \"type\": \"number\"}, \"timecode\": {\"description\": \"The timecode in the format `HH:MM:SS:FF`.\", \"type\": \"string\"}}, \"required\": [\"timecode\", \"frame_rate\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Reads the first line of a text file.\", \"name\": \"get_first_line_of_text_file_with_error_handling\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The first line of the file, or a string indicating that the file could not be read.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the file.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Finds the common values between two dictionaries.\", \"name\": \"common_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of values from the first dictionary whose keys are also present in the second dictionary.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"dict1\": {\"additionalProperties\": {\"type\": \"object\"}, \"description\": \"The first dictionary.\", \"type\": \"object\"}, \"dict2\": {\"additionalProperties\": {\"type\": \"object\"}, \"description\": \"The second dictionary.\", \"type\": \"object\"}}, \"required\": [\"dict1\", \"dict2\"], \"type\": \"object\"}}, {\"description\": \"Reverses the order of the top-level keys in a dictionary, and maintains the order of the nested dictionaries.\", \"name\": \"reverse_keys\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary with the top-level keys in reversed order.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"input_dict\": {\"additionalProperties\": {}, \"description\": \"The dictionary to reverse the order of the top-level keys.\", \"type\": \"object\"}}, \"required\": [\"input_dict\"], \"type\": \"object\"}}, {\"description\": \"Computes the factorial of a non-negative integer using tail recursion.\", \"name\": \"tail_recur\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The non-negative integer to compute the factorial of.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Creates a prompt string by concatenating the name and prompt, adding a colon after the name, and adding a space between the name and prompt.\", \"name\": \"create_prompt\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"name\": {\"description\": \"The name of a person.\", \"type\": \"string\"}, \"prompt\": {\"description\": \"A message to be displayed to the user.\", \"type\": \"string\"}}, \"required\": [\"name\", \"prompt\"], \"type\": \"object\"}}, {\"description\": \"Creates a list of dictionaries from two input lists.\\nEach dictionary corresponds to an item in the two input lists,\\nwith the key of the dictionary being the value from the first list\\nand the value being the value from the second list.\", \"name\": \"dict_zip\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"list1\": {\"description\": \"The first input list.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"list2\": {\"description\": \"The second input list.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"list1\", \"list2\"], \"type\": \"object\"}}, {\"description\": \"Serializes a list of Employee objects into a JSON-formatted string.\", \"name\": \"serialize_employees_to_json\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A JSON-formatted string representing the list of Employee objects.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"employees\": {\"description\": \"A list of Employee objects.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"employees\"], \"type\": \"object\"}}, {\"description\": \"Returns a string representation of the object.\", \"name\": \"copy_object\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The object to be copied.\"}}, \"required\": [\"obj\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 778,
    "text": "Example:\n\nInstruction:\nIncome and expenditure of a person are in the ratio 5 : 4. If the income of the person is Rs. 14000, then find his savings?\n\nUse this API documentation for reference: [{\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 5}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 14000}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 14000, \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n2800.0\n\nNow solve:\nI have two vectors [1, 2, 3] and [4, 5, 6]. I want to calculate the dot product of these two vectors. Then, I want to check if the result is positive.\n\nUse this API documentation for reference: [{\"description\": \"Determines if a sliding puzzle is solvable given a 2-D grid.\", \"name\": \"is_solvable\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the puzzle is solvable, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"grid\": {\"description\": \"A 2-D grid representing the sliding puzzle.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"grid\"], \"type\": \"object\"}}, {\"description\": \"Calculates the dot product of two vectors.\", \"name\": \"calc_dot_product\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first vector.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"b\": {\"description\": \"The second vector.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Checks if a number is negative.\", \"name\": \"is_negative\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the number is negative, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The number to check.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Converts a list of strings into a dictionary.\", \"name\": \"convert_str_to_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"default_value\": {\"description\": \"An optional default value to use when the key-value pair in the string is missing.\", \"nullable\": true, \"type\": [\"integer\", \"number\", \"string\"]}, \"str_list\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"str_list\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the percentage grade based on the given score.\", \"name\": \"percentage_grade\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string representing the percentage grade.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"score\": {\"description\": \"The score to calculate the percentage grade for.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"score\"], \"type\": \"object\"}}, {\"description\": \"Checks if the class attributes match the key-value pairs in the list.\", \"name\": \"check_class_attributes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if all the attributes match and False if any attribute does not match.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"attr_list\": {\"description\": \"A list of two-element tuples containing attribute names and expected values.\", \"items\": {\"prefixItems\": [{\"type\": \"string\"}, {}], \"type\": \"array\"}, \"type\": \"array\"}, \"cls\": {\"description\": \"The class object.\"}}, \"required\": [\"cls\", \"attr_list\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Checks if a number is positive.\", \"name\": \"is_positive\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the number is positive, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"num\": {\"description\": \"The number to check.\", \"type\": \"integer\"}}, \"required\": [\"num\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Returns a dictionary of valid usernames and their corresponding user objects.\\n\\nValid usernames are those with a non-zero ID and a non-empty name field.\", \"name\": \"get_valid_usernames\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of valid usernames and their corresponding user objects.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"users\": {\"description\": \"A list of user objects.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"users\"], \"type\": \"object\"}}, {\"description\": \"Generates a random color in RGB format.\", \"name\": \"random_color\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple of three integers representing the red, green, and blue (RGB) components of the color.\\n    Each component is an integer ranging from 0 to 255.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Strips all non-alphanumeric characters from a string and replaces consecutive whitespace characters with a single space.\", \"name\": \"strip_non_alphanumeric\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The processed string.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"object\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Generates a random ID of the specified number of digits.\", \"name\": \"make_random_id\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string representing the random ID.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"num_digits\": {\"description\": \"The number of digits in the ID. Default is 5.\", \"type\": \"integer\"}}, \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Creates a map that associates each argument with a value, where the value is an increasing index starting from 0.\\nThe function uses the argument name as the key in the map.\", \"name\": \"create_map_from_args\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary representing the arguments and their values.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"kwargs\": {\"description\": \"Arbitrary keyword arguments.\", \"type\": \"integer\"}}, \"required\": [\"kwargs\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 779,
    "text": "Example:\n\nInstruction:\nThere are two groups of students in the sixth grade. There are 45 students in group A, and 55 students in group B. If, on a particular day, 20% of the students in group A forget their homework, and 40% of the students in group B forget their homework, then what percentage of the sixth graders forgot their homework?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 45, \"arg_1\": 20}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 55, \"arg_1\": 40}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 100}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"add\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 45, \"arg_1\": 55}}, {\"name\": \"divide\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": \"$var_6.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_7.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n31.0\n\nNow solve:\nIf (A-B-C+D = 18) and (A+B-C-D = 4), what is the value of (B-D)^2?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 780,
    "text": "Example:\n\nInstruction:\nIn a can, there is a mixture of milk and water in the ratio 3:2. If the can is filled with an additional 6 liters of milk, the can would be full and the ratio of milk and water would become 2:1. Find the capacity of the can?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 6}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 3}}, {\"name\": \"subtract\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 3}}, {\"name\": \"add\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": 6}}, {\"name\": \"multiply\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 6}}, {\"name\": \"multiply\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 3}}, {\"name\": \"subtract\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": \"$var_9.result$\", \"arg_1\": \"$var_10.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_12\", \"arguments\": {\"arg_0\": \"$var_8.result$\", \"arg_1\": \"$var_11.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_13\", \"arguments\": {\"arg_0\": \"$var_12.result$\", \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_14\", \"arguments\": {\"arg_0\": \"$var_7.result$\", \"arg_1\": \"$var_13.result$\"}}]\n\nGold Answer:\n36.0\n\nNow solve:\nThe length of the bridge, which a train 130 metres long and travelling at 36 km/hr can cross in 45 seconds, is:\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 781,
    "text": "Example:\n\nInstruction:\nThe average height of 30 students in a class was calculated as 177 cm. It has later found that the height of one of the students in the class was incorrectly written as 151 cm whereas the actual height was 106 cm. What was the actual average height of the students in the class?\n\nUse this API documentation for reference: [{\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 30, \"arg_1\": 177}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 151, \"arg_1\": 106}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 30}}]\n\nGold Answer:\n175.5\n\nNow solve:\nFor a certain exam,a score of 58 was 2 standard deviations below mean and a score of 98 was 3 standard deviations above mean.What was the mean score W for the exam?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 782,
    "text": "Example:\n\nInstruction:\nThe length of a rectangle is two - seventh of the radius of a circle. The radius of the circle is equal to the side of the square, whose area is 5929 sq.units. What is the area (in sq.units) of the rectangle if the rectangle if the breadth is 25 units?\n\nUse this API documentation for reference: [{\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"sqrt\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 5929}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 4}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 2, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"rectangle_area\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 25, \"arg_1\": \"$var_4.result$\"}}]\n\nGold Answer:\n550.0\n\nNow solve:\nA truck covers a distance of 288 km at a certain speed in 8 hours. How much time would a car take at an average speed which is 18 kmph more than that of the speed of the truck to cover a distance which is 90 km more than that travelled by the truck ?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 783,
    "text": "Example:\n\nInstruction:\nGiven a list of strings ['apple', 'banana', 'cherry', 'date', 'elderberry'], find the longest string. Then, convert the longest string into a sentence using the string_to_sentence function.\n\nUse this API documentation for reference: [{\"description\": \"Extracts the first number from a string, including numbers with decimal points, and converts it to a float data type.\\nThe function handles both cases when the number is enclosed in parentheses and when the number is not enclosed in parentheses.\\nIf the number is not present in the string, the function returns None.\", \"name\": \"extract_first_number\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The first number found in the string as a float, or None if no number is found.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"my_string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"my_string\"], \"type\": \"object\"}}, {\"description\": \"Extracts the `atemp` column from a Pandas DataFrame `weather_df` and returns the values as a list of floats.\", \"name\": \"get_atemp_from_weather_df\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the `atemp` column values.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"weather_df\": {\"description\": \"The input DataFrame containing the `atemp` column.\", \"type\": \"object\"}}, \"required\": [\"weather_df\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of unique tag names sorted in alphabetical order.\", \"name\": \"get_unique_tag_names\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of unique tag names sorted in alphabetical order.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"tags\": {\"description\": \"A list of tags, each of which has a `.name` attribute.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"tags\"], \"type\": \"object\"}}, {\"description\": \"Splits a given string into a list of words, where each word in the list is separated by a space.\\nCapitalizes the first letter of each word, removes all leading and trailing spaces, and removes any consecutive spaces and replaces them with a single space.\", \"name\": \"split_and_format_words\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of formatted words.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string to be split and formatted.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Finds the indices of strings in a list that contain a given substring.\", \"name\": \"find_strings_with_pattern\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of indices of the strings in the input list that contain the pattern as a substring.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"pattern\": {\"description\": \"The substring pattern to search for in the strings.\", \"type\": \"string\"}, \"string_list\": {\"description\": \"A list of strings to search for the pattern.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"string_list\", \"pattern\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Computes `a // b` without using division or floating-point operations.\", \"name\": \"divide_without_div\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The integer part of the quotient.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The numerator.\", \"type\": \"integer\"}, \"b\": {\"description\": \"The denominator.\", \"type\": \"integer\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Converts a string into a sentence. The function capitalizes the first letter, lowercases all subsequent letters, and adds a period at the end. It also validates its input: the function exits the program and prints an error message if the input string is less than 5 characters long.\", \"name\": \"string_to_sentence\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Scales a list of numbers linearly by a given scale value.\", \"name\": \"scale_linearly\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The list of numbers to be scaled.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"scale\": {\"description\": \"The scale value by which each number in the list is multiplied.\", \"type\": \"number\"}}, \"required\": [\"lst\", \"scale\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Adds a new column named \\\"color_code\\\" to the data frame based on the deal amount.\", \"name\": \"add_color_code\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input data frame with an additional column \\\"color_code\\\".\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"df\": {\"description\": \"The input data frame containing columns for acquirer, target, deal amount, and deal date.\", \"type\": \"object\"}}, \"required\": [\"df\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Checks if a string contains the \\\"1\\\" character.\", \"name\": \"string_contains_one\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The string to check.\", \"type\": \"object\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Selects the longest string from a list of strings.\", \"name\": \"select_longest_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The longest string from the list.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"strings\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"strings\"], \"type\": \"object\"}}, {\"description\": \"Check if a third-party Python package is installed.\", \"name\": \"is_package_installed\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the package is installed, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"package_name\": {\"description\": \"The name of the package to check.\", \"type\": \"string\"}}, \"required\": [\"package_name\"], \"type\": \"object\"}}, {\"description\": \"Retrieves the \\\"updated_at\\\" value from a data structure that allows attribute access.\\nIf the \\\"updated_at\\\" attribute does not exist, defaults to a static value of \\\"1970-01-01T00:00:00Z\\\".\", \"name\": \"retrieve_updated_at\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The \\\"updated_at\\\" value or the default value if it does not exist.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"The data structure that supports attribute access.\"}}, \"required\": [\"data\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"select_longest_string\", \"arguments\": {\"strings\": [\"apple\", \"banana\", \"cherry\", \"date\", \"elderberry\"]}, \"label\": \"$var1\"}, {\"name\": \"string_to_sentence\", \"arguments\": {\"string\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\nElderberry.\n\nNow solve:\nWhat is the smallest integer E greater than 1 that leaves a remainder of 1 when divided by any of the integers 6, 8, and 10?\n\nUse this API documentation for reference: [{\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 784,
    "text": "Example:\n\nInstruction:\nWhat is the greatest of 3 consecutive integers whose sum is 30 ?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 30, \"arg_1\": 3}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 3}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 2}}]\n\nGold Answer:\n11.0\n\nNow solve:\nIn a particular state, 60% of the counties received some rain on Monday, and 65% of the counties received some rain on Tuesday. No rain fell either day in 25% of the counties in the state. What percent of the counties received some rain on Monday and Tuesday?\n\nUse this API documentation for reference: [{\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 785,
    "text": "Example:\n\nInstruction:\nRunning at the same constant rate, 6 identical machines can produce a total of 270 pens per minute. At this rate, how many pens could 10 such machines produce in 4 minutes?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 270, \"arg_1\": 6}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 4}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 10}}]\n\nGold Answer:\n1800.0\n\nNow solve:\nSonika deposited Rs.7000 which amounted to Rs.9200 after 3 years at simple interest. Had the interest been 2% more. She would get how much?\n\nUse this API documentation for reference: [{\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 786,
    "text": "Example:\n\nInstruction:\nGiven a list of numbers [1, 2, 3, 4, 5], shift the first 3 elements to the end of the list, then calculate the sum of every other element in the resulting list.\n\nUse this API documentation for reference: [{\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of every other element in a list of numbers.\", \"name\": \"sum_every_other\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}, {\"description\": \"Returns the list of prime numbers that factorizes a given positive integer.\", \"name\": \"factorize\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The positive integer to be factorized.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Shifts the first n elements of a list to the end of the list.\", \"name\": \"shift_elements\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The input list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"n\": {\"description\": \"The number of elements to shift to the end of the list.\", \"type\": \"integer\"}}, \"required\": [\"lst\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Extracts the content of a tree in a list format using preorder traversal.\", \"name\": \"extract_tree_content\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list containing the content of the tree in preorder traversal.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"tree\": {\"additionalProperties\": {}, \"description\": \"A dictionary representing the tree structure.\", \"type\": \"object\"}}, \"required\": [\"tree\"], \"type\": \"object\"}}, {\"description\": \"Returns the category of a given error code.\", \"name\": \"get_error_category\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The category of the error code, or None if the error code is invalid.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"error_code\": {\"description\": \"The error code to get the category for.\", \"type\": [\"integer\", \"string\"]}}, \"required\": [\"error_code\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Extracts the value of a specific XML attribute (`genre`) from a list of elements (`entries`).\\nIf the element does not contain the attribute, uses a default value of \\\"None\\\".\", \"name\": \"get_genre\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of genre values.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"entries\": {\"description\": \"A list of XML elements.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"entries\"], \"type\": \"object\"}}, {\"description\": \"Counts the number of times a DNA sequence pattern appears in a FASTA file.\", \"name\": \"count_pattern_in_fasta\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of times the pattern appears in the sequences in the file.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"fasta_file\": {\"description\": \"A file containing DNA sequences in the FASTA format.\", \"type\": \"object\"}, \"pattern\": {\"description\": \"The DNA sequence pattern to search for.\", \"type\": \"string\"}}, \"required\": [\"fasta_file\", \"pattern\"], \"type\": \"object\"}}, {\"description\": \"Appends a list to itself twice in-place.\", \"name\": \"stack_app\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"L\": {\"description\": \"The list to be appended.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"L\"], \"type\": \"object\"}}, {\"description\": \"Generates a list of random passwords.\", \"name\": \"generate_passwords\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of random passwords.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"num_characters\": {\"description\": \"The number of characters in each password.\", \"type\": \"integer\"}, \"num_passwords\": {\"description\": \"The total number of passwords to generate.\", \"type\": \"integer\"}}, \"required\": [\"num_characters\", \"num_passwords\"], \"type\": \"object\"}}, {\"description\": \"Checks if a given string is a valid CSS keyword.\", \"name\": \"is_valid_css_keyword\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the keyword is valid, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"keyword\": {\"description\": \"The string to check.\", \"type\": \"string\"}}, \"required\": [\"keyword\"], \"type\": \"object\"}}, {\"description\": \"Removes linebreaks from a given string except for the last line.\", \"name\": \"remove_linebreaks\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Generates a palette of colors for a given theme with a specific hue and a set of shades.\", \"name\": \"generate_palette\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"hue\": {\"description\": \"The hue value in the range of 0 to 360.\", \"type\": \"integer\"}, \"shades\": {\"description\": \"A set of shades such as \\\"light\\\", \\\"medium\\\", \\\"dark\\\", or \\\"very dark\\\".\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"hue\", \"shades\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"shift_elements\", \"arguments\": {\"lst\": [1, 2, 3, 4, 5], \"n\": 3}, \"label\": \"$var1\"}, {\"name\": \"sum_every_other\", \"arguments\": {\"nums\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n8\n\nNow solve:\nI want to create a list of even numbers from 0 to 10, compute the square roots of all positive numbers in the list, and format the resulting list as a C++ initializer list.\n\nUse this API documentation for reference: [{\"description\": \"Formats a list of integers as a C++ initializer list.\", \"name\": \"format_initializer_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string representation of the formatted list.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"A function that does nothing and always returns None.\", \"name\": \"dummy\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"arg1\": {\"description\": \"Any type of argument.\"}, \"arg2\": {\"description\": \"Any type of argument.\"}, \"arg3\": {\"description\": \"Any type of argument.\"}}, \"required\": [\"arg1\", \"arg2\", \"arg3\"], \"type\": \"object\"}}, {\"description\": \"Returns the n-th term of the Pascal's triangle.\", \"name\": \"pascals_triangle\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A 2D list of integers, where each sublist represents a row.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The term number.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Gets the most frequent `k` words from a dictionary mapping words to their frequency of occurrence.\", \"name\": \"get_most_frequent\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"k\": {\"description\": \"The number of most frequent words to return.\", \"type\": \"integer\"}, \"word_freq\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"A dictionary mapping words to their frequency of occurrence.\", \"type\": \"object\"}}, \"required\": [\"word_freq\", \"k\"], \"type\": \"object\"}}, {\"description\": \"Finds the first string that starts with an uppercase 'A' in a given list of strings.\", \"name\": \"find_first_string_starting_with_A\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The first string that starts with an uppercase 'A', or an empty string if no such string exists.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"strings\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"strings\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Splits a list of integers into two lists, one containing all the positive integers and the other containing all the negative integers.\", \"name\": \"split_positive_and_negative\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of two lists, the first one containing all the positive integers and the second one containing all the negative integers.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}, {\"description\": \"Creates a list of even numbers from 0 to n.\", \"name\": \"create_list_of_even_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The upper limit of the range of even numbers.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Simplifies a conditional expression.\", \"name\": \"simplify_conditional_expression\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The simplified expression.\", \"type\": [\"boolean\", \"string\"]}}}, \"parameters\": {\"properties\": {\"exp\": {\"description\": \"A string consisting of one or more conditional operations (a ? b : c) with the following format: - a is a boolean expression - b is a boolean expression - c is a boolean expression\", \"type\": \"string\"}}, \"required\": [\"exp\"], \"type\": \"object\"}}, {\"description\": \"Computes the square roots of all positive numbers in the input list.\", \"name\": \"compute_square_roots\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of square roots of positive numbers in the input list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list containing only the letters of the original string.\", \"name\": \"get_letters\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list containing only the letters of the original string.\\n    If the input is not a valid string, an empty list is returned.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of two numbers if they are valid numbers.\", \"name\": \"check_input_and_sum\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The sum of the two numbers if they are valid numbers, otherwise an error message.\", \"type\": [\"integer\", \"number\", \"string\"]}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first number.\", \"type\": [\"integer\", \"number\"]}, \"b\": {\"description\": \"The second number.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 787,
    "text": "Example:\n\nInstruction:\nI have a list of strings ['apple', 'banana', 'cherry']. I want to replace `_` with `-` and vice versa in the list. Then, I want to find the first index at which the string 'banana' appears in the modified list.\n\nUse this API documentation for reference: [{\"description\": \"Creates a byte array of `n` bytes using a specific padding scheme.\\n\\nThe padding scheme is as follows:\\n- The first byte should be `0x00`.\\n- The second byte should be `0x01`.\\n- The third byte should be `0x02`, and so on until the `n-1` byte, where `n-1` is the last byte.\\n- The padding should be repeated until the byte array has a length of `n` bytes.\", \"name\": \"generate_padding\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The final byte array.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The length of the byte array to generate.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Recursively traverses a directory tree starting from the given path and returns a list of file names that match the given extension.\", \"name\": \"get_file_names_with_ext\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of file names that match the given extension.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"ext\": {\"description\": \"The file extension to match.\", \"type\": \"string\"}, \"path\": {\"description\": \"The directory path to start traversing.\", \"type\": \"string\"}}, \"required\": [\"path\", \"ext\"], \"type\": \"object\"}}, {\"description\": \"Replaces `_` with `-` and vice versa in a list of strings.\\n\\nIf a string is already separated by `_` or `-`, then the function removes the separators and returns the string as is.\", \"name\": \"replace_separators\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings with `_` replaced with `-` and vice versa.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"input_list\"], \"type\": \"object\"}}, {\"description\": \"Generates an n x n list of lists, where each element in the outer list is a list of n numbers that sum to n.\", \"name\": \"list_of_lists\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of lists of size n x n, where each element of the outer list is a list of n integers that sum to n.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The size of the n x n list of lists.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Finds the first index at which a target string appears in a list of strings.\", \"name\": \"find_first_index\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The first index at which the target string appears in the list. If the target string is not found, returns `-1`.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"strings\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"target\": {\"description\": \"The target string to find.\", \"type\": \"string\"}}, \"required\": [\"strings\", \"target\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Computes the total size of the elements in a 2D array (matrix) in bytes.\", \"name\": \"compute_total_size_in_bytes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The total size in bytes of all the elements in the matrix.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"dtype\": {\"description\": \"The data type of the elements.\", \"type\": \"string\"}, \"matrix\": {\"description\": \"The 2D array.\", \"type\": \"object\"}}, \"required\": [\"matrix\", \"dtype\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Filters a list of Person objects by country code.\", \"name\": \"filter_persons_by_country\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of Person objects whose address field's country code is the provided country code.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"country_code\": {\"description\": \"The country code to filter by.\", \"type\": \"string\"}, \"persons\": {\"description\": \"A list of Person objects.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"persons\", \"country_code\"], \"type\": \"object\"}}, {\"description\": \"Checks if all attributes of `obj` are set to `value`.\\nReturns True if all attributes are set to `value`, and False otherwise.\", \"name\": \"all_attributes_set_to\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The object to check.\"}, \"value\": {\"description\": \"The value to check against.\"}}, \"required\": [\"obj\", \"value\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Combines two lists into a list of tuples.\", \"name\": \"combine_lists_into_tuples\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples, where each tuple contains one element from each list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"l1\": {\"description\": \"The first list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"l2\": {\"description\": \"The second list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"l1\", \"l2\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"replace_separators\", \"arguments\": {\"input_list\": [\"apple\", \"banana\", \"cherry\"]}, \"label\": \"$var1\"}, {\"name\": \"find_first_index\", \"arguments\": {\"strings\": \"$var1.output_0$\", \"target\": \"banana\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n1\n\nNow solve:\nA cistern can be filled by a tap in 5 hours while it can be emptied by another tap in 10hours. If both the taps are opened simultaneously then after how much time will the cistern get filled?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 788,
    "text": "Example:\n\nInstruction:\nx varies inversely as square of y. Given that y=3 for x=1. The value of x for y = 5 will be equal to:\n\nUse this API documentation for reference: [{\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"power\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"power\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 5, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}]\n\nGold Answer:\n0.36\n\nNow solve:\nTokenize the sentence \"Hello, World!\" and then escape special characters in the tokens, except for the newline character `\\n`, which should be replaced with the line continuation character `\\\\`.\n\nUse this API documentation for reference: [{\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Converts a distance from inches to centimeters with a precision of 2 decimal places.\", \"name\": \"convert_to_cm_with_precision\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The distance in centimeters with a precision of 2 decimal places.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"inches\": {\"description\": \"The distance in inches.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"inches\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the number of vowels in a given string.\", \"name\": \"get_vowels_count\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of vowels in the string.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"str\": {\"description\": \"The input string.\", \"type\": \"object\"}}, \"required\": [\"str\"], \"type\": \"object\"}}, {\"description\": \"Parses command line arguments and stores them in a dictionary.\", \"name\": \"arg_parser\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The dictionary with the parsed arguments.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"args\": {\"description\": \"A list of command line arguments.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"options\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"An empty dictionary to store the parsed arguments.\", \"type\": \"object\"}}, \"required\": [\"args\", \"options\"], \"type\": \"object\"}}, {\"description\": \"Checks if a string is a valid class name in Python.\", \"name\": \"is_valid_class_name\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the string is a valid class name, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"name\": {\"description\": \"The string to check.\", \"type\": \"string\"}}, \"required\": [\"name\"], \"type\": \"object\"}}, {\"description\": \"Formats the value of the `page_views` key in the `data` dictionary based on its type.\", \"name\": \"format_page_views\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The formatted value of the `page_views` key, or None if it's a dictionary.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"data\": {\"additionalProperties\": {\"type\": [\"integer\", \"object\", \"object\"]}, \"description\": \"A dictionary containing the data of a website visitor.\", \"type\": \"object\"}, \"date_str\": {\"description\": \"A string representing the date format.\", \"type\": \"string\"}}, \"required\": [\"data\", \"date_str\"], \"type\": \"object\"}}, {\"description\": \"Converts a byte-string to a bit-string using bitwise operations.\", \"name\": \"byte_string_to_bit_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The bit-string representation of the byte-string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"byte_string\": {\"description\": \"The byte-string to convert.\", \"type\": [\"object\", \"object\"]}}, \"required\": [\"byte_string\"], \"type\": \"object\"}}, {\"description\": \"Returns a dictionary of functions and their docstrings for a given module/package.\", \"name\": \"get_functions_and_docstrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the keys are function names and the values are their docstrings.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"module_name\": {\"description\": \"The name of the module/package.\", \"type\": \"string\"}}, \"required\": [\"module_name\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Counts the number of times a character appears in a string.\", \"name\": \"count_char_occurrences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"c\": {\"description\": \"The character to search for.\", \"type\": \"object\"}, \"s\": {\"description\": \"The string to search in.\", \"type\": \"object\"}}, \"required\": [\"s\", \"c\"], \"type\": \"object\"}}, {\"description\": \"Tokenizes a sentence by removing punctuation and converting words to lowercase.\", \"name\": \"tokenize_sentence\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tokens.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"sentence\": {\"description\": \"The sentence to tokenize.\", \"type\": \"string\"}}, \"required\": [\"sentence\"], \"type\": \"object\"}}, {\"description\": \"Escapes special characters in tokens, except for the newline character `\\n`, which is replaced with the line continuation character `\\\\`.\", \"name\": \"escape_special_chars_in_tokens\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tokens with special characters escaped.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"tokens\": {\"description\": \"A list of tokens.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"tokens\"], \"type\": \"object\"}}, {\"description\": \"Returns the values of the keys in the order specified by the keys array.\\nIf a key doesn't exist in the dictionary, returns None for that position.\", \"name\": \"get_values_in_order\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {}, \"description\": \"The dictionary object.\", \"type\": \"object\"}, \"keys\": {\"description\": \"The array of keys.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"dictionary\", \"keys\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Takes a tensor of shape (N, H, C) and returns a tensor of shape (N, H, C * 2) where the new tensor is the original tensor concatenated with itself.\", \"name\": \"double_channels\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"tensor\": {\"description\": \"The input tensor.\", \"type\": \"object\"}}, \"required\": [\"tensor\"], \"type\": \"object\"}}, {\"description\": \"Returns a dictionary of Cars keyed by their make.\", \"name\": \"get_cars_by_make\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"cars\": {\"description\": \"A list of Cars.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"cars\"], \"type\": \"object\"}}, {\"description\": \"Converts a pascal case string to a kebab case string.\", \"name\": \"pascal_to_kebab\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input string converted to kebab case.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input pascal case string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 789,
    "text": "Example:\n\nInstruction:\nA group of people participate in some curriculum, 30 of them practice Yoga, 25 study cooking, 15 study weaving, 6 of them study cooking only, 8 of them study both the cooking and yoga, 7 of them participate all curriculums. How many people study both cooking and weaving?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 25, \"arg_1\": 8}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 7}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 6}}]\n\nGold Answer:\n4.0\n\nNow solve:\nA truck covers a distance of 550 metres in 1 minute whereas a train covers a distance of 33 kms in 45 minutes. What is the ratio of their speed?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 790,
    "text": "Example:\n\nInstruction:\nWhen positive integer n is divided by 3, the remainder is 1. When n is divided by 5, the remainder is 4. What is the smallest positive integer p, such that (n + p) is a multiple of 11?\n\nUse this API documentation for reference: [{\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"reminder\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 5}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 11, \"arg_1\": \"$var_1.result$\"}}]\n\nGold Answer:\n7.0\n\nNow solve:\nOn dividing 21 by a number, the quotient is 10 and the remainder is 1. Find the divisor.\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 791,
    "text": "Example:\n\nInstruction:\nAt 6\u2032o a clock ticks 6 times. The time between first and last ticks is 20 seconds. How long does it tick at 12\u2032o clock\n\nUse this API documentation for reference: [{\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 6, \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 20, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 12, \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}]\n\nGold Answer:\n44.0\n\nNow solve:\nCarina has 130 ounces of coffee divided into 5- and 10-ounce packages. If she has 2 more 5-ounce packages than 10-ounce packages, how many 10-ounce packages does she have?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 792,
    "text": "Example:\n\nInstruction:\nx and y invested in a business . they earned some profit which they divided in the ratio of 2 : 6 . if x invested rs . 5000 . the amount invested by y is\n\nUse this API documentation for reference: [{\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 5000, \"arg_1\": 6}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}]\n\nGold Answer:\n15000.0\n\nNow solve:\nA number when divided by a certain divisor left remainder 245, when twice the number was divided by the same divisor, the remainder was 112. Find the divisor?\n\nUse this API documentation for reference: [{\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 793,
    "text": "Example:\n\nInstruction:\nGiven a list of numbers [2, 4, 6, 8], check if all numbers are even. If they are, convert the list to a list of bits.\n\nUse this API documentation for reference: [{\"description\": \"Returns a meaningful text if the response code is within the 200-299 range, or raises an exception otherwise.\", \"name\": \"get_meaningful_response_msg\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"resp_code\": {\"description\": \"An integer representing an HTTP response code.\", \"type\": [\"integer\", \"string\"]}}, \"required\": [\"resp_code\"], \"type\": \"object\"}}, {\"description\": \"Reverses the encoding of the input string.\", \"name\": \"reverse_string_encoding\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string to reverse the encoding of.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Formats an alert message with an appropriate Bootstrap color class.\", \"name\": \"format_alert_message\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The formatted HTML string for a Bootstrap alert, or None if the message is empty.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"message\": {\"description\": \"The message string to format.\", \"type\": \"string\"}}, \"required\": [\"message\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of the elements in a list of numbers.\", \"name\": \"add_list_elements\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}, {\"description\": \"Finds all file names in a directory and its subdirectories matching a specific regular expression pattern and then randomly samples `n` of them.\\nReturns the list of sampled file names in sorted order.\", \"name\": \"sample_files\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The number of files to sample.\", \"type\": \"integer\"}, \"path\": {\"description\": \"The path to the directory to search.\", \"type\": \"string\"}, \"regex\": {\"description\": \"The regular expression pattern to match against the file names.\", \"type\": \"string\"}}, \"required\": [\"path\", \"regex\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Generates a dictionary of PV names based on a list of motor names.\", \"name\": \"generate_pv_names\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary with motor names as keys and PV names as values.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"motor_names\": {\"description\": \"A list of motor names.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"motor_names\"], \"type\": \"object\"}}, {\"description\": \"Returns `True` if all elements in `numbers` are even, and `False` otherwise.\", \"name\": \"is_all_even\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"`True` if all elements in `numbers` are even, and `False` otherwise.\\n\\nExamples:\\n    >>> is_all_even([2, 4, 6])\\n    True\\n    >>> is_all_even([1, 2, 3, 4])\\n    False\\n    >>> is_all_even([])\\n    True\\n    >>> is_all_even([3, 5, 7])\\n    False\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Replaces instance variable names in a list of strings with their corresponding property names.\", \"name\": \"replace_instance_variables\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings with instance variable names replaced with their corresponding property names.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"strings\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"strings\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Finds the parent key of a target object in a list of objects.\", \"name\": \"find_parent_key\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The parent key of the target object, if a parent relationship exists.\\n    None if there is no parent or if the target object is not found in the list.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"objects\": {\"description\": \"A list of dictionaries representing a set of objects.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}, \"target_key\": {\"description\": \"The key of the target object.\", \"type\": \"string\"}}, \"required\": [\"objects\", \"target_key\"], \"type\": \"object\"}}, {\"description\": \"Converts an integer to a list of bits using a bit mask and a left shift operation.\", \"name\": \"convert_bits\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of bits.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"A non-negative integer.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Converts a given XML string into a dictionary of XML tags and their attributes.\", \"name\": \"xml_to_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of XML tags and their attributes.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"xml_string\": {\"description\": \"The XML string to be converted.\", \"type\": \"string\"}}, \"required\": [\"xml_string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of all integers in the range from start to stop, inclusive.\", \"name\": \"sum_range\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"start\": {\"description\": \"The starting integer of the range.\", \"type\": [\"integer\", \"number\"]}, \"stop\": {\"description\": \"The ending integer of the range.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"start\", \"stop\"], \"type\": \"object\"}}, {\"description\": \"Extracts the publication type from an XML string.\", \"name\": \"extract_pub_type_from_xml\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The publication type if found, otherwise None.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"xml_str\": {\"description\": \"The XML string to extract the publication type from.\", \"type\": \"string\"}}, \"required\": [\"xml_str\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"is_all_even\", \"arguments\": {\"numbers\": [2, 4, 6, 8]}, \"label\": \"$var1\"}, {\"name\": \"convert_bits\", \"arguments\": {\"n\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n[1]\n\nNow solve:\n45 x ? = 25% of 900\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 794,
    "text": "Example:\n\nInstruction:\nRs.1775 is divided amongst A, B, C so that 5 times A's share, 3 times B's share and 7 times C's share are all equal. Find C's share?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 7, \"arg_1\": 5}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 7, \"arg_1\": 3}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 1775, \"arg_1\": \"$var_4.result$\"}}]\n\nGold Answer:\n375.0\n\nNow solve:\nA certain country is divided into 6 provinces. Each province consists entirely of Progressives and Traditionalists. If each province contains the same number of Traditionalists and the number of Traditionalists in any given province is 1/18 the total number of Progressives in the entire country, what fraction of the country is Traditionalist?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 795,
    "text": "Example:\n\nInstruction:\nA trader cheats both his supplier and customer by using faulty weights. When he buys from the supplier, he takes 10% more than the indicated weight. When he sells to his customer, he gives the customer a weight such that 10% of that is added to the weight, the weight claimed by the trader is obtained. If he charges the cost price of the weight that he claims, find his profit percentage.\n\nUse this API documentation for reference: [{\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 10}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 100}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 10}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n21.0\n\nNow solve:\nOf the votes cast on a certain proposal, 62 more were in favor of the proposal than were against it. If the number of votes against the proposal was 40 percent of the total vote, what was the total number of votes cast? (Each vote cast was either in favor of the proposal or against it.)\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 796,
    "text": "Example:\n\nInstruction:\nI have a list of SRM colors [10.0, 20.0, 30.0]. I want to convert them to RGB color tuples and then multiply each element in the resulting matrix by a scale value of 2.\n\nUse this API documentation for reference: [{\"description\": \"Converts a list of SRM colors to a list of RGB color tuples.\", \"name\": \"convert_from_srm_to_rgb\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"srm_colors\": {\"description\": \"A list of SRM colors represented as floating point numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"srm_colors\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Converts COCO coordinates into YOLO format.\", \"name\": \"coco_to_yolo\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The YOLO coordinates as a numpy array.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"coco_coordinates\": {\"description\": \"The COCO coordinates in the form of a numpy array.\", \"type\": \"object\"}}, \"required\": [\"coco_coordinates\"], \"type\": \"object\"}}, {\"description\": \"Concatenates the string representation of n to the end of the input string.\", \"name\": \"concatenate_n_to_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The number to be concatenated to the end of the string.\", \"type\": \"integer\"}, \"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Finds the last non-None value in a list of hashable values.\", \"name\": \"find_last_known_value\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"default\": {\"description\": \"The value to return if no non-None value is found.\", \"nullable\": true, \"type\": \"object\"}, \"seq\": {\"description\": \"A list of hashable values.\", \"items\": {\"nullable\": true, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"seq\"], \"type\": \"object\"}}, {\"description\": \"Replaces all instances of the substring 'dog' with 'cat' in a string.\", \"name\": \"replace_dog_with_cat\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"object\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Converts a binary string to a decimal number.\", \"name\": \"bits_to_num\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"A string representing a binary number.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Multiplies each element in the input matrix by the scale value to create a new matrix.\", \"name\": \"matrix_scale_multiply\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"The input matrix.\", \"items\": {\"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"type\": \"array\"}, \"scale_value\": {\"description\": \"The scale value.\", \"type\": \"number\"}}, \"required\": [\"matrix\", \"scale_value\"], \"type\": \"object\"}}, {\"description\": \"Converts a non-negative integer string to a positive integer.\\nIf the input is not a non-negative integer, returns 'Not a valid integer.'.\", \"name\": \"convert_positive_int\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"string\"]}}}, \"parameters\": {\"properties\": {\"input\": {\"description\": \"The input string to be converted.\", \"type\": \"string\"}}, \"required\": [\"input\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Produces a new string where each letter in the original string `name` is separated by a hyphen (`\\\"-\\\"`).\", \"name\": \"separate_with_hyphens\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new string where each letter in the original string `name` is separated by a hyphen (`\\\"-\\\"`).\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"name\": {\"description\": \"A string containing only letters.\", \"type\": \"string\"}}, \"required\": [\"name\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Partitions a list of 3-tuples into two sublists based on a threshold value for responsibilities.\", \"name\": \"partition_data\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing two sublists: one with the tuples for which the model has a responsibility below the threshold and one with the tuples for which the model has a responsibility above or equal to the threshold.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"A list of 3-tuples, where each tuple represents a data point with two numeric values. The first value is an ID number, the second value is a target value, and the third value is the responsibility of a machine learning model for predicting the target value.\", \"items\": {\"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}, {\"type\": \"number\"}], \"type\": \"array\"}, \"type\": \"array\"}, \"threshold\": {\"description\": \"A threshold value for responsibilities.\", \"type\": \"number\"}}, \"required\": [\"data\", \"threshold\"], \"type\": \"object\"}}, {\"description\": \"Prints a string in a pattern that repeats each character a number of times equal to its position in the string.\", \"name\": \"print_pattern\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"convert_from_srm_to_rgb\", \"arguments\": {\"srm_colors\": [10.0, 20.0, 30.0]}, \"label\": \"$var1\"}, {\"name\": \"matrix_scale_multiply\", \"arguments\": {\"matrix\": \"$var1.output_0$\", \"scale_value\": 2}, \"label\": \"$var2\"}]\n\nGold Answer:\n[[51.0, 51.0, 51.0], [102.0, 102.0, 102.0], [153.0, 153.0, 153.0]]\n\nNow solve:\n3 pounds of 05 grass seed contain 1 percent herbicide . a different type of grass seed , 20 , which contains 20 percent herbicide , will be mixed with 3 pounds of 05 grass seed . how much grass seed of type 20 should be added to the 3 pounds of 05 grass seed so that the mixture contains 15 percent herbicide ?\n\nUse this API documentation for reference: [{\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 797,
    "text": "Example:\n\nInstruction:\nConvert the radian value of 3.14 to degrees, then find the type of the result.\n\nUse this API documentation for reference: [{\"description\": \"Serializes a list of objects using pickle and includes the type of each object.\", \"name\": \"serialize_objects_with_type\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of serialized objects.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"objects\": {\"description\": \"A list of objects to serialize.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"objects\"], \"type\": \"object\"}}, {\"description\": \"Validates if all characters in a string are ASCII characters.\", \"name\": \"validate_ascii\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if all characters are ASCII characters, otherwise False.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string to validate.\", \"type\": \"object\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Finds the authors with the most number of publications.\", \"name\": \"find_authors_with_most_publications\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of authors with the most number of publications.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"authors\": {\"description\": \"A list of dictionaries representing author information. Each dictionary contains a list of publications under the key `publications`. Each publication has an `author_ids` field representing the list of author IDs (integers) associated with that publication.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"authors\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the minimum, maximum, and average of three numbers.\", \"name\": \"find_min_max_avg\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first number.\", \"type\": \"number\"}, \"b\": {\"description\": \"The second number.\", \"type\": \"number\"}, \"c\": {\"description\": \"The third number.\", \"type\": \"number\"}}, \"required\": [\"a\", \"b\", \"c\"], \"type\": \"object\"}}, {\"description\": \"Decodes a 4-digit code into a string using a dictionary stored in a pickle file.\", \"name\": \"decode_code\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"code\": {\"description\": \"The 4-digit code to be decoded.\", \"type\": \"string\"}}, \"required\": [\"code\"], \"type\": \"object\"}}, {\"description\": \"Concatenates two strings by alternating their characters.\\n\\nIf one string is longer than the other, append the remaining characters of the longer string to the end of the result.\", \"name\": \"alternate_concat\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The concatenated string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"str1\": {\"description\": \"The first string.\", \"type\": \"string\"}, \"str2\": {\"description\": \"The second string.\", \"type\": \"string\"}}, \"required\": [\"str1\", \"str2\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Merges two dictionaries into a new dictionary that only contains the key/value pairs from dict1 that are also in dict2.\", \"name\": \"merge_dicts_with_keys_in_both_dicts\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new dictionary that only contains the key/value pairs from dict1 that are also in dict2.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"dict1\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"The first dictionary.\", \"type\": \"object\"}, \"dict2\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"The second dictionary.\", \"type\": \"object\"}}, \"required\": [\"dict1\", \"dict2\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Converts a list of objects into a list of dictionaries, where each object is a dictionary keyed by attribute name and value, with the exception of attributes whose current values are None.\", \"name\": \"convert_objects_to_dicts\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of dictionaries representing the objects.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"objects\": {\"description\": \"A list of objects to convert.\", \"items\": {}, \"type\": \"array\"}}, \"required\": [\"objects\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of strings that start with the specified prefix.\", \"name\": \"get_strings_starting_with\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"prefix\": {\"description\": \"The prefix to filter the strings with.\", \"type\": \"string\"}, \"strings\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"strings\", \"prefix\"], \"type\": \"object\"}}, {\"description\": \"Determines the type of the input argument.\", \"name\": \"type_checker\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string indicating the type of the input argument.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"arg\": {\"description\": \"The input argument to check the type of.\", \"nullable\": true, \"type\": [\"boolean\", \"integer\", \"string\"]}}, \"required\": [\"arg\"], \"type\": \"object\"}}, {\"description\": \"Returns the `last_name` attribute of an object if it is not null, otherwise returns `None`.\", \"name\": \"get_last_name\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The object to get the `last_name` attribute from.\"}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Converts radians to degrees.\", \"name\": \"convert_radian_to_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"radian\": {\"description\": \"The value in radians to be converted to degrees.\", \"type\": \"number\"}}, \"required\": [\"radian\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"convert_radian_to_degree\", \"arguments\": {\"radian\": 3.14}, \"label\": \"$var1\"}, {\"name\": \"type_checker\", \"arguments\": {\"arg\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\nunknown\n\nNow solve:\nIf a 10 percent deposit that has been paid toward the purchase of a certain product is $160, how much more remains to be paid?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 798,
    "text": "Example:\n\nInstruction:\nNiall's income is 60% less than Rex's income, and Sam's income is 25% less than Niall's income. If Rex gave 60% of his income to Sam and 40% of his income to Niall, Niall's new income would be what fraction of Sam's new income?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 40, \"arg_1\": 40}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 40, \"arg_1\": 40}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 10}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_3.result$\"}}]\n\nGold Answer:\n0.8888888888888888\n\nNow solve:\nI want to find the maximum value in each sub-array of a 2D array [[1, 2, 3], [4, 5, 6], [7, 8, 9]], then calculate the 5th term of the Fibonacci sequence, and finally generate a comment with the name 'John' and the 5th term of the Fibonacci sequence as the comment.\n\nUse this API documentation for reference: [{\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of all the integers that are divisible by 3 from a 2D list of integers.\\nThe function also flattens and copies the original 2D list.\", \"name\": \"divisible_by_three\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of integers that are divisible by 3.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A 2D list of integers.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the elapsed time between two dates specified as datetime objects.\", \"name\": \"compute_elapsed_time\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The elapsed time between the two dates as a timedelta object.\\n    If the end date is earlier than the start date, the function returns a negative timedelta.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"end_date\": {\"description\": \"The end date as a string in ISO format.\", \"type\": \"string\"}, \"start_date\": {\"description\": \"The start date as a string in ISO format.\", \"type\": \"string\"}}, \"required\": [\"start_date\", \"end_date\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Encloses a string in double quotes.\", \"name\": \"quote_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The string enclosed in double quotes.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The string to enclose in double quotes.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Finds the maximum value in each sub-array of a 2D array.\", \"name\": \"find_max_in_each_subarray\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new array containing the maximum value from each sub-array.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"array\": {\"description\": \"A 2D array of integers.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"array\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Translates a list of dictionaries into a new dictionary.\\n\\nEach key in the new dictionary is the value of the \\\"name\\\" field in the input data,\\nand each value is a list of the values of the \\\"value\\\" field.\\nIf the \\\"name\\\" field is empty or missing, the corresponding dictionary is discarded.\", \"name\": \"translate_to_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new dictionary.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"A list of dictionaries.\", \"items\": {\"additionalProperties\": {\"type\": [\"array\", \"string\"]}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"data\"], \"type\": \"object\"}}, {\"description\": \"Authenticates a token by verifying its message and hmac.\", \"name\": \"authenticate_token\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the message and the hmac match, otherwise False.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"message\": {\"description\": \"The message to be authenticated.\", \"type\": \"string\"}, \"secret_key\": {\"description\": \"The secret key used to generate the hmac.\", \"type\": \"object\"}, \"token\": {\"description\": \"A string of the format `{message}:{hmac}`.\", \"type\": \"string\"}}, \"required\": [\"token\", \"secret_key\", \"message\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Creates a signature object from a dictionary of parameters.\", \"name\": \"create_signature\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"params\": {\"additionalProperties\": {\"type\": \"object\"}, \"description\": \"A dictionary containing the parameters for the signature.\", \"type\": \"object\"}}, \"required\": [\"params\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the nth term of the Fibonacci sequence.\", \"name\": \"get_n_term_of_fibonacci_sequence\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The position of the term in the Fibonacci sequence.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Creates a dictionary of neural network layers.\", \"name\": \"get_layers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of neural network layers.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"hidden_sizes\": {\"description\": \"A list of sizes for the hidden layers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"input_size\": {\"description\": \"The size of the input layer.\", \"type\": \"integer\"}, \"output_size\": {\"description\": \"The size of the output layer.\", \"type\": \"integer\"}}, \"required\": [\"input_size\", \"hidden_sizes\", \"output_size\"], \"type\": \"object\"}}, {\"description\": \"Converts a string to a new string where each character in the new string is the uppercase version of the previous character.\", \"name\": \"convert_to_uppercase_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The new string with each character in uppercase.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"original_string\": {\"description\": \"The original string to convert.\", \"type\": \"string\"}}, \"required\": [\"original_string\"], \"type\": \"object\"}}, {\"description\": \"Generates a comment in the specified format.\", \"name\": \"generate_comment\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"comment\": {\"description\": \"The comment to include in the comment block. Defaults to an empty string.\", \"nullable\": true, \"type\": \"string\"}, \"name\": {\"description\": \"The name to include in the comment.\", \"type\": \"string\"}, \"verbose\": {\"description\": \"A flag indicating whether to include the comment. Defaults to True.\", \"nullable\": true, \"type\": \"boolean\"}}, \"required\": [\"name\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 799,
    "text": "Example:\n\nInstruction:\nCar X began traveling at an average speed of 35 miles per hour. After 36 minutes, car Y began traveling at an average speed of 38 miles per hour. When both cars had traveled the same distance, both cars stopped. How many miles did car X travel from the time car Y began traveling until both cars stopped?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 36, \"arg_1\": 60}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 35}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 38, \"arg_1\": 35}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 35, \"arg_1\": \"$var_4.result$\"}}]\n\nGold Answer:\n245.0\n\nNow solve:\nIf x dollars is invested at 10 percent for one year and y dollars is invested at 8 percent for one year, the annual income from the 10 percent investment will exceed the annual income from the 8 percent investment by $38. If $2,000 is the total amount invested, how much is invested at 8 percent?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 800,
    "text": "Example:\n\nInstruction:\nIf both 5^2 and 3^3 are factors of n x (2^5) x (6) x (7^3), what is the smallest possible positive value of n?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 5, \"arg_1\": 7}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 5, \"arg_1\": 7}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 5, \"arg_1\": 7}}, {\"name\": \"multiply\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": \"$var_7.result$\"}}, {\"name\": \"add\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": \"$var_8.result$\", \"arg_1\": 7}}, {\"name\": \"add\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_9.result$\", \"arg_1\": 4}}, {\"name\": \"add\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": \"$var_10.result$\", \"arg_1\": 4}}]\n\nGold Answer:\n225.0\n\nNow solve:\nThe denominator of a fraction is 6 greater than the numerator. If the numerator and the denominator are increased by 1, the resulting fraction is equal to 4\u00e2\u0081\u201e5. What is the value of the original fraction?\n\nUse this API documentation for reference: [{\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 801,
    "text": "Example:\n\nInstruction:\nIn a dairy farm, 16 cows eat 16 bags of husk in 16 days. In how many days one cow will eat one bag of husk?\n\nUse this API documentation for reference: [{\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 16, \"arg_1\": 16}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 16}}]\n\nGold Answer:\n16.0\n\nNow solve:\nOf the people who responded to a market survey, 240 preferred Brand X and the rest preferred Brand Y. If the respondents indicated a preference for Brand X over Brand Y by ratio of 6 to 1, how many people responded to the survey?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 802,
    "text": "Example:\n\nInstruction:\nThe sum of the even numbers between 1 and k is 79*80, where k is an odd number, then k=\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 79, \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 1}}]\n\nGold Answer:\n159.0\n\nNow solve:\nTwo bullet trains of equal lengths take 10 seconds and 30 seconds respectively to cross a telegraph post. If the length of each bullet train be 120 metres, in what time (in seconds) will they cross each other travelling in opposite direction?\n\nUse this API documentation for reference: [{\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 803,
    "text": "Example:\n\nInstruction:\nIn a mixture of 45 litres the ratio of milk to water is 4:1. Additional 12 litres of water is added to the mixture. Find the ratio of milk to water in the resulting mixture.\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 45, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 45, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 45, \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"add\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 12}}, {\"name\": \"divide\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_6.result$\"}}]\n\nGold Answer:\n1.7142857142857142\n\nNow solve:\nIn two triangles, the ratio of the areas is 4 : 3 and the ratio of their heights is 3 : 4. Find the ratio of their bases.\n\nUse this API documentation for reference: [{\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 804,
    "text": "Example:\n\nInstruction:\nI have a string \"Hello {name}, how are you?\". I want to remove the curly braces and replace them with the text between them. Then, I want to generate a list of test case names based on the resulting string.\n\nUse this API documentation for reference: [{\"description\": \"Finds all prime and composite numbers up to n using bitwise operations.\", \"name\": \"find_prime_composites\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of all prime and composite numbers up to n, with prime numbers first.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"A positive integer.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a string formatted as `{h}h {m}m {s}s`, where `{h}` is the number of hours in the duration, `{m}` is the number of minutes in the duration, and `{s}` is the number of seconds in the duration. The function returns `0s` if the duration is 0 or less.\", \"name\": \"duration_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"duration\": {\"description\": \"The duration in seconds.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"duration\"], \"type\": \"object\"}}, {\"description\": \"Extracts the text of all the elements from an XML document that match a given XPath query.\", \"name\": \"get_elements_text\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings representing the text of all the selected elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"query\": {\"description\": \"The XPath query to select the elements from the document.\", \"type\": \"string\"}, \"xml_file\": {\"description\": \"The name of the XML file.\", \"type\": \"string\"}}, \"required\": [\"xml_file\", \"query\"], \"type\": \"object\"}}, {\"description\": \"Creates and returns an `m` by `n` zero-filled 2D matrix.\", \"name\": \"create_zero_matrix\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"m\": {\"description\": \"The number of rows in the matrix.\", \"type\": \"integer\"}, \"n\": {\"description\": \"The number of columns in the matrix.\", \"type\": \"integer\"}}, \"required\": [\"m\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Sorts a list of objects by their `.rank` attribute.\", \"name\": \"sort_objects_by_rank\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list with the objects sorted by their `.rank` attribute.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"objects\": {\"description\": \"A list of `Object` instances.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"objects\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Removes curly braces from a string and replaces them with the text between them.\", \"name\": \"remove_curly_braces\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input string with curly braces removed and replaced by the text between them.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Parses a string of text and returns a list of URLs, sorted by their first occurrence in the text.\", \"name\": \"get_links\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of URLs sorted by their first occurrence in the text.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The string of text to parse.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Checks if two strings share a common word, ignoring punctuation, case, and Unicode characters.\", \"name\": \"has_common_words\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the strings share a common word, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first string.\", \"type\": \"string\"}, \"b\": {\"description\": \"The second string.\", \"type\": \"string\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Transpose the given array if the 'transpose' parameter is 'True', otherwise return the same array.\\nIf the 'transpose' parameter is 'True', the returned array should be in transposed form,\\nmeaning the rows become columns and columns become rows.\", \"name\": \"transpose_if_true\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"array\": {\"description\": \"A 2D array to be transposed.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}, \"transpose\": {\"description\": \"A boolean indicating whether to transpose the array or not.\", \"type\": \"boolean\"}}, \"required\": [\"array\"], \"type\": \"object\"}}, {\"description\": \"Generates a list of test case names based on the given string.\", \"name\": \"get_test_case_names\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of test case names.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"A string representing a sequence of words separated by space characters.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns True if `x` and `y` have the same sign (including zero), and False otherwise.\", \"name\": \"has_same_sign\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The first number.\", \"type\": [\"integer\", \"number\"]}, \"y\": {\"description\": \"The second number.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"remove_curly_braces\", \"arguments\": {\"text\": \"Hello {name}, how are you?\"}, \"label\": \"$var1\"}, {\"name\": \"get_test_case_names\", \"arguments\": {\"s\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n['test_a_Hello', 'test_a_Name', 'test_a_How', 'test_a_Are', 'test_a_You']\n\nNow solve:\nAfter decreasing 25% in the price of an article costs Rs.1500. Find the actual cost of an article?\n\nUse this API documentation for reference: [{\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 805,
    "text": "Example:\n\nInstruction:\nWhat is the greater of the two numbers whose product is 2496, given that the sum of the two numbers exceeds their difference by 64?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"power\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 4}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 2496, \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n78.0\n\nNow solve:\nArun and Tarun can do a work in 10 days.After 4 days tarun went to his village.How many days are required to complete the remaining work by Arun alone.Arun can do the work alone in 40 days.\n\nUse this API documentation for reference: [{\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 806,
    "text": "Example:\n\nInstruction:\nx, y, and z are all unique numbers. If x is chosen randomly from the set {10, 11} and y and z are chosen randomly from the set {20, 21, 22, 23}, what is the probability that x and y are prime and z is not?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 4}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n0.125\n\nNow solve:\nA leak in the bottom of a tank can empty the full tank in 6 hours. An inlet pipe fills water at the rate of 5 liters per minute. When the tank is full in inlet is opened and due to the leak the tank is empties in 8 hours. The capacity of the tank is?\n\nUse this API documentation for reference: [{\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 807,
    "text": "Example:\n\nInstruction:\nX and Y started a business by investing Rs.36000 and Rs.42000 respectively after 4 months Z joined in the business with an investment of Rs.48000, then find share of Z in the profit of Rs.13750 ?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 4}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 4}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 48000, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 4}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 36000, \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 4}}, {\"name\": \"multiply\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": 42000, \"arg_1\": \"$var_6.result$\"}}, {\"name\": \"add\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": \"$var_7.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 4}}, {\"name\": \"subtract\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_9.result$\", \"arg_1\": 4}}, {\"name\": \"multiply\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": 48000, \"arg_1\": \"$var_10.result$\"}}, {\"name\": \"add\", \"label\": \"$var_12\", \"arguments\": {\"arg_0\": \"$var_8.result$\", \"arg_1\": \"$var_11.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_13\", \"arguments\": {\"arg_0\": 13750, \"arg_1\": \"$var_12.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_14\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_13.result$\"}}]\n\nGold Answer:\n4000.0\n\nNow solve:\nwhat is the sum of all 3 digit integers formed using the digits 34 and 5 ( repetition is allowed )\n\nUse this API documentation for reference: [{\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 808,
    "text": "Example:\n\nInstruction:\nThe owner of a furniture shop charges his customer 24% more than the cost price. If a customer paid Rs. 8463 for a computer table, then what was the cost price of the computer table?\n\nUse this API documentation for reference: [{\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 24, \"arg_1\": 100}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 8463, \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n6825.0\n\nNow solve:\nthe number of students in each section of a school is 24 . after admitting new students , 3 new sections were started . now , the total number of sections is 16 and there are 21 students in each section . the number of new students admitted is :\n\nUse this API documentation for reference: [{\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 809,
    "text": "Example:\n\nInstruction:\nJohn purchased some shirts and trousers for $800. He paid $400 less for the shirts than he did for the trousers. If he bought 5 shirts and the cost of a shirt is $20 less than that of a trouser, how many trousers did he buy?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 20, \"arg_1\": 20}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 5, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 800, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 20, \"arg_1\": 20}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 20}}, {\"name\": \"divide\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_5.result$\"}}]\n\nGold Answer:\n10.0\n\nNow solve:\nCalculate the factorial of 5, then find the maximum number between the factorial and 100.\n\nUse this API documentation for reference: [{\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Validates a token in Python by inspecting its type and following the rules for each type.\", \"name\": \"validate_token\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A Boolean value indicating whether the token is valid.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"token\": {\"description\": \"The token to validate.\", \"type\": \"string\"}}, \"required\": [\"token\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Generates a SQL statement for inserting a new record into a user table.\", \"name\": \"generate_insert_sql\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string that represents the SQL statement for inserting a new record into the user table.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"email\": {\"description\": \"The email address of the user.\", \"type\": \"string\"}, \"id\": {\"description\": \"The unique identifier for the user.\", \"type\": \"integer\"}, \"name\": {\"description\": \"The name of the user.\", \"type\": \"string\"}, \"phone\": {\"description\": \"The phone number of the user.\", \"type\": \"string\"}}, \"required\": [\"id\", \"name\", \"email\", \"phone\"], \"type\": \"object\"}}, {\"description\": \"Counts the number of rows in a matrix that contain a target integer.\", \"name\": \"count_rows_with_target\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"A list of lists of integers representing a matrix.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}, \"target\": {\"description\": \"The target integer to search for in the matrix.\", \"type\": \"integer\"}}, \"required\": [\"data\", \"target\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Converts a dictionary to a list of dictionaries containing the dictionary keys and their associated values.\\nIf a dictionary key has a corresponding function value, the key-value pair is skipped.\\nHandles errors when the input is not a dictionary or the function value is missing.\", \"name\": \"convert_dict_to_list_of_dicts\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of dictionaries containing the dictionary keys and their associated values.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_dict\": {\"additionalProperties\": {\"nullable\": true, \"type\": [\"integer\", \"number\", \"object\", \"string\"]}, \"description\": \"The input dictionary.\", \"type\": \"object\"}}, \"required\": [\"input_dict\"], \"type\": \"object\"}}, {\"description\": \"Calculates the corresponding values in the frequency domain for a list of frequencies and a sample rate.\", \"name\": \"values_in_frequency_domain\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the corresponding values in the frequency domain.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"frequencies\": {\"description\": \"A list of frequencies.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"sample_rate\": {\"description\": \"The sample rate.\", \"type\": \"number\"}}, \"required\": [\"frequencies\", \"sample_rate\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Returns the absolute path to the user's home directory for a given GitHub account name.\", \"name\": \"get_home_path\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"github_account_name\": {\"description\": \"The GitHub account name.\", \"type\": \"string\"}}, \"required\": [\"github_account_name\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Converts two integers representing a point in the domain to a single integer that represents the corresponding range value.\", \"name\": \"convert_to_range_value\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The equivalent range value computed using the formula `y = 20*x + 20`.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The x-coordinate of the point in the domain.\", \"type\": \"integer\"}, \"y\": {\"description\": \"The y-coordinate of the point in the domain.\", \"type\": \"integer\"}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Returns the larger of the two numbers `x` and `y`. If the two numbers are equal, returns `x` as the larger number.\", \"name\": \"max_number\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The first number.\", \"type\": [\"integer\", \"number\"]}, \"y\": {\"description\": \"The second number.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Combines the data from multiple processes into a uniform structure.\", \"name\": \"combine_gathered_data\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of dictionaries with the required structure.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"gathered_data\": {\"description\": \"The data gathered from each process.\", \"items\": {\"items\": {}, \"type\": \"array\"}, \"type\": \"array\"}, \"process_ids\": {\"description\": \"The IDs of the processes.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"gathered_data\", \"process_ids\"], \"type\": \"object\"}}, {\"description\": \"Calculates the factorial of an integer `n` \\u2265 0.\", \"name\": \"int_factorial\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The integer to calculate the factorial of.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Extracts log messages from a file with a given format.\", \"name\": \"get_log_messages\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of log messages.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The name of the log file.\", \"type\": \"string\"}}, \"required\": [\"filename\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 810,
    "text": "Example:\n\nInstruction:\nIf 12 men or 20 women can do a piece of work in 54 days, then in how many days can 9 men and 12 women together do the work?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 12, \"arg_1\": 54}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 9, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 20, \"arg_1\": 54}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 12, \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"inverse\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\"}}]\n\nGold Answer:\n40.0\n\nNow solve:\nTwo trains 200 m and 150 m long are running on parallel rails at the rate of 40 kmph and 48 kmph respectively. In how much time will they cross each other, if they are running in the same direction?\n\nUse this API documentation for reference: [{\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 811,
    "text": "Example:\n\nInstruction:\nI have a list of integers [1, 2, 3, 4, 5]. I want to pad this list with zeros until its length is a multiple of 3. Then, I want to find the minimum and maximum values in the padded list.\n\nUse this API documentation for reference: [{\"description\": \"Determines whether to add or divide two numbers `a` and `b`.\\n\\nIf `a` and `b` are both integers, returns their sum. If `div` is set to `True`, returns `a / b`.\\nOtherwise, returns `a + b`.\", \"name\": \"add_or_divide\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first number.\", \"type\": [\"integer\", \"number\"]}, \"b\": {\"description\": \"The second number.\", \"type\": [\"integer\", \"number\"]}, \"div\": {\"description\": \"If set to `True`, returns `a / b`. Otherwise, returns `a + b`.\", \"type\": \"boolean\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Finds the minimum and maximum values in a list without modifying the original list.\", \"name\": \"search_min_max\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing the minimum and maximum values in the list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"A list of numeric values.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"a\"], \"type\": \"object\"}}, {\"description\": \"Converts a time duration in seconds to a human-readable string.\", \"name\": \"convert_seconds_to_datestring\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string in the format \\\"YYYY-MM-DD hh:mm:ss\\\" representing the time duration.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"seconds\": {\"description\": \"The time duration in seconds.\", \"type\": \"integer\"}}, \"required\": [\"seconds\"], \"type\": \"object\"}}, {\"description\": \"Binds to a specified port number using a socket, checking for race conditions.\", \"name\": \"port_binding_race\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The socket object if the binding operation is successful.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"port_number\": {\"description\": \"The port number to bind.\", \"type\": \"integer\"}}, \"required\": [\"port_number\"], \"type\": \"object\"}}, {\"description\": \"Extracts the file extension from a filepath and checks if it's a valid Python extension.\", \"name\": \"extract_file_ext\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing the file extension and a boolean indicating whether the extension is a valid Python extension.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"filepath\": {\"description\": \"The filepath to extract the extension from.\", \"type\": \"string\"}}, \"required\": [\"filepath\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Pads a list of integers with zeros until its length is a multiple of a given integer.\", \"name\": \"pad_buffer\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The list of integers to pad.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"n\": {\"description\": \"The integer to divide the length of the list by.\", \"type\": \"integer\"}}, \"required\": [\"lst\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Removes the middle dimension from a 3D tensor `x` of shape `(N, 1, 4)`,\\nresulting in a tensor of shape `(N, 4)`.\", \"name\": \"remove_middle_dim\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tensor of shape `(N, 4)`.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"A 3D tensor of shape `(N, 1, 4)`.\", \"type\": \"object\"}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Creates a list of tuples where each tuple contains the original integer and its square.\", \"name\": \"square_tuples\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples. Each tuple contains the original integer and its square.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Replaces the substring between the first pair of square brackets in a string with another string.\", \"name\": \"replace_between_brackets\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The updated string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"string\"}, \"t\": {\"description\": \"The replacement string.\", \"type\": \"string\"}}, \"required\": [\"s\", \"t\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Returns a string with the format `YYYY-MM-DD HH:MM:SS` based on the datetime object.\", \"name\": \"get_formatted_time\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A formatted string representing the datetime object.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"time_obj\": {\"description\": \"The datetime object.\", \"type\": \"object\"}}, \"required\": [\"time_obj\"], \"type\": \"object\"}}, {\"description\": \"Returns the number of calibration steps necessary for a particular instrument.\", \"name\": \"get_calibration_steps\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"instrument_id\": {\"description\": \"A string that uniquely identifies the instrument.\", \"type\": \"string\"}}, \"required\": [\"instrument_id\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"pad_buffer\", \"arguments\": {\"lst\": [1, 2, 3, 4, 5], \"n\": 3}, \"label\": \"$var1\"}, {\"name\": \"search_min_max\", \"arguments\": {\"a\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n[0, 5]\n\nNow solve:\nA bag marked at $250 is sold for $120. The rate of discount is?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 812,
    "text": "Example:\n\nInstruction:\nA man has some hens and cows. If the number of heads be 42 and the number of feet equals 124, then the number of hens will be\n\nUse this API documentation for reference: [{\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 42, \"arg_1\": 4}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 124}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 2}}]\n\nGold Answer:\n22.0\n\nNow solve:\nA palindrome is a number that reads the same forward and backward, such as 343. How many odd, 6-digit numbers are palindromes?\n\nUse this API documentation for reference: [{\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 813,
    "text": "Example:\n\nInstruction:\nA train running at a speed of 60 kmph crosses a pole in 18 seconds.What is the length of the train?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 60, \"arg_1\": 1000}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 3600}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 18}}]\n\nGold Answer:\n300.0\n\nNow solve:\nI want to remove all control characters from the string \"Hello, World!\" and pad it with 16 spaces on both sides. Then, I want to duplicate each character in the resulting string.\n\nUse this API documentation for reference: [{\"description\": \"Composes an HTTP response body in JSON format.\", \"name\": \"compose_response\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The HTTP response body in JSON format.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"message\": {\"description\": \"The message to be included in the JSON object.\", \"type\": \"string\"}}, \"required\": [\"message\"], \"type\": \"object\"}}, {\"description\": \"Performs the forward pass of a convolutional neural network (CNN) layer.\", \"name\": \"forward_pass_conv_layer\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The output feature maps from the ReLU activation function.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"A 4D PyTorch tensor representing a mini-batch of images in the shape `[batch_size, channels, height, width]`.\", \"type\": \"object\"}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Finds the maximum value of the array elements that are both greater than or equal to a given value `v`\\nand located on or above the diagonal.\", \"name\": \"maximum_value_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"arr\": {\"description\": \"A 2D Numpy array.\", \"type\": \"object\"}, \"v\": {\"description\": \"The given value.\", \"type\": \"number\"}}, \"required\": [\"arr\", \"v\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Adjusts predictions based on a threshold.\", \"name\": \"adjust_predictions\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of int predictions adjusted based on the threshold.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"predictions\": {\"description\": \"A list of float predictions.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"predictions\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Converts a string in camel case to the corresponding string in snake case.\", \"name\": \"convert_camel_to_underscore\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input string converted to snake case.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string in camel case.\", \"type\": \"object\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Calculates the time difference between two datetime objects in an easily readable format.\", \"name\": \"get_time_diff\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"end\": {\"description\": \"The end datetime object.\", \"type\": \"object\"}, \"start\": {\"description\": \"The start datetime object.\", \"type\": \"object\"}}, \"required\": [\"start\", \"end\"], \"type\": \"object\"}}, {\"description\": \"Checks if the request is for a media type of \\\"audio/mpeg\\\".\", \"name\": \"is_request_for_mp3\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A boolean indicating whether the request is for a media type of \\\"audio/mpeg\\\".\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"headers\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary of request headers.\", \"type\": \"object\"}}, \"required\": [\"headers\"], \"type\": \"object\"}}, {\"description\": \"Removes formatting characters from a given string.\", \"name\": \"remove_formatting\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input string without formatting characters and the new-line character at the end.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Extracts the text content from all `<a>` (anchor) elements in an HTML string.\\n\\nExcludes text from `<script>` and `<style>` elements.\", \"name\": \"extract_text_from_a_tags\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings, where each string is the text content of an `<a>` tag.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"html\": {\"description\": \"The HTML string to extract text from.\", \"type\": \"string\"}}, \"required\": [\"html\"], \"type\": \"object\"}}, {\"description\": \"Calculates the average of a list of floating-point numbers and returns it as a string with exactly two decimal places.\", \"name\": \"average_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The average of the numbers as a string with exactly two decimal places.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of floating-point numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Removes all control characters from a string and pads it with 16 spaces on both sides.\", \"name\": \"remove_control_chars_and_pad\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input string with all control characters removed and padded with 16 spaces on both sides.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Checks if an integer is a power of 2.\", \"name\": \"check_for_binary_power\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the integer is a power of 2, otherwise False.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The integer to check.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Duplicates each character in a string.\", \"name\": \"duplicate_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string where each character is duplicated. If the input string is `None` or not a string,\\n    the function returns `None`. If the input string is empty, the function returns the empty string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"nullable\": true, \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 814,
    "text": "Example:\n\nInstruction:\nI have a duration of 12345 seconds. I want to format it into a string representing hours, minutes, and seconds. Then, I want to split the resulting string using a colon (:) as the separator and print the resulting list.\n\nUse this API documentation for reference: [{\"description\": \"Determines if two floating-point numbers `x` and `y` are equal to a specified tolerance value.\", \"name\": \"are_floating_point_numbers_equal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"`True` if the absolute difference between `x` and `y` is less than or equal to the specified tolerance value and `False` otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"abs_tol\": {\"description\": \"The absolute tolerance.\", \"type\": \"number\"}, \"rel_tol\": {\"description\": \"The relative tolerance.\", \"type\": \"number\"}, \"x\": {\"description\": \"The first floating-point number.\", \"type\": \"number\"}, \"y\": {\"description\": \"The second floating-point number.\", \"type\": \"number\"}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of the 'price' field in a list of JSON objects.\", \"name\": \"sum_prices\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The sum of the 'price' field in the JSON objects.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"json_objects\": {\"description\": \"A list of JSON objects.\", \"items\": {\"additionalProperties\": {\"type\": \"number\"}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"json_objects\"], \"type\": \"object\"}}, {\"description\": \"Converts a multi-dimensional tensor to a binary tensor based on a threshold.\\nThe value of each element in the output tensor is 1 if it is greater than or equal to the threshold, and 0 otherwise.\", \"name\": \"threshold_tensor\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"tensor\": {\"description\": \"The input multi-dimensional tensor.\", \"type\": \"object\"}, \"threshold\": {\"description\": \"The scalar threshold.\", \"type\": \"number\"}}, \"required\": [\"tensor\", \"threshold\"], \"type\": \"object\"}}, {\"description\": \"Extracts all n-grams from a given text.\", \"name\": \"extract_ngrams\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The size of the n-gram to extract.\", \"type\": \"integer\"}, \"text\": {\"description\": \"The input text.\", \"type\": \"string\"}}, \"required\": [\"text\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Validates the contents of a JSON file and updates its contents.\", \"name\": \"validate_and_update_json\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A Boolean indicating whether the validation was successful or not.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the JSON file.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Calculates the greatest common divisor (GCD) of two integers using the Euclidean algorithm.\", \"name\": \"euclidean_gcd\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The larger of the two numbers.\", \"type\": \"integer\"}, \"b\": {\"description\": \"The smaller of the two numbers.\", \"type\": \"integer\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Extracts and returns the first five-digit sequence from a string.\\nIf the string does not contain a valid zip code, the function returns None.\", \"name\": \"find_zip_code\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string to search for a zip code.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Splits a string based on a separator character and returns a list of strings.\", \"name\": \"split_str_custom\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"separator\": {\"description\": \"The separator character.\", \"type\": \"string\"}, \"string\": {\"description\": \"The input string to be split.\", \"type\": \"string\"}}, \"required\": [\"string\", \"separator\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Extracts the type names of all arguments in a function definition node from the abstract syntax tree (AST).\", \"name\": \"extract_argument_names\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of argument type names that are strings and do not start with an underscore.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"funcdef_node\": {\"description\": \"The function definition node from the AST.\", \"type\": \"object\"}}, \"required\": [\"funcdef_node\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Prints the elements of a list in the following format:\\n\\\"1\\\", \\\"2\\\", \\\"3\\\", ..., \\\"N\\\"\\nIf the list is empty, returns an empty string. The list contains only strings.\", \"name\": \"print_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"list\": {\"description\": \"The list of strings to print.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"list\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Formats a duration in seconds into a string representing hours, minutes, and seconds.\", \"name\": \"format_pretty_time\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A formatted string representing the duration in hours, minutes, and seconds.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"duration_seconds\": {\"description\": \"The duration in seconds.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"duration_seconds\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"format_pretty_time\", \"arguments\": {\"duration_seconds\": 12345}, \"label\": \"$var1\"}, {\"name\": \"split_str_custom\", \"arguments\": {\"string\": \"$var1.output_0$\", \"separator\": \":\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n['03', '25', '45']\n\nNow solve:\nA can do a piece of work 60 days. B can do work in 90 days. In how many days they will complete the work together?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 815,
    "text": "Example:\n\nInstruction:\nMachine A and machine B are each used to manufacture 550 sprockets. It takes machine A 10 hours longer to produce 550 sprockets than machine B. Machine B produces 10 percent more sprockets per hour than machine A. How many sprockets per hour does machine A produces?\n\nUse this API documentation for reference: [{\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 10, \"arg_1\": 550}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 10}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 10}}, {\"name\": \"divide\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": 550, \"arg_1\": \"$var_6.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_7.result$\", \"arg_1\": 550}}, {\"name\": \"divide\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_8.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": 550, \"arg_1\": \"$var_9.result$\"}}]\n\nGold Answer:\n5.0\n\nNow solve:\nA lady starts from P towards Q and realizes that at a point R, if he walks 50 km further he will be at a point S, which is as far away from R as it is from Q. What is the distance between P and Q if the distance between P and R is half the distance from R to Q?( Assume that P, Q, R and S are all on the same straight line)\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 816,
    "text": "Example:\n\nInstruction:\n(3x + 2) (2x - 1) = ax^2 + kx + n . What is the value of a - n + k ?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 3}}, {\"name\": \"subtract\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_5.result$\"}}, {\"name\": \"add\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_6.result$\"}}]\n\nGold Answer:\n9.0\n\nNow solve:\nDifference between a two-digit number and the number obtained by interchanging the two digits is 36, what is the difference between two numbers\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 817,
    "text": "Example:\n\nInstruction:\nA contractor undertakes to built a walls in 50 days. He employs 30 peoples for the same. However after 25 days he finds that only 40% of the work is complete. How many more man need to be employed to complete the work in time?\n\nUse this API documentation for reference: [{\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 40}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 30, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 10}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_4.result$\"}}]\n\nGold Answer:\n45.0\n\nNow solve:\nA train is 360 meter long is running at a speed of 45 km/hour. In what time will it pass a bridge of 140 meter length.\n\nUse this API documentation for reference: [{\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 818,
    "text": "Example:\n\nInstruction:\nReverse the vowels in the string \"Hello, World!\" and then calculate the MD5 hash of the reversed string.\n\nUse this API documentation for reference: [{\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Checks if a list of integers is in ascending order.\", \"name\": \"is_ordered_ascending\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the list is in ascending order, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"data\"], \"type\": \"object\"}}, {\"description\": \"Creates a dictionary from a tuple of strings.\\n\\nThe keys of the dictionary are the first two elements of the tuple and the values are the third element.\", \"name\": \"tuple_to_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"tuple_of_strings\": {\"description\": \"A tuple of strings.\", \"prefixItems\": [{\"type\": \"string\"}, {\"type\": \"string\"}, {\"type\": \"string\"}], \"type\": \"array\"}}, \"required\": [\"tuple_of_strings\"], \"type\": \"object\"}}, {\"description\": \"Calculates and returns the MD5 hash of a given object.\\nThe function uses `pickle` to serialize the object before passing it to the hash function.\\nThe function also supports an optional `salt` parameter to add a string to the serialized object before hashing it.\\nIf the `salt` parameter is not provided, an empty string is used.\", \"name\": \"create_md5_hash\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The MD5 hash of the serialized object.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The object to calculate the MD5 hash for.\"}, \"salt\": {\"description\": \"An optional string to add to the serialized object before hashing it.\", \"type\": \"string\"}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Finds the index of the first occurrence of the pattern `p` within the string `s`, ignoring case.\", \"name\": \"find_pattern_index\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The index of the first occurrence of the pattern `p` within the string `s`, ignoring case.\\n    If the pattern is not found, returns `-1`.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"p\": {\"description\": \"The pattern to search for.\", \"nullable\": true, \"type\": \"string\"}, \"s\": {\"description\": \"The input string.\", \"nullable\": true, \"type\": \"string\"}}, \"required\": [\"s\", \"p\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Updates a list of name objects with a new name.\", \"name\": \"update_all_names\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of updated name objects with the new name.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"names\": {\"description\": \"A list of name objects.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}, \"new_name\": {\"description\": \"The new name to update the name objects with.\", \"type\": \"string\"}}, \"required\": [\"names\", \"new_name\"], \"type\": \"object\"}}, {\"description\": \"Checks if two lists are equal.\", \"name\": \"check_list_equality\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the two lists are equal, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"list1\": {\"description\": \"The first list.\", \"nullable\": true, \"type\": \"array\"}, \"list2\": {\"description\": \"The second list.\", \"nullable\": true, \"type\": \"array\"}}, \"required\": [\"list1\", \"list2\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates log(1 + exp(x)) using a numerically stable implementation.\", \"name\": \"log1p_exp\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The result of log(1 + exp(x)).\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The input tensor.\", \"type\": \"object\"}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Creates a PyTorch tensor that contains the first 100 positive integers in the form of a 10x10 matrix.\\nThen creates a new tensor that only includes the even numbers from the original tensor.\", \"name\": \"create_even_numbers_tensor\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A PyTorch tensor containing the even numbers from the original 10x10 matrix.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Finds the index of the first negative value in a list of integers `x`.\", \"name\": \"find_negative\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The index of the first negative value in `x` if it exists, otherwise -1.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Converts a binary string into a decimal integer.\", \"name\": \"convert_binary_to_decimal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The decimal integer representation of the binary string.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"binary_string\": {\"description\": \"A binary string to be converted into a decimal integer.\", \"type\": \"string\"}}, \"required\": [\"binary_string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Reverses the vowels in a given string.\\n\\nThe vowels to be reversed are 'a', 'e', 'i', 'o', and 'u'. The function also preserves the case of the vowels.\", \"name\": \"reverse_vowels\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The string with the vowels reversed.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Removes duplicates from a list of dictionaries by comparing a specified key.\\nPreserves the first occurrence of the duplicate.\", \"name\": \"remove_dupes_by_key\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"dicts\": {\"description\": \"A list of dictionaries.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}, \"key\": {\"description\": \"The key to compare for duplicates.\", \"type\": \"string\"}}, \"required\": [\"dicts\", \"key\"], \"type\": \"object\"}}, {\"description\": \"Scales a 3-dimensional tensor of real-valued data so that the mean of the tensor is 0 and the standard deviation is 1.\", \"name\": \"scale_tensor\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new NumPy array containing the scaled tensor.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"The input tensor as a NumPy array.\", \"type\": \"object\"}}, \"required\": [\"data\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"reverse_vowels\", \"arguments\": {\"string\": \"Hello, World!\"}, \"label\": \"$var1\"}, {\"name\": \"create_md5_hash\", \"arguments\": {\"obj\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\ne36bc5c21bed131588b612426185ef0f\n\nNow solve:\nA person buys an article at Rs.575. At what price should he sell the article so as to make a profit of 15%?\n\nUse this API documentation for reference: [{\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 819,
    "text": "Example:\n\nInstruction:\nIn a certain pond, 50 fish were caught, tagged, and returned to the pond. A few days later, 50 fish were caught again, of which 4 were found to have been tagged. If the percent of tagged fish in the second catch approximates the percent of tagged fish in the pond, what is the approximate number of fish in the pond?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 50}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 50, \"arg_1\": \"$var_1.result$\"}}]\n\nGold Answer:\n625.0\n\nNow solve:\nBarbata invests $2600 in the National Bank at 5%. How much additional money must she invest at 8% so that the total annual income will be equal to 6% of her entire investment?\n\nUse this API documentation for reference: [{\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 820,
    "text": "Example:\n\nInstruction:\nThere are 3000 students in a school and among them 20 % of them attends chess class. 40% of the students who are in the chess class are also enrolled for swimming. No other students are interested in swimming so how many will attend the swimming class if all enrolled attends?\n\nUse this API documentation for reference: [{\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 20, \"arg_1\": 3000}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 40}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n240.0\n\nNow solve:\nThe length of the bridge, which a train 110 meters long and travelling at 45 km/hr can cross in 30 seconds, is:\n\nUse this API documentation for reference: [{\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 821,
    "text": "Example:\n\nInstruction:\nPat, Kate, and Mark charged a total of 126 hours to a certain project. If Pat charged twice as much time to the project as Kate and 1/3 as much time as Mark, how many more hours did Mark charge to the project than Kate?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 3}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 126, \"arg_1\": \"$var_5.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 3}}, {\"name\": \"add\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_7.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_9.result$\"}}, {\"name\": \"add\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": \"$var_8.result$\", \"arg_1\": \"$var_10.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_12\", \"arguments\": {\"arg_0\": 126, \"arg_1\": \"$var_11.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_13\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_14\", \"arguments\": {\"arg_0\": \"$var_12.result$\", \"arg_1\": \"$var_13.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_15\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": \"$var_14.result$\"}}]\n\nGold Answer:\n70.0\n\nNow solve:\nWhat is the speed of the stream if a canoe rows upstream at 6km/hr and downstream at 12km/hr\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 822,
    "text": "Example:\n\nInstruction:\nwhen n divided by 3, the remainder is 2.\nwhen n divided by 4, the remainder is 1\nwhat is the the remainder when divided by 16\n\nUse this API documentation for reference: [{\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 12, \"arg_1\": 3}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 4}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 16}}, {\"name\": \"floor\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\"}}]\n\nGold Answer:\n1.0\n\nNow solve:\nI have a list of numbers [1, 2, 3, 4, 5]. I want to calculate the mean of the numbers, then create a new list with all even numbers appearing before all odd numbers, and finally generate an ID for the new list with the prefix \"list_\".\n\nUse this API documentation for reference: [{\"description\": \"Serializes a JSON object and logs the output to a file.\", \"name\": \"json_logger\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The serialized JSON string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input_json\": {\"description\": \"The input JSON object.\", \"type\": \"object\"}}, \"required\": [\"input_json\"], \"type\": \"object\"}}, {\"description\": \"Determines whether the given list of numbers `nums` is in ascending order.\", \"name\": \"is_ascending\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"`True` if the list is in ascending order, and `False` otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"The list of numbers to check.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}, {\"description\": \"Computes time-to-live (TTL) for a given packet.\", \"name\": \"ttl_computation\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The computed TTL as an integer.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"packet\": {\"description\": \"The packet for which TTL is to be computed.\", \"type\": \"object\"}}, \"required\": [\"packet\"], \"type\": \"object\"}}, {\"description\": \"Returns a list containing only the letters of the original string.\", \"name\": \"get_letters\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list containing only the letters of the original string.\\n    If the input is not a valid string, an empty list is returned.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Displays the contents of a file and returns the number of lines in the file.\", \"name\": \"display_file_contents\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of lines in the file.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the file to be displayed.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Reorders a list of numbers in such a way that all even numbers appear before all odd numbers.\", \"name\": \"reorder_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list with all even numbers appearing before all odd numbers.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}, {\"description\": \"Calculates the mean of a list of numbers.\", \"name\": \"get_mean\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Generates an ID for the given object by combining the object's type name and the object's value.\\nIf no `prefix` argument is provided, it should just return the object's type name.\", \"name\": \"create_id\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The object to generate an ID for.\"}, \"prefix\": {\"description\": \"The prefix to add to the ID.\", \"nullable\": true, \"type\": \"string\"}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns a string representation of the earliest date and time in the given list of datetime objects.\\n\\nThe string follows the format \\\"YYYY-MM-DD HH:MM:SS\\\", where YYYY represents the year, MM represents the month, DD represents the day, HH represents the hour, MM represents the minute, and SS represents the second.\\n\\nIf the input list is empty or contains no valid datetime objects, the function returns an empty string.\", \"name\": \"get_earliest_datetime_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"datetime_list\": {\"description\": \"A list of datetime objects.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"datetime_list\"], \"type\": \"object\"}}, {\"description\": \"Finds the number of elements that two dictionaries have in common.\", \"name\": \"num_common_elements\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of elements that are common between the dictionaries.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"dict1\": {\"description\": \"The first dictionary.\", \"type\": \"object\"}, \"dict2\": {\"description\": \"The second dictionary.\", \"type\": \"object\"}}, \"required\": [\"dict1\", \"dict2\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of the last elements in each tuple of `l`.\", \"name\": \"get_last_item_in_tuples\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the last elements in each tuple of `l`.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"l\": {\"description\": \"A list of 3-tuples.\", \"items\": {\"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"l\"], \"type\": \"object\"}}, {\"description\": \"Retrieves a list of cards from a deck given a list of headers.\", \"name\": \"get_cards_from_deck\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of cards retrieved from the deck.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"deck\": {\"description\": \"The deck of cards as a JSON object.\", \"type\": \"object\"}, \"headers\": {\"description\": \"A list of headers to retrieve cards from the deck.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"deck\", \"headers\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Groups a list of objects by their 'id' property.\", \"name\": \"group_by_id\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the keys are the 'id' properties of the objects and the values are lists of objects with the same 'id' property.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"objects\": {\"description\": \"A list of objects, each expected to have an 'id' property.\", \"items\": {\"additionalProperties\": {\"type\": [\"integer\", \"string\"]}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"objects\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 823,
    "text": "Example:\n\nInstruction:\nA certain college's enrollment at the beginning of 1992 was 30 percent greater than it was at the beginning of 1991, and its enrollment at the beginning of 1993 was 10 percent greater than it was at the beginning of 1992. The college's enrollment at the beginning of 1993 was what percent greater than its enrollment at the beginning of 1991 ?\n\nUse this API documentation for reference: [{\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 30}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 10}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n43.0\n\nNow solve:\nI have a dictionary `{'key1': 'value1', 'key2': 'value2'}`. I want to find the first key that contains 'value1' in its value. Then, I want to generate a UUID from the found key.\n\nUse this API documentation for reference: [{\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Finds two different keys in the two dictionaries that have the same value.\", \"name\": \"find_same_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple of two keys that have the same value, or None if no such pair exists.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"a\": {\"additionalProperties\": {}, \"description\": \"A dictionary.\", \"type\": \"object\"}, \"b\": {\"additionalProperties\": {}, \"description\": \"Another dictionary.\", \"type\": \"object\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Calculates the absolute difference between two angles, a and b, but ensures that the result is within the range of [-180, 180).\\n\\nThe function handles negative angles correctly and returns a value in degrees.\", \"name\": \"angle_diff\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first angle.\", \"type\": [\"integer\", \"number\"]}, \"b\": {\"description\": \"The second angle.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Generates a random hexadecimal string of length n.\", \"name\": \"gen_random_hex\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A random hexadecimal string of length n.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The desired length of the hexadecimal string.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Creates a hyperlink in HTML given a label and a URL.\", \"name\": \"create_link\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"An HTML string with the `<a>` tag containing the link.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"label\": {\"description\": \"The label for the hyperlink.\", \"type\": \"string\"}, \"url\": {\"description\": \"The URL for the hyperlink.\", \"type\": \"string\"}}, \"required\": [\"label\", \"url\"], \"type\": \"object\"}}, {\"description\": \"Serializes and deserializes a list of integers to and from a JSON file.\", \"name\": \"serialize_deserialize_int_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The deserialized list of integers.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"int_list\": {\"description\": \"The list of integers to serialize and deserialize.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"int_list\"], \"type\": \"object\"}}, {\"description\": \"Finds the first key that contains `value` in its value in a nested dictionary.\", \"name\": \"find_value_in_nested_dictionary\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The first key that contains `value` in its value, or `None` if no key contains `value`.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"dict\": {\"additionalProperties\": {\"type\": [\"object\", \"string\"]}, \"description\": \"The dictionary to search.\", \"type\": \"object\"}, \"value\": {\"description\": \"The value to search for.\", \"type\": \"string\"}}, \"required\": [\"dict\", \"value\"], \"type\": \"object\"}}, {\"description\": \"Generates a UUID from a string.\", \"name\": \"generate_uuid_from_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The string to be converted to a UUID.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 824,
    "text": "Example:\n\nInstruction:\nIf a coin is flipped, the probability that the coin will land heads is 1/2. If the coin is flipped 5 times, what is the probability that it will land tails up on the first 4 flips and not on the last flip?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"power\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 5}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_1.result$\"}}]\n\nGold Answer:\n0.03125\n\nNow solve:\nDiana is painting statues. She has 1/2 of a gallon of paint remaining. Each statue requires 1/16 gallon of paint. How many statues can she paint?\n\nUse this API documentation for reference: [{\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 825,
    "text": "Example:\n\nInstruction:\nIf P is a prime number greater than 3, find the remainder when P^2 + 16 is divided by 12.\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 4}}, {\"name\": \"power\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 16, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 12, \"arg_1\": 3}}, {\"name\": \"subtract\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_4.result$\"}}]\n\nGold Answer:\n5.0\n\nNow solve:\nThe original price of a suit is $100. The price increased 20%, and after this increase, the store published a 20% off coupon for a one-day sale. Given that the consumers who used the coupon on sale day were getting 20% off the increased price, how much did these consumers pay for the suit?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 826,
    "text": "Example:\n\nInstruction:\nRs.2500 is divided into two parts such that if one part be put out at 5% simple interest and the other at 6%, the yearly annual income may be Rs.125. How much was lent at 5%?\n\nUse this API documentation for reference: [{\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 6, \"arg_1\": 2500}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 100}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 125, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 5, \"arg_1\": 100}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 6, \"arg_1\": 100}}, {\"name\": \"subtract\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_5.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_6.result$\"}}]\n\nGold Answer:\n2500.0\n\nNow solve:\nDenise is trying to open a safe whose combination she does not know.\nIF the safe has 4000 possible combinations,and she can try 75 different\npossibilities,what is the probability that she does not pick the one\ncorrect combination.\n\nUse this API documentation for reference: [{\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 827,
    "text": "Example:\n\nInstruction:\nJohn bought a shirt on sale for 25% off the original price and another 25 % off the discounted price. If the final price was $16, what was the price before the first discount?\n\nUse this API documentation for reference: [{\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 16}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 25}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 100}}, {\"name\": \"subtract\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 25}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 25}}, {\"name\": \"subtract\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_6.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_7.result$\"}}]\n\nGold Answer:\n28.44\n\nNow solve:\nCalculate the smallest power of 2 greater than or equal to 100. Then, convert this number to a string representing the equivalent number of days, hours, minutes, and seconds.\n\nUse this API documentation for reference: [{\"description\": \"Check if a given object's attribute exists.\", \"name\": \"check_if_attribute_exists\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A boolean value, where `True` means the attribute exists and `False` otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"attribute\": {\"description\": \"The name of the attribute to check for.\", \"type\": \"string\"}, \"obj\": {\"description\": \"The object to check for the attribute.\"}}, \"required\": [\"obj\", \"attribute\"], \"type\": \"object\"}}, {\"description\": \"Splits a string of comma-separated words into a list of tuples, each tuple containing the word and a number of characters.\", \"name\": \"split_words_with_length\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples, each containing a word and its length.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string to split.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Converts a number of seconds to a string representing the equivalent number of days, hours, minutes, and seconds.\", \"name\": \"time_format_convert_d2h\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"seconds\": {\"description\": \"The number of seconds to convert.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"seconds\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the smallest power of 2 greater than or equal to a given number n.\", \"name\": \"best_round\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The smallest power of 2 greater than or equal to n.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The given number.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Converts a 12-hour clock time string to a 24-hour clock.\", \"name\": \"convert_12_to_24\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input time string converted to 24-hour clock format.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"time_str\": {\"description\": \"The input time string in 12-hour clock format.\", \"type\": \"string\"}}, \"required\": [\"time_str\"], \"type\": \"object\"}}, {\"description\": \"Computes the Fibonacci number at the index represented by the given string.\", \"name\": \"fibonacci_at_index\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The Fibonacci number at the corresponding index.\", \"type\": [\"integer\", \"string\"]}}}, \"parameters\": {\"properties\": {\"index_string\": {\"description\": \"A string representation of a positive integer.\", \"type\": \"string\"}}, \"required\": [\"index_string\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Validates if a given element is a valid string or list.\", \"name\": \"is_valid_element\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the element is a valid string or list, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"element\": {\"description\": \"The element to validate.\", \"type\": [\"array\", \"string\"]}}, \"required\": [\"element\"], \"type\": \"object\"}}, {\"description\": \"Checks if all elements in a list are zero.\", \"name\": \"all_zero\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A boolean value indicating whether all elements in the list are zero.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The list to check.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Extracts all the unique elements and their corresponding positions in the list.\", \"name\": \"extract_unique_elements\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples, each containing the element and its position in the original list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Calculates the False Negative Rate (FNR) given the number of true negatives (TN), false negatives (FN), and the number of total positives (P).\", \"name\": \"calculate_fnr\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The False Negative Rate (FNR).\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"fn\": {\"description\": \"The number of false negatives.\", \"type\": \"integer\"}, \"p\": {\"description\": \"The number of total positives.\", \"type\": \"integer\"}, \"tn\": {\"description\": \"The number of true negatives.\", \"type\": \"integer\"}}, \"required\": [\"tn\", \"fn\", \"p\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Determines whether a given node is an ancestor of another node in a tree represented as a dictionary.\", \"name\": \"is_ancestor\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the first node is an ancestor of the second node, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"ancestor\": {\"description\": \"The name of the node to check if it is an ancestor.\", \"type\": \"string\"}, \"descendant\": {\"description\": \"The name of the node to check if it is a descendant.\", \"type\": \"string\"}, \"tree\": {\"additionalProperties\": {\"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"description\": \"A dictionary representing the tree.\", \"type\": \"object\"}}, \"required\": [\"tree\", \"ancestor\", \"descendant\"], \"type\": \"object\"}}, {\"description\": \"Calculates the maximum number of elements that can be stored in a block.\", \"name\": \"max_elements\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The maximum number of elements that can be stored in the block.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"block_size\": {\"description\": \"The size of the block.\", \"type\": \"integer\"}, \"element_size\": {\"description\": \"The size of each element.\", \"type\": \"integer\"}}, \"required\": [\"block_size\", \"element_size\"], \"type\": \"object\"}}, {\"description\": \"Checks if a given string is a valid boolean string.\\n\\nA boolean string is a string that is either `\\\"True\\\"` or `\\\"False\\\"`.\", \"name\": \"is_valid_boolean_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"`True` for a valid boolean string and `False` for an invalid string.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The string to check.\", \"type\": [\"boolean\", \"string\"]}}, \"required\": [\"s\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 828,
    "text": "Example:\n\nInstruction:\nAlfred buys an old scooter for $4700 and spends $800 on its repairs. If he sells the scooter for $6400, his gain percent is?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 4700, \"arg_1\": 800}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 6400, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 4700, \"arg_1\": 800}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n16.36\n\nNow solve:\nIf john makes a contribution to a charity fund at school, the average contribution size will increase by 50% reaching $75 per person. If there were 4 other contributions made before john's, what is the size of his donation?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 829,
    "text": "Example:\n\nInstruction:\nWhat is remainder of the division (1525*1527*1529)/12?\n\nUse this API documentation for reference: [{\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 1525, \"arg_1\": 1527}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 1529}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 1525, \"arg_1\": 1527}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 1529}}, {\"name\": \"subtract\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 3}}, {\"name\": \"subtract\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_5.result$\"}}]\n\nGold Answer:\n3.0\n\nNow solve:\n220 metres long yard, 21 trees are palnted at equal distances, one tree being at each end of the yard. What is the distance between 2 consecutive trees\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 830,
    "text": "Example:\n\nInstruction:\nA man covered a certain distance at some speed. Had he moved 3 kmph faster, he would have taken 40 minutes less. If he had moved 2 kmph slower, he would have taken 40 minutes more. The distance (in km) is\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 3}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 40, \"arg_1\": 60}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_5.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 3}}, {\"name\": \"multiply\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_7.result$\", \"arg_1\": 2}}, {\"name\": \"subtract\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_8.result$\", \"arg_1\": \"$var_9.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": \"$var_10.result$\", \"arg_1\": 3}}, {\"name\": \"add\", \"label\": \"$var_12\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_11.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_13\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": \"$var_12.result$\"}}]\n\nGold Answer:\n40.0\n\nNow solve:\nInitialize a 2D list with 3 rows and 4 columns, where each element is 0. Then, transpose the list and return the transposed list.\n\nUse this API documentation for reference: [{\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of dictionaries for all items in the input dictionary where the dictionary keys are strings and the dictionary values are lists.\", \"name\": \"get_list_of_dicts\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of dictionaries.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"d\": {\"additionalProperties\": {\"items\": {}, \"type\": \"array\"}, \"description\": \"The input dictionary.\", \"type\": \"object\"}}, \"required\": [\"d\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the greatest common divisor of `a mod b` and `b mod a`.\", \"name\": \"gcd_of_modules\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The greatest common divisor of `a mod b` and `b mod a`.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"A positive integer.\", \"type\": \"integer\"}, \"b\": {\"description\": \"A positive integer.\", \"type\": \"integer\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Constructs a list of strings representing the date and time in different formats.\", \"name\": \"get_some_datetime_strings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings representing the date and time in different formats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"dt\": {\"description\": \"A datetime object.\", \"type\": \"object\"}}, \"required\": [\"dt\"], \"type\": \"object\"}}, {\"description\": \"Generates a string table that consists of all ASCII characters and their corresponding numerical values.\\nThe string table is a two-dimensional array with 256 rows and 2 columns.\\nThe first column is the character, and the second column is its numerical value.\", \"name\": \"generate_string_table\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of lists, where each inner list contains a character and its numerical value.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Concatenates the elements of a list into a single string separated by a comma and a space.\", \"name\": \"concatenate_with_separator\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A single string that concatenates the elements of the input list, with each element separated by a comma and a space.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"list_of_strings\": {\"description\": \"A list of strings to concatenate.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"list_of_strings\"], \"type\": \"object\"}}, {\"description\": \"Transforms an Numpy array by element-wise scaling and shifting.\", \"name\": \"scale_and_shift_numpy_array\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The scaled and shifted Numpy array.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"alpha\": {\"description\": \"The scaling parameter.\", \"type\": \"number\"}, \"array\": {\"description\": \"The input Numpy array.\", \"type\": \"object\"}, \"beta\": {\"description\": \"The shifting parameter.\", \"type\": \"number\"}}, \"required\": [\"array\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Determines whether the given number `n` is a power of 2.\", \"name\": \"pow_2_test\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The number to check.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Converts a given integer to a binary string and pads it with zeroes on the left to ensure a minimum length.\", \"name\": \"pad_binary_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The padded binary string. If an error occurs, an empty string is returned.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"min_length\": {\"description\": \"The minimum length of the binary string. Default is 8.\", \"type\": \"integer\"}, \"n\": {\"description\": \"The integer to be converted to a binary string.\", \"nullable\": true, \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Groups objects by their types.\", \"name\": \"group_objects_by_type\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary with each object's type as a key and a list of objects of that type as a value.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"objects\": {\"description\": \"A list of objects.\", \"type\": \"array\"}}, \"required\": [\"objects\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Replaces a line that matches the regular expression `pattern` in the given `text` with the replacement `repl`.\", \"name\": \"replace_line_with_pattern\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The modified `text` as a string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"pattern\": {\"description\": \"The regular expression pattern to search for.\", \"type\": \"string\"}, \"repl\": {\"description\": \"The replacement string.\", \"type\": \"string\"}, \"text\": {\"description\": \"The input text.\", \"type\": \"string\"}}, \"required\": [\"text\", \"pattern\", \"repl\"], \"type\": \"object\"}}, {\"description\": \"Initializes a two-dimensional list with the given dimensions and a default value.\", \"name\": \"initialize_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"cols\": {\"description\": \"The number of columns in the list.\", \"type\": \"integer\"}, \"rows\": {\"description\": \"The number of rows in the list.\", \"type\": \"integer\"}, \"val\": {\"description\": \"The default value for each element in the list.\", \"type\": \"integer\"}}, \"required\": [\"rows\", \"cols\", \"val\"], \"type\": \"object\"}}, {\"description\": \"Transposes a 2D array using list comprehension.\", \"name\": \"transpose_2d_array\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The transposed 2D array.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"array\": {\"description\": \"The input 2D array.\", \"items\": {\"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"array\"], \"type\": \"object\"}}, {\"description\": \"Checks for collisions between a myclass object and another object other.\", \"name\": \"check_collisions_myclass\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if a collision is detected, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"myclass\": {\"description\": \"The myclass object with state and velocity attributes.\"}, \"other\": {\"description\": \"The other object with collision detection capabilities.\"}}, \"required\": [\"myclass\", \"other\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 831,
    "text": "Example:\n\nInstruction:\nIn a class total 34 students, 16 are have a brother, 15 are have sisters, 9 students don't have either brothers or sisters.Find the number of students having both brother and sisters.\n\nUse this API documentation for reference: [{\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 16, \"arg_1\": 15}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 34, \"arg_1\": 9}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n6.0\n\nNow solve:\nGiven a JSON string '{\"1\": \"a\", \"2\": \"b\", \"3\": \"c\"}', convert it to a nested dictionary and then swap the keys and values in the dictionary.\n\nUse this API documentation for reference: [{\"description\": \"Converts a JSON string into a nested dictionary.\", \"name\": \"json_to_nested_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A nested dictionary or an error message if the JSON string is malformed.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"json_string\": {\"description\": \"The JSON string to be converted.\", \"type\": \"string\"}}, \"required\": [\"json_string\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the mean and variance of a set of noisy Poisson signals.\", \"name\": \"remove_noise\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing the mean and variance of the subtracted signals.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"signals\": {\"description\": \"A list of numpy arrays, where each array represents a noisy Poisson signal.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"signals\"], \"type\": \"object\"}}, {\"description\": \"Swap the keys and values in a dictionary. For example,\\ngiven `dictionary = {1: \\\"a\\\", 2: \\\"b\\\", 3: \\\"c\\\"}`, this function returns\\na new dictionary where the keys are swapped with their corresponding values.\", \"name\": \"swap_dictionary\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary with integer keys and string values.\", \"type\": \"object\"}}, \"required\": [\"dictionary\"], \"type\": \"object\"}}, {\"description\": \"Wraps a string with double quotes, and if the string contains a double quote character, wraps it with single quotes.\", \"name\": \"wrap_with_quotes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The wrapped string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The string to be wrapped.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Generates a random email message with a random string as the email address, a random number as the subject, and a random string as the body.\", \"name\": \"generate_email_message\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary with keys 'email', 'subject', and 'body'.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Checks if the values in a 2D list of strings are valid coordinates.\", \"name\": \"is_valid_coordinates\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A boolean value indicating whether the values in the matrix are valid coordinates.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A 2D list of strings representing a matrix.\", \"items\": {\"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Checks if a two-dimensional list of numbers is a valid stochastic matrix.\\nA stochastic matrix is a square matrix where each row sums to 1.0.\", \"name\": \"is_stochastic_matrix\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"If the input matrix is valid, returns the sum of all elements in the matrix.\\n    If the input matrix is invalid, returns None.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A two-dimensional list of numbers.\", \"items\": {\"items\": {\"type\": [\"integer\", \"number\"]}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 832,
    "text": "Example:\n\nInstruction:\nIf the cost price of 140 pencils is equal to the selling price of 100 pencils, the gain percent is\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 140, \"arg_1\": 100}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 100, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 100, \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n40.0\n\nNow solve:\nA monkey start climbing up a tree 18 ft tall.Each hour it hops 3 ft and slips back 2 ft. How much time would it take the monkey to reach the top.\n\nUse this API documentation for reference: [{\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 833,
    "text": "Example:\n\nInstruction:\nA train running at the speed of 60 km/hr crosses a pole in 6 seconds. Find the length of the train.\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 60, \"arg_1\": 1000}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 3600}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 6}}]\n\nGold Answer:\n100.0\n\nNow solve:\nThe marked price of a book is 20% more than the cost price. After the book is sold, the vendor realizes that he had wrongly raised the cost price by a margin of 25%. If the marked price of the book is Rs.30, what is the original cost price of the book?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 834,
    "text": "Example:\n\nInstruction:\nA boat having a length 3 m and breadth 2 m is floating on a lake. The boat sinks by 1cm when a man gets on it. The mass of the man is:\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 1000}}]\n\nGold Answer:\n60.0\n\nNow solve:\nA man purchased 3 blankets @ Rs.100 each, 4 blankets @ Rs.150 each and two blankets at a certain rate which is now slipped off from his memory. But he remembers that the average price of the blankets was Rs.150. Find the unknown rate of two blankets?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 835,
    "text": "Example:\n\nInstruction:\nIn an election between two candidates, one got 55% of the total valid votes, 20% of the votes were invalid. If the total number of votes was 6000, the number of valid votes that the other candidate got, was:\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 20, \"arg_1\": 100}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 55, \"arg_1\": 100}}, {\"name\": \"subtract\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 6000}}]\n\nGold Answer:\n2160.0\n\nNow solve:\nIf the price of gasoline increases by 25% and a driver intends to spend only 20% more on gasoline, by how much percent should the driver reduce the quantity of gasoline that he buys?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 836,
    "text": "Example:\n\nInstruction:\nthe average earning of a person for the first 4 days of a week is rs 18 and for the last 4 days is rs 22 . if he earns rs 20 on the fourth day , his average earning for the whole week is ?\n\nUse this API documentation for reference: [{\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 18}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 22}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 20}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 3}}, {\"name\": \"divide\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_5.result$\"}}]\n\nGold Answer:\n20.0\n\nNow solve:\nA is twice as good a workman as B and they took 8 days together to do the work B alone can do it in.\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 837,
    "text": "Example:\n\nInstruction:\nIn order to fence a square Manish fixed 48 poles. If the distance between two poles, is 2 metres then what will be the area of the square so formed?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 48, \"arg_1\": 2}}, {\"name\": \"square_area\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\"}}]\n\nGold Answer:\n576.0\n\nNow solve:\nWhen the price of an article was reduced by 25% its sale increased by 80%. What was the net effect on the sale?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 838,
    "text": "Example:\n\nInstruction:\nGiven a list of integers [1, 2, 3, 4, 5], calculate the maximum sum of all non-empty sublists. Then, convert the result to its decimal representation as a string, starting from the least significant digit.\n\nUse this API documentation for reference: [{\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the maximum sum of all non-empty sublists in a list of integers.\", \"name\": \"maxSubarraySum\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The maximum sum of all non-empty sublists.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}, {\"description\": \"Removes every element from a list of numbers whose value is less than or equal to 3.\", \"name\": \"remove_less_or_equal_to_3\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list containing only the elements from the input list that are greater than 3.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Converts a byte array to its hexadecimal representation.\", \"name\": \"hex_from_bytes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The hexadecimal representation of the byte array as a string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"byte_array\": {\"description\": \"The byte array to convert.\", \"type\": \"object\"}}, \"required\": [\"byte_array\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Counts the number of search terms that appear in the text string.\", \"name\": \"search_terms\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of search terms that appear in the text string.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"terms\": {\"description\": \"A collection of search terms.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"text\": {\"description\": \"The text string to search.\", \"type\": \"string\"}}, \"required\": [\"text\", \"terms\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Replaces any tab characters in a string with spaces.\", \"name\": \"replace_tabs\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The modified string with tab characters replaced by spaces.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum and average of a list of three numbers.\", \"name\": \"sum_and_avg\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing the sum and average of the input numbers.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of three numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Computes the n-th digit in the Fibonacci sequence.\", \"name\": \"nth_fib_recursion\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The position of the digit in the Fibonacci sequence.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Determines whether a user agent string is from a mobile device or not.\", \"name\": \"is_mobile\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the user agent string contains the substring 'Mobile' or 'Android', and False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"user_agent\": {\"description\": \"The user agent string to check.\", \"type\": \"string\"}}, \"required\": [\"user_agent\"], \"type\": \"object\"}}, {\"description\": \"Adds two NumPy arrays `a` and `b` of compatible shapes by performing broadcasting on the arrays to match each other's shapes.\", \"name\": \"broadcast_add\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first NumPy array.\", \"type\": \"object\"}, \"b\": {\"description\": \"The second NumPy array.\", \"type\": \"object\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of all subarrays of size K in the given array.\", \"name\": \"calculate_subarray_sum\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"K\": {\"description\": \"The size of the subarrays.\", \"type\": \"integer\"}, \"array\": {\"description\": \"The input array of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"array\", \"K\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Converts a positive integer `n` to its decimal representation as a string, starting from the least significant digit.\", \"name\": \"convert_reversed\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The decimal representation of `n` as a string, starting from the least significant digit.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"A positive integer.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"maxSubarraySum\", \"arguments\": {\"nums\": [1, 2, 3, 4, 5]}, \"label\": \"$var1\"}, {\"name\": \"convert_reversed\", \"arguments\": {\"n\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n51\n\nNow solve:\nA diagonal of a polygon is an segment between two non-adjacent vertices of the polygon. How many diagonals does a regular 10-sided polygon have?\n\nUse this API documentation for reference: [{\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 839,
    "text": "Example:\n\nInstruction:\nGroup a list of numbers [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] into random 3-sized subsets. Then, construct a URL to the 'main' branch of the 'my_repo' GitHub repo. Finally, decode the URL as a string.\n\nUse this API documentation for reference: [{\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Returns `True` if all elements in `numbers` are even, and `False` otherwise.\", \"name\": \"is_all_even\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"`True` if all elements in `numbers` are even, and `False` otherwise.\\n\\nExamples:\\n    >>> is_all_even([2, 4, 6])\\n    True\\n    >>> is_all_even([1, 2, 3, 4])\\n    False\\n    >>> is_all_even([])\\n    True\\n    >>> is_all_even([3, 5, 7])\\n    False\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Groups a list of numbers into random k-sized subsets.\", \"name\": \"group_random_subsets\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of subsets.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"k\": {\"description\": \"The size of the subsets.\", \"type\": \"integer\"}, \"numbers\": {\"description\": \"The list of numbers to group.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\", \"k\"], \"type\": \"object\"}}, {\"description\": \"Converts a string from snake case to dash case.\", \"name\": \"snake_to_dash\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input string converted to dash case.\", \"type\": [\"object\", \"string\"]}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string in snake case.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a string with a ternary-like condition: 'odd' if n is odd else 'even'.\", \"name\": \"ternary_like_condition\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string: 'odd' if n is odd, 'even' if n is even.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The integer to check.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Sum up all numbers in a given list of floats that are between 0.0 and 1.0.\", \"name\": \"sum_between_0_and_1\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The sum of all floats in the list that are between 0.0 and 1.0.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"float_list\": {\"description\": \"A list of floats.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"float_list\"], \"type\": \"object\"}}, {\"description\": \"Maps a URL path to a URL prefix.\", \"name\": \"map_url_prefix\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The mapped URL prefix.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"path\": {\"description\": \"The URL path to map.\", \"type\": \"string\"}}, \"required\": [\"path\"], \"type\": \"object\"}}, {\"description\": \"Constructs a URL to a specific branch of a GitHub repo.\", \"name\": \"get_branch_url\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A URL string that follows the format `https://github.com/<repo>/tree/<branch>`.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"branch\": {\"description\": \"The name of the branch.\", \"type\": \"string\"}, \"repo\": {\"description\": \"The name of the GitHub repo.\", \"type\": \"string\"}}, \"required\": [\"repo\", \"branch\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Decodes a string or bytes object as a string if it's a bytes object.\\nIf it's already a string, it returns it without any modifications.\\nHandles potential decoding errors by returning None or a default string.\", \"name\": \"decode_string_or_bytes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"default_string\": {\"description\": \"The default string to return in case of decoding errors.\", \"type\": \"string\"}, \"input_value\": {\"description\": \"The input value to be decoded.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"input_value\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"group_random_subsets\", \"arguments\": {\"numbers\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], \"k\": 3}, \"label\": \"$var1\"}, {\"name\": \"get_branch_url\", \"arguments\": {\"repo\": \"my_repo\", \"branch\": \"main\"}, \"label\": \"$var2\"}, {\"name\": \"decode_string_or_bytes\", \"arguments\": {\"input_value\": \"$var2.output_0$\"}, \"label\": \"$var3\"}]\n\nGold Answer:\nhttps://github.com/my_repo/tree/main\n\nNow solve:\nFind the constant k so that : -x2 - (k + 8)x - 8 = -(x - 2)(x - 4)\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 840,
    "text": "Example:\n\nInstruction:\nGenerate a random string of length 10 consisting of only lower case letters. Then, convert the string to a float if possible, or return the original string otherwise.\n\nUse this API documentation for reference: [{\"description\": \"Reads an input file, parses each line, and creates a list of tuples with the first three elements from the parsed line.\", \"name\": \"read_input_file\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples containing the first three elements from each line in the input file.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The name of the input file.\", \"type\": \"string\"}}, \"required\": [\"filename\"], \"type\": \"object\"}}, {\"description\": \"Calculates the parent node of a node in a binary heap.\", \"name\": \"calculate_parent_node\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The index of the parent node.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"node_index\": {\"description\": \"The index of the node.\", \"type\": \"integer\"}, \"total_nodes\": {\"description\": \"The total number of nodes in the heap.\", \"type\": \"integer\"}}, \"required\": [\"node_index\", \"total_nodes\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the quotient and remainder of the integer division of a and b.\", \"name\": \"get_div_mod\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The dividend.\", \"type\": \"integer\"}, \"b\": {\"description\": \"The divisor.\", \"type\": \"integer\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Creates a list of filenames using a pattern based on the values of nums and prefix.\", \"name\": \"create_filenames\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of filenames.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"prefix\": {\"description\": \"A string to be included in the filenames.\", \"type\": \"string\"}}, \"required\": [\"nums\", \"prefix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the mean of a four-dimensional input array along the first two axes.\", \"name\": \"four_axis_mean\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"input_array\": {\"description\": \"The input array to calculate the mean of.\", \"type\": \"object\"}}, \"required\": [\"input_array\"], \"type\": \"object\"}}, {\"description\": \"Converts a string to a float if possible, or returns the original string otherwise.\", \"name\": \"convert_to_float_or_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The converted float or the original string.\", \"type\": [\"integer\", \"number\", \"string\"]}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string to be converted.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Splits an HTML string into a list of tuples, where each tuple represents a tag and its corresponding content.\\nThe function returns an empty list if the input is not well-formed.\\nFor each tag, the tuple contains the tag name and its content, where the content may include nested tags.\", \"name\": \"split_tags\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples, where each tuple represents a tag and its corresponding content.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"html\": {\"description\": \"The HTML string to be split.\", \"type\": \"string\"}}, \"required\": [\"html\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Generates a Python AST to evaluate a given mathematical expression.\", \"name\": \"generate_ast\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"An AST representing the parsed expression.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"expression\": {\"description\": \"A string representing a mathematical expression.\", \"type\": \"string\"}}, \"required\": [\"expression\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Shapes rewards in reinforcement learning by subtracting the mean reward from each reward.\", \"name\": \"shape_rewards\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of shaped rewards.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"rewards\": {\"description\": \"A list of rewards.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"rewards\"], \"type\": \"object\"}}, {\"description\": \"Maps a location type value to a string name using the loc_types dictionary.\", \"name\": \"map_location_type\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The mapped string name if the location type value is valid and exists in the loc_types dictionary.\\n    None if the location type value is invalid or does not exist in the loc_types dictionary.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"loc_types\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"The dictionary mapping location type values to string names.\", \"type\": \"object\"}, \"location_type\": {\"description\": \"The location type value.\", \"type\": \"string\"}}, \"required\": [\"location_type\", \"loc_types\"], \"type\": \"object\"}}, {\"description\": \"Returns a new list containing the middle two elements of the input list.\\n\\nIf there are an odd number of elements, the middle element should be included in the returned list.\\nIf there are two middle elements, the function should return a list containing both elements.\\nIf the input list is empty, the function should return an empty list.\", \"name\": \"get_middle_elements\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list containing the middle elements of the input list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}, {\"description\": \"Generates a random string of length `n` consisting of only lower case letters.\", \"name\": \"gen_random_str_with_lower_case\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A random string of length `n` consisting of only lower case letters.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The length of the random string.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Parses an XML file and extracts the `type`, `name`, and `value` attributes of all `enum` elements.\\nReturns a dictionary with the element's `type` as the key and a list of dictionaries containing `name` and `value` attributes as the value.\", \"name\": \"parse_xml_enum\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"xml_file\": {\"description\": \"The path to the XML file.\", \"type\": \"string\"}}, \"required\": [\"xml_file\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"gen_random_str_with_lower_case\", \"arguments\": {\"n\": 10}, \"label\": \"$var1\"}, {\"name\": \"convert_to_float_or_string\", \"arguments\": {\"input_string\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\nudaxihhexd\n\nNow solve:\nA man traveled a total distance of 1200 km. He traveled one-third of the whole trip by plane and the distance traveled by train is two-thirds of the distance traveled by bus. If he traveled by train, plane and bus, how many kilometers did he travel by bus?\n\nUse this API documentation for reference: [{\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 841,
    "text": "Example:\n\nInstruction:\nCompute the area of a circle with radius 5, and then return a formatted string containing the name 'John' and the computed area as the age.\n\nUse this API documentation for reference: [{\"description\": \"Computes the area of a circle given its radius.\", \"name\": \"compute_area_circle\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"radius\": {\"description\": \"The radius of the circle.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"radius\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns a string with the following format: \\\"@\\\" + \\\"x\\\" * (n - 2) + \\\"@\\\" if n > 1,\\notherwise returns \\\"@\\\".\", \"name\": \"string_format_function\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string with the desired format.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"An integer or float representing the number of characters in the string.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Constructs a dictionary with the desired format from a given dictionary.\", \"name\": \"create_output_dictionary\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"out: A dictionary with the desired format.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"data\": {\"additionalProperties\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"description\": \"A dictionary mapping each pair of names to a list of numbers.\", \"type\": \"object\"}}, \"required\": [\"data\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Replicates characters in a string based on their numeric value.\", \"name\": \"replicate_chars\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string with characters replicated as many times as the numeric value of the character.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Traverses a list of numbers and finds the maximum value and its index.\\nReturns the maximum value, the index of the maximum value, and the original list.\", \"name\": \"traverse_and_find_max\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing the maximum value, the index of the maximum value, and the original list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"list_of_numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"list_of_numbers\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Finds the first element in the intersection of two lists.\", \"name\": \"find_first\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The first element in the intersection of the two lists, or -1 if the intersection is empty.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"list_a\": {\"description\": \"The first list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"list_b\": {\"description\": \"The second list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"list_a\", \"list_b\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Returns a formatted string containing the name and age.\", \"name\": \"info\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"age\": {\"description\": \"The age of the person.\", \"type\": [\"integer\", \"number\"]}, \"name\": {\"description\": \"The name of the person.\", \"type\": \"string\"}}, \"required\": [\"name\", \"age\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a concatenated string representation of the values of a dictionary, separated by a comma and space.\\nThe string is surrounded by a pair of parentheses, and the keys of the dictionary are considered optional.\", \"name\": \"get_dict_values_as_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string with keys and values separated by commas and surrounded by parentheses.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"d\": {\"additionalProperties\": {}, \"description\": \"The input dictionary.\", \"type\": \"object\"}}, \"required\": [\"d\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"compute_area_circle\", \"arguments\": {\"radius\": 5}, \"label\": \"$var1\"}, {\"name\": \"info\", \"arguments\": {\"name\": \"John\", \"age\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\nName: John, Age: 78.54\n\nNow solve:\nlamp a flashes every 6 seconds , lamp b flashes every 8 seconds , lamp c flashes every 10 seconds . at a certain instant of time all 3 lamps flash simultaneously . during the period of 6 minutes after that how many times will exactly two lamps flash ? ( please include any flash of exactly two lights which occurs at the 6 minute mark . )\n\nUse this API documentation for reference: [{\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 842,
    "text": "Example:\n\nInstruction:\nI want to compute the mean of a 2D list [[1, 2, 3], [4, 5, 6], [7, 8, 9]], then perform modular exponentiation with the mean as the base, 2 as the exponent, and 3 as the modulus.\n\nUse this API documentation for reference: [{\"description\": \"Parses a log line in JSON format and returns a Python object.\\nIf the log line is not valid JSON, returns None.\", \"name\": \"parse_json_log_line\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"log_line\": {\"description\": \"The log line to parse.\", \"type\": \"string\"}}, \"required\": [\"log_line\"], \"type\": \"object\"}}, {\"description\": \"Reads the version number from a file.\", \"name\": \"read_file_version\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing the major, minor, and patch version numbers.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the file.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Flattens a nested list of integers or strings into a 1-dimensional list.\", \"name\": \"flat_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The nested list to be flattened.\", \"items\": {\"type\": [\"array\", \"integer\", \"string\"]}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}, {\"description\": \"Processes a list of API responses and returns a list of key-value pairs, where the keys are the specific API responses and the values are the number of occurrences in the original list.\", \"name\": \"process_api_responses\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of key-value pairs, where the keys are the API responses and the values are the number of occurrences in the original list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"original_list\": {\"description\": \"A list of API responses.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"original_list\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Creates a temporary json file and writes a dictionary to it.\", \"name\": \"create_temporary_json_file\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The temporary file object.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"description\": \"The dictionary to write to the temporary file.\", \"type\": \"object\"}}, \"required\": [\"dictionary\"], \"type\": \"object\"}}, {\"description\": \"Returns the negative index of a given number from the end of a sequence.\", \"name\": \"find_negative_index\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"num\": {\"description\": \"The number to find.\", \"type\": \"integer\"}, \"sequence\": {\"description\": \"The sequence to search in.\", \"type\": [\"object\", \"object\", \"string\"]}}, \"required\": [\"sequence\", \"num\"], \"type\": \"object\"}}, {\"description\": \"Replaces all occurrences of the `{code}` variable in a given XML text with the provided code and returns the modified XML text.\", \"name\": \"replace_code\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"code\": {\"description\": \"The code to replace `{code}`.\", \"type\": [\"integer\", \"string\"]}, \"xml_text\": {\"description\": \"The XML text to search in.\", \"type\": \"string\"}}, \"required\": [\"xml_text\", \"code\"], \"type\": \"object\"}}, {\"description\": \"Simulates a coin toss and returns the outcome.\", \"name\": \"coin_toss\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"p\": {\"description\": \"The probability of getting a head.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"p\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Computes the mean of a two-dimensional list of integers or floats.\", \"name\": \"compute_mean\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The mean of the elements in the two-dimensional list.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"two_d_list\": {\"description\": \"A two-dimensional list of integers or floats.\", \"items\": {\"items\": {\"type\": [\"integer\", \"number\"]}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"two_d_list\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Retrieves the text from a JSON file, removes all line breaks, and returns a concatenated string.\", \"name\": \"get_concatenated_text\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string containing the concatenated text with all line breaks removed.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"json_file_path\": {\"description\": \"The path to the JSON file.\", \"type\": \"string\"}}, \"required\": [\"json_file_path\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of `n` available ports using lambda expressions and context managers.\", \"name\": \"get_ports\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The number of available ports to return.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Transposes a 2D NumPy array by switching the row and column indices.\\n\\nThe transposed array has the same data as the original, but its rows and columns\\nare swapped. The function handles any-sized 2D arrays, and returns `None` if a\\nnon-2D array is passed to it. If the input array is empty, the function returns\\nan empty array.\", \"name\": \"transpose_2D_array\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The transposed 2D NumPy array, or `None` if the input array is not 2D.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"array\": {\"description\": \"The input 2D NumPy array.\", \"type\": \"object\"}}, \"required\": [\"array\"], \"type\": \"object\"}}, {\"description\": \"Calculates the remainder of a number `a` raised to a power `b` modulo `c`.\", \"name\": \"modular_exponentiation\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The base number.\", \"type\": \"integer\"}, \"b\": {\"description\": \"The exponent.\", \"type\": \"integer\"}, \"c\": {\"description\": \"The modulus.\", \"type\": \"integer\"}}, \"required\": [\"a\", \"b\", \"c\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"compute_mean\", \"arguments\": {\"two_d_list\": [[1, 2, 3], [4, 5, 6], [7, 8, 9]]}, \"label\": \"$var1\"}, {\"name\": \"modular_exponentiation\", \"arguments\": {\"a\": \"$var1.output_0$\", \"b\": 2, \"c\": 3}, \"label\": \"$var2\"}]\n\nGold Answer:\n1.0\n\nNow solve:\nThe difference between the compound interest compounded annually and simple interest for 2 years at 20% per annum is Rs.288. Find the principal?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 843,
    "text": "Example:\n\nInstruction:\nIn a class of 50 students, 20 play Baseball, 15 play Cricket and 11 play Football. 7 play both Baseball and Cricket, 4 play Cricket and Football and 5 play Baseball and football. If 18 students do not play any of these given sports, how many students play exactly two of these sports?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 20, \"arg_1\": 15}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 11}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 7, \"arg_1\": 4}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 5}}, {\"name\": \"subtract\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"add\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 18}}, {\"name\": \"subtract\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": 50, \"arg_1\": \"$var_6.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": 5, \"arg_1\": \"$var_7.result$\"}}, {\"name\": \"add\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": 20, \"arg_1\": 15}}, {\"name\": \"add\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_9.result$\", \"arg_1\": 11}}, {\"name\": \"add\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": 7, \"arg_1\": 4}}, {\"name\": \"add\", \"label\": \"$var_12\", \"arguments\": {\"arg_0\": \"$var_11.result$\", \"arg_1\": 5}}, {\"name\": \"subtract\", \"label\": \"$var_13\", \"arguments\": {\"arg_0\": \"$var_10.result$\", \"arg_1\": \"$var_12.result$\"}}, {\"name\": \"add\", \"label\": \"$var_14\", \"arguments\": {\"arg_0\": \"$var_13.result$\", \"arg_1\": 18}}, {\"name\": \"subtract\", \"label\": \"$var_15\", \"arguments\": {\"arg_0\": 50, \"arg_1\": \"$var_14.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_16\", \"arguments\": {\"arg_0\": 7, \"arg_1\": \"$var_15.result$\"}}, {\"name\": \"add\", \"label\": \"$var_17\", \"arguments\": {\"arg_0\": 20, \"arg_1\": 15}}, {\"name\": \"add\", \"label\": \"$var_18\", \"arguments\": {\"arg_0\": \"$var_17.result$\", \"arg_1\": 11}}, {\"name\": \"add\", \"label\": \"$var_19\", \"arguments\": {\"arg_0\": 7, \"arg_1\": 4}}, {\"name\": \"add\", \"label\": \"$var_20\", \"arguments\": {\"arg_0\": \"$var_19.result$\", \"arg_1\": 5}}, {\"name\": \"subtract\", \"label\": \"$var_21\", \"arguments\": {\"arg_0\": \"$var_18.result$\", \"arg_1\": \"$var_20.result$\"}}, {\"name\": \"add\", \"label\": \"$var_22\", \"arguments\": {\"arg_0\": \"$var_21.result$\", \"arg_1\": 18}}, {\"name\": \"subtract\", \"label\": \"$var_23\", \"arguments\": {\"arg_0\": 50, \"arg_1\": \"$var_22.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_24\", \"arguments\": {\"arg_0\": 4, \"arg_1\": \"$var_23.result$\"}}, {\"name\": \"add\", \"label\": \"$var_25\", \"arguments\": {\"arg_0\": \"$var_16.result$\", \"arg_1\": \"$var_24.result$\"}}, {\"name\": \"add\", \"label\": \"$var_26\", \"arguments\": {\"arg_0\": \"$var_8.result$\", \"arg_1\": \"$var_25.result$\"}}]\n\nGold Answer:\n10.0\n\nNow solve:\nA piece of work can finish by a certain number of men in 100 days. If however, there were 10 men less,\nit would take 10 days more for the work to be finished. How many men were there originally?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 844,
    "text": "Example:\n\nInstruction:\nA cistern 10 meters long and 4 meters wide contains water up to a depth of 1 meter 25 cm. What is the total area of the wet surface?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 10, \"arg_1\": 4}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 25, \"arg_1\": 100}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 4, \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 2, \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"add\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_5.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": 25, \"arg_1\": 100}}, {\"name\": \"add\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_7.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": 10, \"arg_1\": \"$var_8.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": 2, \"arg_1\": \"$var_9.result$\"}}, {\"name\": \"add\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": \"$var_10.result$\"}}]\n\nGold Answer:\n75.0\n\nNow solve:\nI want to convert the coordinate (10, 20) to tile coordinates, parse the string field 'field_1' from the input string 'field_1=value_1', and then check if the parsed value does not contain any of the special characters '@', '#', '$', '%', or '^'.\n\nUse this API documentation for reference: [{\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Tokenizes a sequence into a list of tokens, where each token is a contiguous subsequence of characters delimited by the given delimiter.\", \"name\": \"tokenize_sequence\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tokens.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"delimiter\": {\"description\": \"The delimiter used to separate tokens.\", \"type\": \"string\"}, \"sequence\": {\"description\": \"The input sequence to be tokenized.\", \"type\": \"string\"}}, \"required\": [\"sequence\", \"delimiter\"], \"type\": \"object\"}}, {\"description\": \"Checks whether a given string matches a given wildcard pattern.\\n\\nThe wildcard pattern can contain the wildcards '?' and '*' (no other characters).\\nThe '?' wildcard matches any single character, while the '*' wildcard matches\\nzero or more characters. The function returns True if the string matches the\\npattern, False otherwise.\", \"name\": \"is_matching\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"pattern\": {\"description\": \"The wildcard pattern.\", \"type\": \"string\"}, \"string\": {\"description\": \"The string to be matched.\", \"type\": \"string\"}}, \"required\": [\"string\", \"pattern\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Parses a string field and returns the value of the field if it exists.\", \"name\": \"parse_string_field\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The value of the field if it exists, or None if the field does not exist.\", \"type\": [\"integer\", \"string\"]}}}, \"parameters\": {\"properties\": {\"field_name\": {\"description\": \"The name of the field to search for.\", \"type\": \"string\"}, \"input_string\": {\"description\": \"The input string in the format \\\"field_name=field_value\\\".\", \"type\": \"string\"}}, \"required\": [\"input_string\", \"field_name\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Determines if there is at least one UTR exon contained within the given range.\", \"name\": \"contains_utr\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A boolean value indicating whether there is at least one UTR exon contained within the given range.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"end_pos\": {\"description\": \"The end position of the range.\", \"type\": \"integer\"}, \"start_pos\": {\"description\": \"The start position of the range.\", \"type\": \"integer\"}, \"transcript\": {\"additionalProperties\": {\"items\": {\"additionalProperties\": {\"type\": \"integer\"}, \"type\": \"object\"}, \"type\": \"array\"}, \"description\": \"A dictionary containing exons and UTR information.\", \"type\": \"object\"}}, \"required\": [\"transcript\", \"start_pos\", \"end_pos\"], \"type\": \"object\"}}, {\"description\": \"Returns the integer value 5.\", \"name\": \"return_five\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The integer value 5.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Checks if a string contains any of the following characters: `@` or `#` or `$` or `%` or `^`.\", \"name\": \"check_special_characters\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the string does not contain any of the special characters, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The string to check.\", \"type\": \"object\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Converts a coordinate to tile coordinates.\\n\\nThe tile coordinates are defined as a pair of integers (tx, ty) where tx is the x-coordinate of the top-left corner of the tile, and ty is the y-coordinate of the top-right corner of the tile.\", \"name\": \"convert_coordinate_to_tile_coordinates\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple of integers (tx, ty) representing the tile coordinates.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The x-coordinate of the input coordinate.\", \"type\": \"integer\"}, \"y\": {\"description\": \"The y-coordinate of the input coordinate.\", \"type\": \"integer\"}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Returns a list containing the square root of each element in the input list, rounded to the nearest integer.\", \"name\": \"square_roots\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of integers.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Calculates an approximation of the square root of a number using Newton's method.\", \"name\": \"approximate_square_root\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The number to calculate the square root of.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Concatenates the given strings `s1` and `s2` and returns the concatenated string.\\nIf the concatenated string is longer than `n`, only return the first `n` characters of the concatenated string.\", \"name\": \"concatenate_and_limit\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The maximum length of the returned string.\", \"type\": [\"integer\", \"number\"]}, \"s1\": {\"description\": \"The first string to concatenate.\", \"type\": \"string\"}, \"s2\": {\"description\": \"The second string to concatenate.\", \"type\": \"string\"}}, \"required\": [\"s1\", \"s2\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Returns the name of the user with the minimum distance.\", \"name\": \"get_min_distance\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"users\": {\"description\": \"A list of tuples. Each tuple has two elements: the user's name and the user's distance from a certain location.\", \"items\": {\"prefixItems\": [{\"type\": \"string\"}, {\"type\": \"number\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"users\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns the largest three numbers in a list of integers.\", \"name\": \"largest_three_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A list of integers with length 10.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 845,
    "text": "Example:\n\nInstruction:\nSusan drives from city A to city B. After two hours of driving she noticed that she covered 80 km and calculated that, if she continued driving at the same speed, she would end up been 15 minutes late. So she increased her speed by 10 km/hr and she arrived at city B 36 minutes earlier than she planned.\nFind the distance between cities A and B.\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 36, \"arg_1\": 60}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 80, \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 10}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 80, \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"add\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": 15, \"arg_1\": 60}}, {\"name\": \"subtract\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": \"$var_7.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": 80, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_9.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": 80, \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_12\", \"arguments\": {\"arg_0\": \"$var_11.result$\", \"arg_1\": 10}}, {\"name\": \"divide\", \"label\": \"$var_13\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_12.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_14\", \"arguments\": {\"arg_0\": \"$var_10.result$\", \"arg_1\": \"$var_13.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_15\", \"arguments\": {\"arg_0\": \"$var_8.result$\", \"arg_1\": \"$var_14.result$\"}}, {\"name\": \"add\", \"label\": \"$var_16\", \"arguments\": {\"arg_0\": \"$var_15.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n250.0\n\nNow solve:\nIn 12 pumps can raise 1218 tons of water in 11 days of 9 hrs each, how many pumps will raise 2030 tons of water in 12 days of 11 hrs each?\n\nUse this API documentation for reference: [{\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 846,
    "text": "Example:\n\nInstruction:\nWhat will be the area of a semi-circle of 14 metres diameter?\n\nUse this API documentation for reference: [{\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 14, \"arg_1\": 2}}, {\"name\": \"circle_area\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 2}}]\n\nGold Answer:\n77.0\n\nNow solve:\nThe effective annual rate of interest corresponding to a nominal rate of 14% per annum payable half-yearly is?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 847,
    "text": "Example:\n\nInstruction:\nA clock shows the time as 9 a.m. If the minute hand gains 6 minutes every hour, how many minutes will the clock gain by 6 p.m.?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 6}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 6}}]\n\nGold Answer:\n54.0\n\nNow solve:\nModify the string \"Hello, World!\" based on whether it starts with \"Hello\". Then, generate a hash-based message authentication code (HMAC) using SHA256 for the modified string and the secret key \"secret\".\n\nUse this API documentation for reference: [{\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Generates a random number from a given seed.\", \"name\": \"generate_random_number_from_seed\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"seed\": {\"description\": \"The seed value.\", \"type\": \"integer\"}, \"timestamp\": {\"description\": \"The timestamp value.\", \"type\": \"number\"}}, \"required\": [\"timestamp\", \"seed\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Finds all matching substrings in a larger string using a regex pattern.\", \"name\": \"find_matching_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of matching substrings that match the regex pattern.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"pattern\": {\"description\": \"The regex pattern to search for.\", \"type\": \"string\"}, \"string\": {\"description\": \"The string to search in.\", \"type\": \"string\"}}, \"required\": [\"pattern\", \"string\"], \"type\": \"object\"}}, {\"description\": \"Generates a hash-based message authentication code (HMAC) using SHA256 for a given message, secret key, and base64 encoding.\", \"name\": \"hmac_sha256\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"message\": {\"description\": \"The message to be authenticated.\", \"type\": \"string\"}, \"secret\": {\"description\": \"The secret key used to generate the HMAC.\", \"type\": \"string\"}}, \"required\": [\"message\", \"secret\"], \"type\": \"object\"}}, {\"description\": \"Calculates the PageRank score of a given URL.\", \"name\": \"get_page_rank_score\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The PageRank score of the page. If the page is not found or if the page is not part of the database,\\n    the function returns 0.0.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"url\": {\"description\": \"The URL of the page.\", \"type\": \"string\"}}, \"required\": [\"url\"], \"type\": \"object\"}}, {\"description\": \"Creates a numpy array of numbers from start to stop by step.\", \"name\": \"get_numpy_range\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"start\": {\"description\": \"The starting number of the range.\", \"type\": \"number\"}, \"step\": {\"description\": \"The difference between each number in the range. Default is 1.\", \"type\": \"number\"}, \"stop\": {\"description\": \"The ending number of the range.\", \"type\": \"number\"}}, \"required\": [\"start\", \"stop\"], \"type\": \"object\"}}, {\"description\": \"Modifies a string based on whether it starts with \\\"Hello\\\".\", \"name\": \"modified_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A modified string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"nullable\": true, \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Finds the smallest integer that is not present in the list.\", \"name\": \"find_smallest_missing_integer\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The smallest integer that is not present in the list.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"values\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"values\"], \"type\": \"object\"}}, {\"description\": \"Generates the C code for a for loop that prints the numbers from 1 to 10.\", \"name\": \"generate_c_for_loop_code\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"format_str\": {\"description\": \"The format string used to format the numbers as strings before printing.\", \"type\": \"object\"}}, \"required\": [\"format_str\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Checks whether a user is authorized to access a resource.\", \"name\": \"is_authorized\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"resource\": {\"description\": \"The resource object.\", \"nullable\": true, \"type\": \"object\"}, \"user\": {\"description\": \"The user object.\", \"nullable\": true, \"type\": \"object\"}}, \"required\": [\"user\", \"resource\"], \"type\": \"object\"}}, {\"description\": \"Calculates the median value of a list of numbers.\", \"name\": \"median\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The median value of the list. If the list is empty, returns None.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": [\"integer\", \"number\"]}, \"type\": \"array\"}}, \"required\": [\"data\"], \"type\": \"object\"}}, {\"description\": \"Converts the input array to a numpy array if it is not already, checks if all elements are zero, calculates the sum of all elements, and then divides each element by the sum. Finally, it rounds each element to 4 decimal places.\", \"name\": \"convert_to_ratio_array\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A numpy array with the same dimensions as the input array, where each element is the ratio of the corresponding element in the input array to the sum of all elements in the input array, rounded to 4 decimal places.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"arr\": {\"description\": \"The input numpy array.\", \"type\": \"object\"}}, \"required\": [\"arr\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the intersection of two lists.\", \"name\": \"intersect_lists\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"list1\": {\"description\": \"A list of integers or None.\", \"items\": {\"type\": \"integer\"}, \"nullable\": true, \"type\": \"array\"}, \"list2\": {\"description\": \"A list of integers or None.\", \"items\": {\"type\": \"integer\"}, \"nullable\": true, \"type\": \"array\"}}, \"required\": [\"list1\", \"list2\"], \"type\": \"object\"}}, {\"description\": \"Converts a string into a list of binary strings representing the UTF-8 encoded bytes.\", \"name\": \"utf8_to_binary\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of binary strings, where each string represents a byte from the UTF-8 encoded string.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 848,
    "text": "Example:\n\nInstruction:\nI have a list of 2D coordinates [[1, 2], [3, 4], [5, 6]]. I want to find the minimum distance between any two points, then calculate the square root of this distance rounded up to the nearest integer.\n\nUse this API documentation for reference: [{\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Sorts the entries of a frequency distribution of words in descending order using a Python dictionary.\", \"name\": \"sort_freq_dist\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the words sorted in descending order of their frequencies.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"freq_dist\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"A dictionary where the keys are words and the values are positive integers representing the frequencies of those words.\", \"type\": \"object\"}}, \"required\": [\"freq_dist\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns the MD5 digest of a given file.\", \"name\": \"md5_digest\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The name of the file to compute the MD5 digest for.\", \"type\": \"string\"}}, \"required\": [\"filename\"], \"type\": \"object\"}}, {\"description\": \"Calculates the minimum distance between any two points in a list of 2D coordinates.\", \"name\": \"find_minimum_distance\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The minimum distance between any two points.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"points\": {\"description\": \"A list of 2D coordinates (x, y).\", \"items\": {\"prefixItems\": [{\"type\": \"number\"}, {\"type\": \"number\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"points\"], \"type\": \"object\"}}, {\"description\": \"Calculates the total wages for the employees in the records list.\", \"name\": \"get_total_wages\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The total wages for the employees in the records list.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"records\": {\"description\": \"A list of tuples, where each tuple contains an employee's ID and their hourly wage.\", \"items\": {\"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"number\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"records\"], \"type\": \"object\"}}, {\"description\": \"Expands a given scope dictionary with additional properties specified in a list.\", \"name\": \"expand_scope\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new scope dictionary containing all properties inherited from the current scope,\\n    plus additional properties that are explicitly specified in the props list.\\n    If a property is not found in the current scope, it is added to the new scope\\n    with a value of None.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"props\": {\"description\": \"A list of property names to expand.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"scope\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary representing the current scope.\", \"type\": \"object\"}}, \"required\": [\"scope\", \"props\"], \"type\": \"object\"}}, {\"description\": \"Performs a generic unsqueeze operation on a PyTorch tensor.\", \"name\": \"unsqueeze_tensor\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"dim\": {\"description\": \"The dimension index at which to insert a new dimension of size 1.\", \"type\": \"integer\"}, \"tensor\": {\"description\": \"The input PyTorch tensor.\", \"type\": \"object\"}}, \"required\": [\"tensor\", \"dim\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Formats a string by replacing placeholders with their corresponding values from a dictionary.\", \"name\": \"str_format_named_params\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"params\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary of placeholder names and their corresponding values.\", \"type\": \"object\"}, \"string\": {\"description\": \"The string to format.\", \"type\": \"string\"}}, \"required\": [\"string\", \"params\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Searches for consecutive sequences of digits in a string.\", \"name\": \"consecutive_sequences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings containing consecutive sequences of digits found in the input string.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string to search for consecutive sequences of digits.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Wraps a given coordinate to fit within the range of the image.\", \"name\": \"wrapped_coordinates\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The wrapped coordinate (x', y').\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"coordinates\": {\"description\": \"The original coordinate (x, y).\", \"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"image_height\": {\"description\": \"The height of the image.\", \"type\": \"integer\"}, \"image_width\": {\"description\": \"The width of the image.\", \"type\": \"integer\"}}, \"required\": [\"coordinates\", \"image_width\", \"image_height\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the square root of a number rounded up to the nearest integer.\", \"name\": \"sqrt_rounded_up\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The square root of the input number rounded up to the nearest integer.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The input number.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"x\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"find_minimum_distance\", \"arguments\": {\"points\": [[1, 2], [3, 4], [5, 6]]}, \"label\": \"$var1\"}, {\"name\": \"sqrt_rounded_up\", \"arguments\": {\"x\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n2\n\nNow solve:\nOak Street begins at Pine Street and runs directly east for 2 kilometers until it ends when it meets Maple Street. Oak Street is intersected every 400 meters by a perpendicular street, and each of those streets other than Pine Street and Maple Street is given a number beginning at 1st Street (one block east of Pine Street) and continuing consecutively (2nd Street, 3rd Street, etc...) until the highest-numbered street one block west of Maple Street. What is the highest-numbered street that intersects Oak Street?\n\nUse this API documentation for reference: [{\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 849,
    "text": "Example:\n\nInstruction:\nRs 50000 is divided into two parts One part is given to a person with 10% interest and another part is given to a person with 20 % interest. At the end of first year he gets profit 8000 Find money given by 10%?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 50000, \"arg_1\": 20}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 100}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 8000}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 10, \"arg_1\": 100}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_4.result$\"}}]\n\nGold Answer:\n20000.0\n\nNow solve:\nAfter decreasing 24% in the price of an article costs Rs.1216. Find the actual cost of an article?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 850,
    "text": "Example:\n\nInstruction:\nIn a class of 40 students, 2 students did not borrow any books from the library, 12 students each borrowed 1 book, 11 students each borrowed 2 books, and the rest borrowed at least 3 books. If the average number of books per student was 2, what is the maximum number of books any single student could have borrowed?\n\nUse this API documentation for reference: [{\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 40, \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 12, \"arg_1\": 1}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 11}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 2}}, {\"name\": \"subtract\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 40, \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": 3}}, {\"name\": \"multiply\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": 12, \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": 11, \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_8.result$\", \"arg_1\": \"$var_9.result$\"}}, {\"name\": \"add\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": \"$var_7.result$\", \"arg_1\": \"$var_10.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_12\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_11.result$\"}}]\n\nGold Answer:\n4.0\n\nNow solve:\nA man can do a job in 15 days. His father takes 20 days and his son finishes it in 15 days. How long will they take to complete the job if they all work together?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 851,
    "text": "Example:\n\nInstruction:\nI have a date string \"2022-01-01\". I want to format it to \"MM-DD-YYYY\". Then, I want to calculate the difference between the number of characters in the formatted date string and the number of characters in the string \"Hello, World!\".\n\nUse this API documentation for reference: [{\"description\": \"Dynamically loads a module by name and retrieves an attribute from the module.\", \"name\": \"load_and_retrieve_attribute\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The attribute from the module.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"attribute_name\": {\"description\": \"The name of the attribute to retrieve from the module.\", \"type\": \"string\"}, \"module_name\": {\"description\": \"The name of the module to load.\", \"type\": \"string\"}}, \"required\": [\"module_name\", \"attribute_name\"], \"type\": \"object\"}}, {\"description\": \"Returns the first positive integer that is not in the list.\\nIf all integers are positive, returns the next positive integer.\\nIf there are no positive integers in the list, returns 1.\", \"name\": \"next_positive\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"arr\": {\"description\": \"A non-empty list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"arr\"], \"type\": \"object\"}}, {\"description\": \"Calculates the number of characters that are different between two strings.\", \"name\": \"count_differences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of different characters between the two strings, or `-1` if the strings are not of equal length.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"str1\": {\"description\": \"The first string.\", \"type\": \"string\"}, \"str2\": {\"description\": \"The second string.\", \"type\": \"string\"}}, \"required\": [\"str1\", \"str2\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of all numeric elements in a list.\\nIf any element is not numeric, the function returns None.\", \"name\": \"sum_numeric_elements\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"elements\": {\"description\": \"A list of elements to sum.\", \"items\": {\"type\": [\"integer\", \"number\"]}, \"type\": \"array\"}}, \"required\": [\"elements\"], \"type\": \"object\"}}, {\"description\": \"Converts a code snippet into a list of line numbers and column numbers where the given string appears.\\nEach element of the returned list is a tuple consisting of the line number and column number within the string\\nwhere the given substring is found.\", \"name\": \"find_substring_positions\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples, where each tuple contains the line number and column number where the substring is found.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The code snippet to search.\", \"type\": \"string\"}, \"substring\": {\"description\": \"The substring to find within the code snippet.\", \"type\": \"string\"}}, \"required\": [\"string\", \"substring\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of all elements in the arguments, flattening all lists.\", \"name\": \"my_sum\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"args\": {\"description\": \"One or more arguments, each of which can be an integer or a list.\", \"type\": [\"array\", \"integer\"]}}, \"required\": [\"args\"], \"type\": \"object\"}}, {\"description\": \"Formats a date string from \\\"YYYY-MM-DD\\\" to \\\"MM-DD-YYYY\\\".\", \"name\": \"date_format\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The formatted date string in the format \\\"MM-DD-YYYY\\\".\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input date string in the format \\\"YYYY-MM-DD\\\".\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Formats and removes special characters from a given string.\", \"name\": \"format_and_remove_special_characters\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The formatted string with special characters removed.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Calculates the difference between two numbers `x` and `y`.\", \"name\": \"difference_calculator\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The first number.\", \"type\": [\"integer\", \"number\"]}, \"y\": {\"description\": \"The second number.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of three slices from the input list, where each slice is of length 3.\\nIf the input list's length is less than 3, the function returns an empty list.\", \"name\": \"get_three_slices\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"input_list\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"date_format\", \"arguments\": {\"s\": \"2022-01-01\"}, \"label\": \"$var1\"}, {\"name\": \"count_differences\", \"arguments\": {\"str1\": \"$var1.output_0$\", \"str2\": \"Hello, World!\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n-1\n\nNow solve:\nA set of consecutive positive integers beginning with 1 is written on the blackboard. A student came along and erased one number. The average of the remaining numbers is 35*7/17. What was the number erased?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 852,
    "text": "Example:\n\nInstruction:\nI have a date string \"12/05/2022\". I want to extract the year from it, then check if it is an integer, and finally calculate the perimeter of a circle with that year as the radius.\n\nUse this API documentation for reference: [{\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the root mean squared error (RMSE) between two array-like objects.\", \"name\": \"rmse\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The RMSE between the actual and forecast values.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"actual\": {\"description\": \"The actual values as an array-like object.\", \"type\": \"object\"}, \"forecast\": {\"description\": \"The forecast values as an array-like object.\", \"type\": \"object\"}}, \"required\": [\"actual\", \"forecast\"], \"type\": \"object\"}}, {\"description\": \"Extracts the year from a date string in the format 'DD/MM/YYYY'.\", \"name\": \"get_year\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The year component of the date.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"date\": {\"description\": \"The date string in the format 'DD/MM/YYYY'.\", \"type\": \"string\"}}, \"required\": [\"date\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the L2 distance between two numpy arrays or lists `a` and `b`.\", \"name\": \"l2_distance\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A single float value representing the L2 distance between the two arrays.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"A numpy array or list of float numbers.\", \"type\": \"object\"}, \"b\": {\"description\": \"A numpy array or list of float numbers with the same shape as `a`.\", \"type\": \"object\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Aligns a string `s` to the left within a string of length `length`.\\nIf the original string is longer than `length`, it will be truncated from the right.\\nIf the original string is shorter than `length`, spaces will be added to the right.\", \"name\": \"align_left\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"length\": {\"description\": \"The desired length of the string. Must be a nonnegative integer.\", \"type\": [\"integer\", \"number\"]}, \"s\": {\"description\": \"The string to be aligned.\", \"type\": \"string\"}}, \"required\": [\"s\", \"length\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Counts the number of non-empty lines in a .gz file.\", \"name\": \"count_lines_gzip\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of non-empty lines in the file.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The name of the .gz file.\", \"type\": \"string\"}}, \"required\": [\"filename\"], \"type\": \"object\"}}, {\"description\": \"Checks if the value is an integer.\\nIf the value is an integer, return -2147483648 if the value is less than -2147483648;\\nreturn 2147483647 if the value is greater than 2147483647; otherwise return the value.\\nReturn None if the value is not an integer.\", \"name\": \"check_integer\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"value\": {\"description\": \"The value to check.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"value\"], \"type\": \"object\"}}, {\"description\": \"Replaces all special non-alphanumeric characters in a string with underscores.\", \"name\": \"special_chars_to_underscore\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new string with all special characters replaced with underscores.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Converts a list of elements to a list containing a single element if the list contains only one or no elements, or returns the original list if the list contains more than one element.\", \"name\": \"convert_to_single\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"elements\": {\"description\": \"The list of elements.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"elements\"], \"type\": \"object\"}}, {\"description\": \"Checks if both `x` and `y` are of type `int` or `float`.\", \"name\": \"check_types\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if both `x` and `y` are of type `int` or `float`, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The first input.\", \"type\": [\"integer\", \"number\"]}, \"y\": {\"description\": \"The second input.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Returns the parent directory path of a given file path.\", \"name\": \"get_parent_dir_path\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the file.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Finds keys in a dictionary that contain the word \\\"Hello\\\" in their values.\", \"name\": \"find_keys_with_hello\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of keys that contain the word \\\"Hello\\\" in their values.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary where the values are strings.\", \"type\": \"object\"}}, \"required\": [\"dictionary\"], \"type\": \"object\"}}, {\"description\": \"Generates a list of dates that fall within a given date range.\\nEach date is formatted as 'YYYY-MM-DD' and encoded to UTF-8.\", \"name\": \"generate_date_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"end_date\": {\"description\": \"The end date of the range.\", \"type\": \"string\"}, \"start_date\": {\"description\": \"The start date of the range.\", \"type\": \"string\"}}, \"required\": [\"start_date\", \"end_date\"], \"type\": \"object\"}}, {\"description\": \"Calculates the perimeter of a circle given its radius.\", \"name\": \"circle_perimeter\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The perimeter of the circle.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"radius\": {\"description\": \"The radius of the circle.\", \"type\": \"number\"}}, \"required\": [\"radius\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"get_year\", \"arguments\": {\"date\": \"12/05/2022\"}, \"label\": \"$var1\"}, {\"name\": \"check_integer\", \"arguments\": {\"value\": \"$var1.output_0$\"}, \"label\": \"$var2\"}, {\"name\": \"circle_perimeter\", \"arguments\": {\"radius\": \"$var2.output_0$\"}, \"label\": \"$var3\"}]\n\nGold Answer:\n12704.600691117123\n\nNow solve:\nele , the circus elephant , is currently 3 times older than lyn , the circus lion . in 15 years from now , lyn the circus lion will be exactly half as old as ele , the circus elephant . how old is ele today ?\n\nUse this API documentation for reference: [{\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 853,
    "text": "Example:\n\nInstruction:\nFind the simple interest on $10000 at 7% per annum for 12 months?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 7, \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 10000, \"arg_1\": \"$var_1.result$\"}}]\n\nGold Answer:\n700.0\n\nNow solve:\ntoday jim is twice as old as fred , and sam is 4 years younger than fred . 4 years ago jim was 8 times as old as sam . how old is jim now ?\n\nUse this API documentation for reference: [{\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 854,
    "text": "Example:\n\nInstruction:\n1000 men have provisions for 15 days. If 300 more men join them, for how many days will the provisions last now?\n\nUse this API documentation for reference: [{\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 15, \"arg_1\": 1000}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1000, \"arg_1\": 300}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n11.5\n\nNow solve:\nA man can row a distance of 5 km in 60 min with the help of the tide. The direction of the tide reverses with the same speed. Now he travels a further 20 km in 20 hours. How much time he would have saved if the direction of tide has not changed?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 855,
    "text": "Example:\n\nInstruction:\nAn empty wooden vessel weighs 20% of its total weight when filled with paint. If the weight of a partially filled vessel is one half that of a completely filled vessel, what fraction of the vessel is filled.\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 20, \"arg_1\": 2}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 1}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 20, \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}]\n\nGold Answer:\n0.47368421052631576\n\nNow solve:\nA bullock cart has to cover a distance of 80km in 10hrs. If it covers half of the journey in 3/5th time. what should be its speed to cover the remaining distance in the time left.\n\nUse this API documentation for reference: [{\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 856,
    "text": "Example:\n\nInstruction:\nSarah operated her lemonade stand Monday through Friday over a two week period and made a total profit of 350 dollars. On hot days she sold cups of lemonade for a price that was 25 percent higher than the regular days. Each cup she sold had a total cost of 75 cents and Sarah did not incur any other costs. If every day she sold exactly 32 cups and 3 of the days were hot, then what was the price of 1 cup on a hot day?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 75, \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 32, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"add\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 350}}, {\"name\": \"add\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_7.result$\", \"arg_1\": 2}}, {\"name\": \"subtract\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": \"$var_8.result$\", \"arg_1\": 3}}, {\"name\": \"multiply\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_9.result$\", \"arg_1\": 32}}, {\"name\": \"add\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 25}}, {\"name\": \"divide\", \"label\": \"$var_12\", \"arguments\": {\"arg_0\": \"$var_11.result$\", \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_13\", \"arguments\": {\"arg_0\": \"$var_12.result$\", \"arg_1\": 3}}, {\"name\": \"multiply\", \"label\": \"$var_14\", \"arguments\": {\"arg_0\": \"$var_13.result$\", \"arg_1\": 32}}, {\"name\": \"add\", \"label\": \"$var_15\", \"arguments\": {\"arg_0\": \"$var_10.result$\", \"arg_1\": \"$var_14.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_16\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": \"$var_15.result$\"}}, {\"name\": \"add\", \"label\": \"$var_17\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 25}}, {\"name\": \"divide\", \"label\": \"$var_18\", \"arguments\": {\"arg_0\": \"$var_17.result$\", \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_19\", \"arguments\": {\"arg_0\": \"$var_16.result$\", \"arg_1\": \"$var_18.result$\"}}]\n\nGold Answer:\n2.14\n\nNow solve:\nI want to convert the processor architecture 'x86_64' to the equivalent Debian package (DPKG) architecture. Then, I want to check if the resulting architecture ends with the suffix '64'.\n\nUse this API documentation for reference: [{\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the product of a list of numbers without using the built-in multiplication operator.\", \"name\": \"product_without_multiplication\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Creates a new list `my_id_list` that contains ids of the form `my_id_<element>`.\", \"name\": \"create_id_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of ids.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"my_list\": {\"description\": \"The list of elements.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"my_list\"], \"type\": \"object\"}}, {\"description\": \"Creates an Airtable URL with the given application id and form id.\", \"name\": \"create_airtable_url\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The Airtable URL.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"app_id\": {\"description\": \"The application id.\", \"type\": \"string\"}, \"form_id\": {\"description\": \"The form id.\", \"type\": \"string\"}}, \"required\": [\"app_id\", \"form_id\"], \"type\": \"object\"}}, {\"description\": \"Checks if a given object has a specific attribute.\", \"name\": \"check_object_attribute\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the object has the attribute, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"attribute\": {\"description\": \"The attribute to check for.\", \"type\": \"string\"}, \"object\": {\"description\": \"The object to check.\"}}, \"required\": [\"object\", \"attribute\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the mean of every row's `'value'` column and adds a new column `'mean'` to the DataFrame.\", \"name\": \"add_mean\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The updated DataFrame with the new `'mean'` column.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"df\": {\"description\": \"The input DataFrame.\", \"type\": \"object\"}}, \"required\": [\"df\"], \"type\": \"object\"}}, {\"description\": \"Extracts the `path` field from each dictionary in a list of dictionaries.\", \"name\": \"extract_paths\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings representing the `path` field from each dictionary.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"dicts\": {\"description\": \"A list of dictionaries.\", \"items\": {\"additionalProperties\": {\"type\": \"string\"}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"dicts\"], \"type\": \"object\"}}, {\"description\": \"Loads data from a file in pickle format and returns it as a numpy array.\", \"name\": \"load_data_from_file\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"file_name\": {\"description\": \"The name of the file containing the data.\", \"type\": \"string\"}}, \"required\": [\"file_name\"], \"type\": \"object\"}}, {\"description\": \"Builds and returns a complete URL by composing the scheme and domain.\\nThe function normalizes the domain name to ensure it is in a canonical form.\\nIt handles cases where the domain name is already a complete URL with a scheme or without a scheme,\\nand returns the original URL.\", \"name\": \"get_url_from_domain\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"domain\": {\"description\": \"The domain name.\", \"type\": \"string\"}, \"scheme\": {\"description\": \"The scheme of the URL (defaults to HTTP).\", \"type\": \"string\"}}, \"required\": [\"domain\"], \"type\": \"object\"}}, {\"description\": \"Checks if a word contains a digit.\", \"name\": \"check_if_contains_digit\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the word contains a digit, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"word\": {\"description\": \"The word to check.\", \"type\": \"string\"}}, \"required\": [\"word\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Converts an integer to its little-endian encoding, i.e., the least significant byte (LSB) is first.\", \"name\": \"encode_as_little_endian\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The little-endian encoding of the integer.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The integer to be converted.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Checks whether a string ends with a specified suffix.\", \"name\": \"ends_with_suffix\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A boolean value indicating whether the input string ends with the specified suffix.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}, \"suffix\": {\"description\": \"The suffix to check.\", \"type\": \"string\"}}, \"required\": [\"string\", \"suffix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Checks if a given string contains only alphabetic characters using regular expressions.\", \"name\": \"contains_only_alphabetic\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The string to check.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Converts the processor architecture to the equivalent Debian package (DPKG) architecture.\", \"name\": \"convert_arch\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The corresponding DPKG architecture string. If no mapping exists, the original `arch` string is returned.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"arch\": {\"description\": \"The processor architecture.\", \"type\": \"string\"}}, \"required\": [\"arch\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 857,
    "text": "Example:\n\nInstruction:\nKathleen can paint a room in 2 hours, and Anthony can paint an identical room in 3 hours. How many hours would it take Kathleen and Anthony to paint both rooms if they work together at their respective rates?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 3}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 2}}]\n\nGold Answer:\n2.4\n\nNow solve:\nThe circumferences of the fore and hind-wheels of a carriage are 2 2/5 and 3 3/7 meters respectively. A chalk mark is put on the point of contact of each wheel with the ground at any given moment. How far will the carriage have travelled so that their chalk marks may be again on the ground at the same time?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 858,
    "text": "Example:\n\nInstruction:\nrecently , i decided to walk down an escalator of a tube station . i did some quick calculation in my mind . i found that if i walk down 20 ` ` 6 steps , i require thirty seconds to reach the bottom . however , if i am able to step down thirty ` ` 4 stairs , i would only require eighteen seconds to get to the bottom . if the time is measured from the moment the top step begins to descend to the time i step off the last step at the bottom ?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 10}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 4}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 10}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 4}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 20, \"arg_1\": 6}}, {\"name\": \"subtract\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_5.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 10}}, {\"name\": \"multiply\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": 6, \"arg_1\": 3}}, {\"name\": \"subtract\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": \"$var_7.result$\", \"arg_1\": \"$var_8.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": \"$var_9.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": 6, \"arg_1\": 3}}, {\"name\": \"multiply\", \"label\": \"$var_12\", \"arguments\": {\"arg_0\": \"$var_10.result$\", \"arg_1\": \"$var_11.result$\"}}, {\"name\": \"add\", \"label\": \"$var_13\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_12.result$\"}}]\n\nGold Answer:\n46.0\n\nNow solve:\nIf n is an integer, f(n) = f(n-1) - n and f(4)=13. What is the value of f(6)?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 859,
    "text": "Example:\n\nInstruction:\nA batsman makes a score of 50 runs in the 6th inning and thus increases his average by 2. Find his average after 6th inning.\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 6, \"arg_1\": 2}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 50, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 2}}]\n\nGold Answer:\n40.0\n\nNow solve:\nIn a party every person shakes hands with every other person. If there were a total of 190 handshakes in the party then what is the number of persons present in the party ?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 860,
    "text": "Example:\n\nInstruction:\nA, B and C invested Rs.6000, Rs.4000 and Rs.10000 respectively, in a partnership business. Find the share of A in profit of Rs.11000 after a year?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 6000, \"arg_1\": 4000}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 10000}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 6000, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 11000}}]\n\nGold Answer:\n3300.0\n\nNow solve:\nPaul's income is 40% less than Rex's income, Quentin's income is 20% less than Paul's income, and Sam's income is 40% less than Paul's income. If Rex gave 40% of his income to Sam and 60% of his income to Quentin, Quentin's new income would be what fraction of Sam's new income?\n\nUse this API documentation for reference: [{\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 861,
    "text": "Example:\n\nInstruction:\nIn a 160 meters race A beats B by 56 m or 7 seconds. A's time over the course is:\n\nUse this API documentation for reference: [{\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 7, \"arg_1\": 56}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 160}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 7}}]\n\nGold Answer:\n13.0\n\nNow solve:\nA rectangular lawn of dimensions 120 m * 60 m has two roads each 10 m wide running in the middle of the lawn, one parallel to the length and the other parallel to the breadth. What is the cost of traveling the two roads at Rs.3 per sq m?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 862,
    "text": "Example:\n\nInstruction:\nI want to construct a service name with cluster_name 'cluster1' and service_id 'service1'. Then, I want to convert the service name to a URL slug.\n\nUse this API documentation for reference: [{\"description\": \"Creates a pandas DataFrame of length N with the following information:\\n\\n* The `ID` column should be a sequence of integers from `1` to `N`.\\n* The `Odd/Even` column should indicate whether the ID is odd or even.\\n* The `Sum` column should contain the sum of the ID and the previous ID.\", \"name\": \"create_dataframe\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The resulting DataFrame.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"N\": {\"description\": \"The desired length of the DataFrame.\", \"type\": \"integer\"}}, \"required\": [\"N\"], \"type\": \"object\"}}, {\"description\": \"Sets an HTTP header in a response.\", \"name\": \"set_http_header\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The modified response.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"header_name\": {\"description\": \"The name of the HTTP header to set.\", \"type\": \"string\"}, \"header_value\": {\"description\": \"The value of the HTTP header.\", \"type\": \"string\"}, \"response\": {\"description\": \"A dictionary representing the HTTP response.\", \"type\": \"object\"}}, \"required\": [\"response\", \"header_name\", \"header_value\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Converts a string to a URL slug by replacing spaces with hyphens and removing any characters that are not valid in a URL slug.\", \"name\": \"convert_to_url_slug\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input string converted to a URL slug.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string to convert to a URL slug.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Constructs a service name given a cluster_name and service_id.\\nThe function returns a string with the format cluster_name.service_id.instance_id,\\nwhere instance_id is a random integer between 0 and 2048.\", \"name\": \"construct_service_name\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"cluster_name\": {\"description\": \"The name of the cluster.\", \"type\": \"string\"}, \"service_id\": {\"description\": \"The id of the service.\", \"type\": \"string\"}}, \"required\": [\"cluster_name\", \"service_id\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of the squares of all positive integers in the list.\", \"name\": \"sum_of_positive_squares\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The sum of the squares of all positive integers in the list.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}, {\"description\": \"Calculates the size of X in bits.\", \"name\": \"size_of_X\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"A\": {\"description\": \"A boolean array.\", \"items\": {\"type\": \"boolean\"}, \"type\": \"array\"}, \"B\": {\"description\": \"A boolean array of the same size as A.\", \"items\": {\"type\": \"boolean\"}, \"type\": \"array\"}}, \"required\": [\"A\", \"B\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Determines if an object is an instance of a class named `Model`.\", \"name\": \"is_model\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The class name of the object if it is an instance of `Model`.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The object to check.\"}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"construct_service_name\", \"arguments\": {\"cluster_name\": \"cluster1\", \"service_id\": \"service1\"}, \"label\": \"$var1\"}, {\"name\": \"convert_to_url_slug\", \"arguments\": {\"text\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\ncluster1service1456\n\nNow solve:\nX can do a piece of work in 4 hours; Y and Z together can do it in 3 hours, while X and Z together can do it in 2 hours. How long will Y alone take to do it?\n\nUse this API documentation for reference: [{\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 863,
    "text": "Example:\n\nInstruction:\nRani bought more apples than oranges. She sells apples at \u20b923 apiece and makes 15% profit. She sells oranges at \u20b910 apiece and makes 25% profit. If she gets \u20b9653 after selling all the apples and oranges, find her profit percentage Z.\n\nUse this API documentation for reference: [{\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 10}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 10}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 25, \"arg_1\": 100}}, {\"name\": \"add\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": 10, \"arg_1\": \"$var_6.result$\"}}, {\"name\": \"add\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": 15, \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": \"$var_7.result$\", \"arg_1\": \"$var_8.result$\"}}, {\"name\": \"add\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_9.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": 653, \"arg_1\": \"$var_10.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_12\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 10}}, {\"name\": \"multiply\", \"label\": \"$var_13\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 10}}, {\"name\": \"add\", \"label\": \"$var_14\", \"arguments\": {\"arg_0\": \"$var_13.result$\", \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_15\", \"arguments\": {\"arg_0\": \"$var_12.result$\", \"arg_1\": \"$var_14.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_16\", \"arguments\": {\"arg_0\": 25, \"arg_1\": 100}}, {\"name\": \"add\", \"label\": \"$var_17\", \"arguments\": {\"arg_0\": \"$var_16.result$\", \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_18\", \"arguments\": {\"arg_0\": 10, \"arg_1\": \"$var_17.result$\"}}, {\"name\": \"add\", \"label\": \"$var_19\", \"arguments\": {\"arg_0\": 15, \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_20\", \"arguments\": {\"arg_0\": \"$var_18.result$\", \"arg_1\": \"$var_19.result$\"}}, {\"name\": \"add\", \"label\": \"$var_21\", \"arguments\": {\"arg_0\": \"$var_15.result$\", \"arg_1\": \"$var_20.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_22\", \"arguments\": {\"arg_0\": \"$var_11.result$\", \"arg_1\": \"$var_21.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_23\", \"arguments\": {\"arg_0\": \"$var_22.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n17.4\n\nNow solve:\nGiven a list of messages ['User: Alice', 'User: Bob', 'User: Alice', 'User: Charlie'], extract the usernames and remove duplicates.\n\nUse this API documentation for reference: [{\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Counts the number of records by city.\", \"name\": \"count_by_city\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the keys are city names and the values are the counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"A list of objects with a 'city' attribute.\", \"items\": {\"additionalProperties\": {}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"data\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Returns a new list with only the numbers that are multiples of 3.\", \"name\": \"multiples_of_3\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list with only the numbers that are multiples of 3.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Calculates the maximum depth of a binary tree.\", \"name\": \"max_depth_binary_tree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"root\": {\"description\": \"The root node of the binary tree.\", \"nullable\": true, \"type\": \"object\"}}, \"required\": [\"root\"], \"type\": \"object\"}}, {\"description\": \"Converts a JSON object string into a Python dictionary, with each key's value populated by a default value.\", \"name\": \"parse_json_default\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A Python dictionary with the default values for each key.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"json_string\": {\"description\": \"The JSON object string to be converted.\", \"type\": \"string\"}}, \"required\": [\"json_string\"], \"type\": \"object\"}}, {\"description\": \"Checks if a given string contains only alphanumeric characters and underscores.\", \"name\": \"is_alphanumeric_underscore\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the string is valid, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Transposes a two-dimensional array by exchanging the rows and columns.\", \"name\": \"transpose_array\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list of lists where the rows and columns have been swapped.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"arr\": {\"description\": \"A list of lists where each inner list has the same number of elements.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"arr\"], \"type\": \"object\"}}, {\"description\": \"Sorts a list of strings alphabetically while keeping track of the number of times each string appears.\", \"name\": \"sort_and_count\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples where each tuple contains the original string and its count.\\n    If two strings have the same count, they are sorted lexicographically to maintain their original order.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"strings\": {\"description\": \"A list of strings to be sorted and counted.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"strings\"], \"type\": \"object\"}}, {\"description\": \"Checks if the names of two functions are the same.\", \"name\": \"check_functions\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"func1\": {\"description\": \"The first function to check.\", \"type\": \"object\"}, \"func2\": {\"description\": \"The second function to check.\", \"type\": \"object\"}}, \"required\": [\"func1\", \"func2\"], \"type\": \"object\"}}, {\"description\": \"Extracts usernames from a list of messages.\", \"name\": \"extract_usernames\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of usernames extracted from the messages.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"messages\": {\"description\": \"A list of messages that contain usernames in the format \\\"User: Username\\\".\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"messages\"], \"type\": \"object\"}}, {\"description\": \"Converts a given number of bytes to a human-readable format.\", \"name\": \"human_readable_size\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The formatted size as a string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"size_bytes\": {\"description\": \"The size in bytes to be converted.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"size_bytes\"], \"type\": \"object\"}}, {\"description\": \"Loads a JSON file and returns a list of dictionaries, each containing the data from a JSON object in the file.\", \"name\": \"load_json_file\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of dictionaries, where each dictionary contains the data from a JSON object in the file.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"path\": {\"description\": \"The file path of the JSON file.\", \"type\": \"string\"}}, \"required\": [\"path\"], \"type\": \"object\"}}, {\"description\": \"Removes all occurrences of the character `c` at the beginning of the string `s`.\", \"name\": \"left_trim\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"c\": {\"description\": \"The character to remove from the beginning of the string. If not provided, all leading whitespace characters will be removed.\", \"nullable\": true, \"type\": \"string\"}, \"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Removes duplicate strings from a list using a dictionary.\", \"name\": \"remove_duplicates_using_dictionary\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list with duplicate strings removed.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string_list\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"string_list\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 864,
    "text": "Example:\n\nInstruction:\nThe greatest number which on dividing 1657 and 2037 leaves remainders 9 and 5 respectively, is:\n\nUse this API documentation for reference: [{\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 2037, \"arg_1\": 5}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1657, \"arg_1\": 9}}, {\"name\": \"gcd\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n16.0\n\nNow solve:\na and b began business with rs . 3000 and rs . 4000 after 8 months , a withdraws rs . 1000 and b advances rs . 1000.00001 more . at the end of the year , their profits amounted to rs . 714 find the share of a .\n\nUse this API documentation for reference: [{\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 865,
    "text": "Example:\n\nInstruction:\nMachine A produces 100 parts twice as fast as Machine B does. Machine B produces 100 parts in 60 minutes. If each machine produces parts at a constant rate, how many parts does Machine A produce in 6 minutes?\n\nUse this API documentation for reference: [{\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 60}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 6}}]\n\nGold Answer:\n20.0\n\nNow solve:\nA, B, C, D and E are 5 consecutive points on a straight line. If BC = 2CD, DE = 7, AB = 5 and AC = 11, what is the length of AE?\n\nUse this API documentation for reference: [{\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 866,
    "text": "Example:\n\nInstruction:\nGiven a compound string 'a.b.c.d', parse it into a list of tokens. Then, find the index of the first duplicate element in the list.\n\nUse this API documentation for reference: [{\"description\": \"Converts a string of 1s and 0s to its integer representation.\", \"name\": \"bit_string_to_int\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The integer representation of the input string, or None if the input string contains non-binary characters.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"bit_string\": {\"description\": \"A string of 1s and 0s.\", \"type\": \"string\"}}, \"required\": [\"bit_string\"], \"type\": \"object\"}}, {\"description\": \"Returns the depth of a nested dictionary by traversing through the dictionary and incrementing a counter for each level.\\nIf the input is not a dictionary, the function returns None.\\nA try-except block is used to handle the case of a key not existing in the dictionary.\", \"name\": \"count_depth\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"nested_dict\": {\"additionalProperties\": {}, \"description\": \"The nested dictionary to traverse.\", \"type\": \"object\"}}, \"required\": [\"nested_dict\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Reads a text file and splits it into lines. Normalizes each line by converting it to lowercase and removing all punctuation.\", \"name\": \"read_and_normalize_lines\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of all the lowercase and normalized lines.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the file to read.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Computes the area of a circle given its radius.\", \"name\": \"compute_area_circle\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"radius\": {\"description\": \"The radius of the circle.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"radius\"], \"type\": \"object\"}}, {\"description\": \"Checks if all numbers in a list of tuples are valid.\", \"name\": \"check_if_all_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if all numbers are valid, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"A list of tuples containing numbers.\", \"items\": {\"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"number\"}, {\"type\": \"object\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"input_list\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Returns the Excel column header corresponding to the given index.\", \"name\": \"get_excel_header\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The column header as a string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"index\": {\"description\": \"The index of the column header.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"index\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Creates a dictionary from a text file. The text file is a list of key-value pairs,\\nwith each line containing a pair and separated by a colon (:).\", \"name\": \"create_dictionary_from_file\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The name of the file to read from.\", \"type\": \"string\"}}, \"required\": [\"filename\"], \"type\": \"object\"}}, {\"description\": \"Finds all the parents of a given node in a graph.\", \"name\": \"find_parents\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of all the parents of the given node.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"graph\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary representing the graph, where keys are nodes and values are their parents.\", \"type\": \"object\"}, \"starting_node\": {\"description\": \"The node to find the parents of.\", \"type\": \"string\"}}, \"required\": [\"graph\", \"starting_node\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the inverse of the logarithmic function f(x) = log_a(x).\", \"name\": \"inverse_log\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The result of raising a to the power of y.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The base of the logarithm. Must be a positive integer.\", \"type\": \"integer\"}, \"y\": {\"description\": \"The value to calculate the inverse of. Must be a number (either an integer or a floating-point number).\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"a\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Finds and returns the index of the first duplicate element in a given array of integers.\\nReturns -1 if there are no duplicate elements.\", \"name\": \"find_first_duplicate_element\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"arr\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"arr\"], \"type\": \"object\"}}, {\"description\": \"Prompts the user for an input string.\\nHandles the following exceptions:\\n1. KeyboardInterrupt: The user pressed `ctrl+c` to interrupt the program.\\n   In this case, the function asks the user to type a string manually, as input, and returns that string.\\n2. EOFError: The user entered `ctrl+d` to send an end-of-file signal.\\n   In this case, the function prints a message and returns an empty string.\", \"name\": \"read_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input string.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"prompt\": {\"description\": \"The prompt to display to the user.\", \"type\": \"object\"}}, \"required\": [\"prompt\"], \"type\": \"object\"}}, {\"description\": \"Parses a compound string into a list of tokens.\\nThe compound string contains alphanumeric text separated by dots.\\nEach token is an alphanumeric string with at most one dot.\\nThe function returns a list of tokens in the order they appear.\", \"name\": \"parse_compound_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The compound string to be parsed.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"parse_compound_string\", \"arguments\": {\"s\": \"a.b.c.d\"}, \"label\": \"$var1\"}, {\"name\": \"find_first_duplicate_element\", \"arguments\": {\"arr\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n-1\n\nNow solve:\n60 boys can complete a work in 24 days.how many men need to complete twice the work in 20 days\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 867,
    "text": "Example:\n\nInstruction:\n12 men work 8 hours per day to complete the work in 10 days. To complete the same work in 8 days, working 12 hours a day, the number of men required?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 12, \"arg_1\": 10}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 8}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 8, \"arg_1\": 12}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}]\n\nGold Answer:\n10.0\n\nNow solve:\nThe sum of present age of Abe and the age before 7 years is 33. Find the present age of Abe. What will be his age after 7 years?\n\nUse this API documentation for reference: [{\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 868,
    "text": "Example:\n\nInstruction:\nIf the sides of a rectangle are increased by 25%, what is the percentage increase in the area?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 25, \"arg_1\": 100}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 1}}, {\"name\": \"power\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 2}}, {\"name\": \"subtract\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n56.25\n\nNow solve:\nA shopkeeper sold 8articles at the cost price of 10 articles. Then find the profit% or lost%\n\nUse this API documentation for reference: [{\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 869,
    "text": "Example:\n\nInstruction:\nSet J consists of 5 consecutive even numbers. If the smallest term in the set is -2, what is the range of the positive integers in set J?\n\nUse this API documentation for reference: [{\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"negate\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 2}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 5, \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 2}}]\n\nGold Answer:\n4.0\n\nNow solve:\nRound the number 123.456 to the nearest multiple of 0.1, and then round the result to the nearest multiple of 0.01.\n\nUse this API documentation for reference: [{\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Filters a list of elements from `array` that do not appear in `reference_array` using list comprehension and filtering techniques.\", \"name\": \"filter_list_by_reference\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of elements from `array` that do not appear in `reference_array`.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"array\": {\"description\": \"The list of elements to filter.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"reference_array\": {\"description\": \"The list of elements to use as a reference for filtering.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"array\", \"reference_array\"], \"type\": \"object\"}}, {\"description\": \"Creates a list of tuples containing the object's name and age.\\nIf the object does not have an age attribute, its age is replaced with None.\", \"name\": \"get_name_age_tuples\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples containing the object's name and age.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"objects\": {\"description\": \"A list of objects, each having a `.name` attribute.\", \"items\": {}, \"type\": \"array\"}}, \"required\": [\"objects\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Formats a list of votes into a list of strings of the format \\\"{name}: {votes}\\\".\", \"name\": \"format_votes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings of the format \\\"{name}: {votes}\\\".\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"votes\": {\"description\": \"A list of tuples representing the number of votes and the name of a candidate.\", \"items\": {\"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"string\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"votes\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Simplifies an if-else conditional statement.\", \"name\": \"simplify_conditional\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string representing the simplified if-else conditional statement.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"condition\": {\"additionalProperties\": {\"type\": \"boolean\"}, \"description\": \"A dictionary of boolean conditions.\", \"type\": \"object\"}, \"lookup_table\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary of action keys.\", \"type\": \"object\"}}, \"required\": [\"condition\", \"lookup_table\"], \"type\": \"object\"}}, {\"description\": \"Determines if all of the file permissions in `a` are also present in `b`, using bitwise operations.\", \"name\": \"check_file_permissions\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if all of the file permissions in `a` are also present in `b`, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"A combination of bitwise OR of some file permissions.\", \"type\": \"integer\"}, \"b\": {\"description\": \"A combination of some other file permissions.\", \"type\": \"integer\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Loads the software version from a version file.\\n\\nThe version file contains the version number and a list of commit hashes.\\nThe function returns a string in the format `vX.Y.Z-n`, where `X`, `Y`, and\\n`Z` are the major, minor, and patch numbers, respectively, and `n` is the\\nnumber of commits.\", \"name\": \"load_software_version\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The software version as a string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"version_file\": {\"description\": \"The path to the version file.\", \"type\": \"string\"}}, \"required\": [\"version_file\"], \"type\": \"object\"}}, {\"description\": \"Returns a dictionary containing all recursively defined objects.\\nThis function copies the input dictionary deeply and does not modify the original input dictionary.\", \"name\": \"get_recursively_defined_objects\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"definitions\": {\"description\": \"A dictionary of definitions.\", \"type\": \"object\"}}, \"required\": [\"definitions\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of strings from `words` that contain the `prefix` as a prefix, with the prefix removed.\", \"name\": \"get_strings_with_prefix\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"prefix\": {\"description\": \"A string to be used as a prefix.\", \"type\": \"string\"}, \"words\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"words\", \"prefix\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Rounds a floating point number to the nearest multiple of a specified level.\", \"name\": \"level\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"level\": {\"description\": \"The level to which the number should be rounded.\", \"type\": \"number\"}, \"number\": {\"description\": \"The floating point number to be rounded.\", \"type\": \"number\"}}, \"required\": [\"number\", \"level\"], \"type\": \"object\"}}, {\"description\": \"Checks if a file exists and can be opened.\", \"name\": \"file_checker\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the file exists and can be opened, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"filepath\": {\"description\": \"The path to the file.\", \"type\": \"string\"}}, \"required\": [\"filepath\"], \"type\": \"object\"}}, {\"description\": \"Calculates the number of set bits in the binary representation of a positive integer.\", \"name\": \"binary_set_bits\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of set bits in the binary representation of the input number.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"num\": {\"description\": \"A positive integer or float. If a float is provided, it will be converted to an integer.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"num\"], \"type\": \"object\"}}, {\"description\": \"Removes duplicate entries from a JSON object and returns the updated JSON object as a Python dict.\\nIf no duplicate entries are found, it returns the original JSON object without changes.\", \"name\": \"remove_duplicate_entries_from_json\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"json_object\": {\"additionalProperties\": {\"type\": \"object\"}, \"description\": \"The JSON object to remove duplicate entries from.\", \"type\": \"object\"}}, \"required\": [\"json_object\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 870,
    "text": "Example:\n\nInstruction:\nThe compound interest on a sum for 2 years is Rs. 832 and the simple interest on the same sum for the same period is Rs. 800. The difference between the compound and simple interest for 3 years will be\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 832, \"arg_1\": 800}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 832, \"arg_1\": 800}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 800, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 832, \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"add\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_5.result$\"}}]\n\nGold Answer:\n98.56\n\nNow solve:\nIf 125% of j is equal to 25% of k, 150% of k is equal to 50% of l, and 175% of l is equal to 75% of m, then 30% of m is equal to what percent of 200% of j ?\n\nUse this API documentation for reference: [{\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 871,
    "text": "Example:\n\nInstruction:\nIn one hour,a boat goes 11 km along the stream and 5 km against the stream.The speed of the boat in still water (in km/hr) is :\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 11, \"arg_1\": 5}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}]\n\nGold Answer:\n8.0\n\nNow solve:\nI have a circle with a radius of 5. I want to know the diameter of the circle and the activation value of a neuron with the diameter as its input.\n\nUse this API documentation for reference: [{\"description\": \"Formats and returns the current temperature in degrees Celsius.\", \"name\": \"format_temperature\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string in the format \\\"It is currently xx degrees Celsius.\\\", where `xx` is the temperature in degrees Celsius.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"temperature_f\": {\"description\": \"The temperature in degrees Fahrenheit.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"temperature_f\"], \"type\": \"object\"}}, {\"description\": \"Finds the substring in a given string that is surrounded by a pair of specified characters.\", \"name\": \"find_surrounded_substring\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The substring surrounded by the pair of characters, or None if no such substring is found.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"first_char\": {\"description\": \"The first character of the pair.\", \"type\": \"string\"}, \"second_char\": {\"description\": \"The second character of the pair.\", \"type\": \"string\"}, \"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\", \"first_char\", \"second_char\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Collects attributes from a given object in a dictionary.\", \"name\": \"collect_attrs\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where each attribute name is the key and the corresponding value is the value of that attribute in the object. If an attribute is not present in the object, the value for that attribute is `None`.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"attrs\": {\"description\": \"A list of attribute names.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"obj\": {\"description\": \"The object to collect attributes from.\"}}, \"required\": [\"obj\", \"attrs\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculate the diameter of a circle given its radius.\\nThe function rounds the result to three decimal digits.\", \"name\": \"calculate_diameter\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"radius\": {\"description\": \"The radius of the circle.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"radius\"], \"type\": \"object\"}}, {\"description\": \"Updates a string by capitalizing the first letter of each word.\", \"name\": \"update_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The updated string with the first letter of each word capitalized.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string to be updated.\", \"nullable\": true, \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the activation value of a neuron given its input.\", \"name\": \"activation_function\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The activation value of the neuron.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The input to the neuron.\", \"type\": \"number\"}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the total frequency of a set of keys in a frequency dictionary.\", \"name\": \"get_total_frequency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"frequency\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"A dictionary where keys are items and values are their frequencies.\", \"type\": \"object\"}, \"keys\": {\"description\": \"A list of keys to evaluate.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"frequency\", \"keys\"], \"type\": \"object\"}}, {\"description\": \"Loads a class from a string path.\", \"name\": \"load_class_from_path\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The class object.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"path\": {\"description\": \"The full path to the module, including the package name and the file name.\", \"type\": \"string\"}}, \"required\": [\"path\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 872,
    "text": "Example:\n\nInstruction:\nStudents at a school were on average 180 cm tall. The average female height was 170 cm, and the average male height was 181 cms. What was the ratio of men to women?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 180, \"arg_1\": 170}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 181, \"arg_1\": 180}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}]\n\nGold Answer:\n10.0\n\nNow solve:\n11 different biology books and 8 different chemistry books lie on a shelf. In how many ways can a student pick 2 books of each type?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 873,
    "text": "Example:\n\nInstruction:\nA particular library has 75 books in a special collection, all of which were in the library at the beginning of the month. These book are occasionally loaned out through an inter-library program. If, by the end of the month, 60 percent of books that were loaned out are returned and there are 65 books in the special collection at that time, how many books of the special collection were loaned out during that month?\n\nUse this API documentation for reference: [{\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 75, \"arg_1\": 65}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 60, \"arg_1\": 100}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_3.result$\"}}]\n\nGold Answer:\n25.0\n\nNow solve:\nthe population of a town increased from 50000 to 80000 in a decade . the average percent increase of population per year is :\n\nUse this API documentation for reference: [{\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 874,
    "text": "Example:\n\nInstruction:\nA clothing store purchased a pair of pants for $90 and was selling it at a price that equaled the purchase price of the pants plus a markup that was 25 percent of the selling price. After some time a clothing store owner decided to decrease the selling price by 20 percent. What was the clothing store's gross profit on this sale?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 20}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 90, \"arg_1\": 3}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 90}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 100}}, {\"name\": \"subtract\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 90}}]\n\nGold Answer:\n6.0\n\nNow solve:\nSet A contains all the even numbers between 12 and 50 inclusive. Set B contains all the even numbers between 112 and 150 inclusive. What is the difference between the sum of elements of set B and the sum of the elements of set A?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 875,
    "text": "Example:\n\nInstruction:\nIf x is equal to the sum of the integers from 40 to 50, inclusive, and y is the number of EVEN integers from 40 to 50, inclusive, what is the value of x+y ?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 40, \"arg_1\": 50}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 50, \"arg_1\": 40}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 1}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 50, \"arg_1\": 40}}, {\"name\": \"divide\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_7.result$\", \"arg_1\": 1}}, {\"name\": \"add\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": \"$var_8.result$\"}}]\n\nGold Answer:\n501.0\n\nNow solve:\nGiven a list of integers [1, 2, 2, 3, 4, 4, 4, 5], calculate the sum of all unique values in the list.\n\nUse this API documentation for reference: [{\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Formats a list of pairs of integers into a list of strings.\", \"name\": \"format_pairs\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings formatted as '<', '>', or '=' based on the comparison of the integers in each pair.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"pairs\": {\"description\": \"A list of pairs of integers.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"pairs\"], \"type\": \"object\"}}, {\"description\": \"Validates that the input list contains only numbers.\", \"name\": \"validate_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The input list.\", \"items\": {\"type\": [\"integer\", \"number\"]}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Removes all duplicates from a list and keeps the last occurrence of each element.\", \"name\": \"remove_all_duplicates\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The input list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of two numbers, and raises an error if the types of the numbers are not consistent.\", \"name\": \"sum_with_type_check\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The first number.\", \"type\": [\"integer\", \"number\"]}, \"y\": {\"description\": \"The second number.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Formats a number with commas and two decimal places, with an optional currency sign.\", \"name\": \"currency_number_format\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The formatted number as a string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"number\": {\"description\": \"The numerical value to format.\", \"type\": [\"integer\", \"number\"]}, \"sign\": {\"description\": \"The currency sign to include in the formatted string.\", \"type\": \"string\"}}, \"required\": [\"number\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of all unique values in a list of integers.\", \"name\": \"sum_unique_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The sum of all unique values in the list.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}, {\"description\": \"Concatenates the string elements of a tuple if the tuple contains only strings.\", \"name\": \"concat_if_tuple_and_strings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"collection\": {\"description\": \"The tuple to check and concatenate.\", \"type\": \"array\"}}, \"required\": [\"collection\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a dictionary with keys from 1 to `n` and values of the square of the key.\", \"name\": \"get_squares_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The upper limit for the keys in the dictionary.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Validates whether the four velocities are in the correct order.\", \"name\": \"validate_velocities\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the velocities are in the correct order, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"v1\": {\"description\": \"The first velocity.\", \"type\": \"number\"}, \"v2\": {\"description\": \"The second velocity.\", \"type\": \"number\"}, \"v3\": {\"description\": \"The third velocity.\", \"type\": \"number\"}, \"v4\": {\"description\": \"The fourth velocity.\", \"type\": \"number\"}}, \"required\": [\"v1\", \"v2\", \"v3\", \"v4\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 876,
    "text": "Example:\n\nInstruction:\n50% of the population of a village is 23040. The total population of the village is ?\n\nUse this API documentation for reference: [{\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 50}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 23040}}]\n\nGold Answer:\n46080.0\n\nNow solve:\nA lawn is in the form of a rectangle having its sides in the ratio 2: 3. The area of the lawn is (1/6) hectares. Find the length and breadth of the lawn.\n\nUse this API documentation for reference: [{\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 877,
    "text": "Example:\n\nInstruction:\nGenerate a random string of length 10. Then, shift every letter in the string to the next letter in the alphabet.\n\nUse this API documentation for reference: [{\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Converts a given dictionary to a url-encoded string.\", \"name\": \"convert_dict_to_url_encoding\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string of all key-value pairs url-encoded.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A mapping from string keys to string values.\", \"type\": \"object\"}}, \"required\": [\"dictionary\"], \"type\": \"object\"}}, {\"description\": \"Extracts the value of the key \\\"water_level\\\" from the \\\"data\\\" field in a JSON string.\", \"name\": \"get_water_level\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"json_string\": {\"description\": \"A JSON string containing the data.\", \"type\": \"string\"}}, \"required\": [\"json_string\"], \"type\": \"object\"}}, {\"description\": \"Retrieves the value associated with the key `city` in the nested dictionary `data`.\", \"name\": \"retrieve_city_from_data\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The value associated with the key `city` in the nested dictionary, or the string `'Not Found'` if the key is not found.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"data\": {\"additionalProperties\": {\"additionalProperties\": {\"type\": \"string\"}, \"type\": \"object\"}, \"description\": \"The nested dictionary containing the key `country_details`.\", \"type\": \"object\"}}, \"required\": [\"data\"], \"type\": \"object\"}}, {\"description\": \"Replaces every letter in the input string with the letter following it in the alphabet.\\nThe function does not change the case of the letter, and loops back to 'a' from 'z'.\", \"name\": \"shift_letters\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The string with every letter replaced by the letter following it in the alphabet.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Creates a JSON object from a given input dictionary by iterating through the dictionary's key-value pairs in sorted order and converting the values to strings.\", \"name\": \"create_json_payload\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A JSON object with keys that are the sorted list of dictionary keys, and values that are the stringified dictionary values.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input_dict\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"The input dictionary.\", \"type\": \"object\"}}, \"required\": [\"input_dict\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Filters out all fields that are not in a set of keys.\", \"name\": \"filter_fields\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new dictionary with only the fields in `keys`.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"data\": {\"additionalProperties\": {\"type\": \"object\"}, \"description\": \"The dictionary to filter.\", \"type\": \"object\"}, \"keys\": {\"description\": \"The keys to keep in the filtered dictionary.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"data\", \"keys\"], \"type\": \"object\"}}, {\"description\": \"Updates the is_deleted, deleted_at, and deleted_by attributes of an object.\", \"name\": \"update_deletion_attributes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The updated object.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"deleted_at\": {\"description\": \"The timestamp of deletion.\", \"type\": \"number\"}, \"obj\": {\"description\": \"The object to update.\", \"type\": \"object\"}, \"user_id\": {\"description\": \"The ID of the user who deleted the object.\", \"type\": \"integer\"}}, \"required\": [\"obj\", \"deleted_at\", \"user_id\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the tangent of the connecting line between each pair of points.\", \"name\": \"get_tangent\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tangents for each line segment, or `None` if any difference between the x coordinates is zero.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"points\": {\"description\": \"A list of points in the form of (x, y) pairs.\", \"items\": {\"prefixItems\": [{\"type\": \"number\"}, {\"type\": \"number\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"points\"], \"type\": \"object\"}}, {\"description\": \"Generates a dictionary from a text file of words, where each line represents a word and its corresponding frequency of occurrence.\\nThe file is located in a subdirectory named `input` with file name `src-freq.txt`.\\nThe dictionary keys are words and the values are their frequencies.\", \"name\": \"generate_word_frequency_dictionary\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the keys are words and the values are their frequencies.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Checks if a file path contains a given extension.\", \"name\": \"is_file_path_valid\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the file path contains the extension, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"extension\": {\"description\": \"The file extension to check for.\", \"type\": \"string\"}, \"file_path\": {\"description\": \"The file path to check.\", \"type\": \"string\"}}, \"required\": [\"file_path\", \"extension\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Validates a Twitter username string.\", \"name\": \"validate_twitter_username\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the username is valid, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"username\": {\"description\": \"The Twitter username to validate.\", \"type\": \"string\"}}, \"required\": [\"username\"], \"type\": \"object\"}}, {\"description\": \"Processes a string by removing special characters and splitting it into a list of words.\", \"name\": \"process_online_content\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of cleaned words.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"content\": {\"description\": \"The string to be processed.\", \"type\": \"string\"}}, \"required\": [\"content\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Generates a random string of length `n` consisting of lowercase and uppercase ASCII characters.\", \"name\": \"random_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A random string of length `n`.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The length of the string to generate.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"random_string\", \"arguments\": {\"n\": 10}, \"label\": \"$var1\"}, {\"name\": \"shift_letters\", \"arguments\": {\"input_string\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n?peKGDso^)\n\nNow solve:\nIn a school of 800 students, 44% wear blue shirts, 28% wear red shirts, 10% wear green shirts, and the remaining students wear other colors. How many students wear other colors (not blue, not red, not green)?\n\nUse this API documentation for reference: [{\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 878,
    "text": "Example:\n\nInstruction:\nA certain bus driver is paid a regular rate of $16 per hour for any number of hours that does not exceed 40 hours per week. For any overtime hours worked in excess of 40 hours per week, the bus driver is paid a rate that is 75% higher than his regular rate. If last week the bus driver earned $948 in total compensation, how many total hours did he work that week?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 16, \"arg_1\": 40}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 948, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 75}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 16, \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 100}}, {\"name\": \"divide\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_5.result$\"}}, {\"name\": \"add\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": 40, \"arg_1\": \"$var_6.result$\"}}]\n\nGold Answer:\n51.0\n\nNow solve:\nA towel, when bleached, lost 30% of its length and 20% of its breadth. What is the percentage decrease in area?\n\nUse this API documentation for reference: [{\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 879,
    "text": "Example:\n\nInstruction:\nCheck if the number of bits required to represent the integer 100 in binary is available.\n\nUse this API documentation for reference: [{\"description\": \"Calculates the number of bits required to represent an integer in binary.\", \"name\": \"bit_length\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The integer to calculate the bit length for.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Removes all the even numbers from a list of integers.\\nIf all the numbers in the list are even, returns an empty list.\", \"name\": \"remove_even\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Checks if a given variable is not None and has a non-None value.\", \"name\": \"check_availability\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the variable is not None and has a non-None value, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The variable to check.\", \"nullable\": true}}, \"type\": \"object\"}}, {\"description\": \"Returns a list of integers representing the number of elements in each partition for a given total number of elements and the desired number of partitions.\\nThe number of elements in each partition should be as close as possible to the number of elements divided by the number of partitions, with the difference between them being at most 1.\", \"name\": \"partition_elements\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"num_partitions\": {\"description\": \"The desired number of partitions.\", \"type\": \"integer\"}, \"total_elements\": {\"description\": \"The total number of elements.\", \"type\": \"integer\"}}, \"required\": [\"total_elements\", \"num_partitions\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Adds values to an attribute of an object.\\n\\nIf the attribute exists already, the function adds all the values to the existing attribute.\\nIf the attribute does not exist, the function creates the attribute and assigns the list of values to it.\", \"name\": \"add_values_to_attribute\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"attr_name\": {\"description\": \"The name of the attribute.\", \"type\": \"string\"}, \"obj\": {\"description\": \"The object to which the attribute belongs.\", \"type\": \"object\"}, \"values\": {\"description\": \"The values to be added to the attribute.\", \"type\": \"array\"}}, \"required\": [\"obj\", \"attr_name\", \"values\"], \"type\": \"object\"}}, {\"description\": \"Returns the segment length in bytes using bitwise operations.\", \"name\": \"get_segment_length\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"byte_array\": {\"description\": \"The byte array.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"index\": {\"description\": \"The segment index in the array.\", \"type\": \"integer\"}}, \"required\": [\"byte_array\", \"index\"], \"type\": \"object\"}}, {\"description\": \"Checks if a file path contains a given extension.\", \"name\": \"is_file_path_valid\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the file path contains the extension, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"extension\": {\"description\": \"The file extension to check for.\", \"type\": \"string\"}, \"file_path\": {\"description\": \"The file path to check.\", \"type\": \"string\"}}, \"required\": [\"file_path\", \"extension\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"bit_length\", \"arguments\": {\"n\": 100}, \"label\": \"$var1\"}, {\"name\": \"check_availability\", \"arguments\": {\"x\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\nTrue\n\nNow solve:\nI have a heap [10, 20, 30, 40, 50]. Please find the largest element in the heap. Then, convert the largest element to a decibel value.\n\nUse this API documentation for reference: [{\"description\": \"Extracts a column from a pandas DataFrame.\", \"name\": \"extract_column_from_dataframe\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"column_name\": {\"description\": \"The name of the column to extract.\", \"type\": \"string\"}, \"df\": {\"description\": \"The data frame to extract the column from.\", \"type\": \"object\"}}, \"required\": [\"df\", \"column_name\"], \"type\": \"object\"}}, {\"description\": \"Creates a pandas DataFrame from a nested dictionary.\", \"name\": \"flatten_dict_to_dataframe\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A pandas DataFrame containing the flattened data.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"d\": {\"description\": \"The nested dictionary to flatten.\", \"type\": \"object\"}}, \"required\": [\"d\"], \"type\": \"object\"}}, {\"description\": \"Filters a dictionary of parameters based on a list of allowed parameters.\\nIf the value of any parameter is None or an empty string, it is omitted from the returned dictionary.\", \"name\": \"filter_params\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"allowed_params\": {\"description\": \"The list of allowed parameters.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"params\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"The dictionary of parameters.\", \"type\": \"object\"}}, \"required\": [\"params\", \"allowed_params\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Checks the length of the given array and returns True if the length is 0, 1, or 2, and returns False otherwise.\\nIf the input is not an array, it should return False and print an error message.\", \"name\": \"check_array_length\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the length of the array is 0, 1, or 2, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"array\": {\"description\": \"The input array.\"}}, \"required\": [\"array\"], \"type\": \"object\"}}, {\"description\": \"Returns the largest element in a heap.\", \"name\": \"largest_element_in_heap\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The largest element in the heap.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"heap\": {\"description\": \"A list representing a heap.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"heap\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Parses a metadata string and converts it into a dictionary.\", \"name\": \"parse_metadata_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the keys are the keys and the values are the converted values.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"metadata_string\": {\"description\": \"A string containing metadata pairs of the form `key:value`.\", \"type\": \"string\"}}, \"required\": [\"metadata_string\"], \"type\": \"object\"}}, {\"description\": \"Extracts the hours, minutes, and seconds from a string containing a time duration in the format \\\"Xh Ym Zs\\\".\", \"name\": \"extract_time\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple of integers representing the hours, minutes, and seconds.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"time_string\": {\"description\": \"A string containing a time duration in the format \\\"Xh Ym Zs\\\".\", \"type\": \"string\"}}, \"required\": [\"time_string\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Finds the student with the highest score.\", \"name\": \"find_student_with_highest_score\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The name of the student with the highest score.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"student_scores\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"A dictionary of student names and scores.\", \"type\": \"object\"}}, \"required\": [\"student_scores\"], \"type\": \"object\"}}, {\"description\": \"Creates a dictionary with job title and salary.\\nIf the salary is less than 70000, the job title is in lowercase.\\nOtherwise, the job title is in uppercase.\", \"name\": \"new_job\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"job_title\": {\"description\": \"The job title.\", \"type\": \"string\"}, \"min_salary\": {\"description\": \"The minimum salary. Defaults to 60000.\", \"type\": \"integer\"}}, \"required\": [\"job_title\"], \"type\": \"object\"}}, {\"description\": \"Calculates the cosine of a numeric constant `n` using the `math` module.\", \"name\": \"cos_n\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The numeric constant to calculate the cosine of.\", \"type\": \"number\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Checks if B is a rotation of A.\", \"name\": \"is_rotation_array\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if B is a rotation of A, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"A\": {\"description\": \"The first list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"B\": {\"description\": \"The second list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"A\", \"B\"], \"type\": \"object\"}}, {\"description\": \"Calculates the number of days between a given date and the current date in the local time zone.\", \"name\": \"days_since\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"timestamp\": {\"description\": \"The timestamp in milliseconds.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"timestamp\"], \"type\": \"object\"}}, {\"description\": \"Converts a decibel value to a linear value.\", \"name\": \"convert_decibel_to_linear\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The linear value.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"x_decibel\": {\"description\": \"The decibel value to convert.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"x_decibel\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 880,
    "text": "Example:\n\nInstruction:\nI have a string \"key1=value1,key2=value2,key3=value3\". Please parse this string into a dictionary. Then, remove all key-value pairs from the dictionary where the value is an empty string or an empty list.\n\nUse this API documentation for reference: [{\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Removes all key-value pairs from a dictionary where the value is an empty string or an empty list.\", \"name\": \"remove_empty_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new dictionary with all empty values removed.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {}, \"description\": \"The dictionary to remove empty values from.\", \"type\": \"object\"}}, \"required\": [\"dictionary\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Remaps the question indices in a list of tuples of question indices and answers.\", \"name\": \"remap_question_indices\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples of the remapped question indices and answers.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"A list of tuples of the question index (integer) and the corresponding answer (string).\", \"items\": {\"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"string\"}], \"type\": \"array\"}, \"type\": \"array\"}, \"remap_index\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"A dictionary mapping the original question index to the new index.\", \"type\": \"object\"}}, \"required\": [\"data\", \"remap_index\"], \"type\": \"object\"}}, {\"description\": \"Samples `n` indices from the input numpy array using a uniform distribution.\", \"name\": \"sample_indices\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"arr\": {\"description\": \"The input numpy array.\", \"type\": \"object\"}, \"n\": {\"description\": \"The number of indices to sample.\", \"type\": \"integer\"}}, \"required\": [\"arr\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Parses a string into a dictionary.\", \"name\": \"parse_parameters\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the keys are the parts of the string before the `=` symbol and\\n    the values are the parts after the `=` symbol.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"params_string\": {\"description\": \"A string in the format of \\\"key1=value1,key2=value2,key3=value3\\\".\", \"type\": \"string\"}}, \"required\": [\"params_string\"], \"type\": \"object\"}}, {\"description\": \"Filters a dictionary based on a matching condition.\", \"name\": \"filter_dict_items\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of matching values.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"condition\": {\"additionalProperties\": {}, \"description\": \"The condition to match.\", \"type\": \"object\"}, \"dictionary\": {\"additionalProperties\": {\"additionalProperties\": {}, \"type\": \"object\"}, \"description\": \"The dictionary to filter.\", \"type\": \"object\"}}, \"required\": [\"dictionary\", \"condition\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Filters a list of examples into positive and negative examples.\", \"name\": \"filter_positive_and_negative_examples\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing two lists: one for positive examples and the other for negative examples.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"examples\": {\"description\": \"A list of tuples, where each tuple contains an example and its label.\", \"items\": {\"prefixItems\": [{}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"examples\"], \"type\": \"object\"}}, {\"description\": \"Calculates the hierarchical depth of a path.\", \"name\": \"get_depth\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"path\": {\"description\": \"The path to calculate the depth of.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"path\"], \"type\": \"object\"}}, {\"description\": \"Reads and counts the number of lines in each of the files in a given directory that match a specific file extension.\", \"name\": \"find_count_by_ext\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary that maps the file name to the line count.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"directory_path\": {\"description\": \"The path to the directory.\", \"type\": \"string\"}, \"ext\": {\"description\": \"The file extension to match.\", \"type\": \"string\"}}, \"required\": [\"directory_path\", \"ext\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Checks if a given object is a string, integer, or float, and returns the type as a string.\", \"name\": \"check_string_integer_or_float\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The object to check.\", \"type\": [\"integer\", \"number\", \"string\"]}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of every second element in a list, provided that the element is an integer.\\nIf the list is empty or all elements are not integers, returns 0.\", \"name\": \"sum_every_second\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The list of elements.\", \"items\": {\"type\": [\"integer\", \"string\"]}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Maps a given set of RGB colors to a new set of RGB colors.\", \"name\": \"map_colors\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list of RGB tuples representing the transformed colors.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"colors\": {\"description\": \"A list of RGB tuples representing a set of colors.\", \"items\": {\"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"type\": \"array\"}, \"mapping_func\": {\"description\": \"A function that takes an RGB tuple and returns a new tuple.\", \"type\": \"object\"}}, \"required\": [\"colors\", \"mapping_func\"], \"type\": \"object\"}}, {\"description\": \"Converts a positive integer to a list of 0's and 1's representing its binary value.\", \"name\": \"int_to_binary_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"num\": {\"description\": \"The positive integer to be converted.\", \"type\": \"integer\"}}, \"required\": [\"num\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"parse_parameters\", \"arguments\": {\"params_string\": \"key1=value1,key2=value2,key3=value3\"}, \"label\": \"$var1\"}, {\"name\": \"remove_empty_values\", \"arguments\": {\"dictionary\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n{'key1': 'value1', 'key2': 'value2', 'key3': 'value3'}\n\nNow solve:\nA shopkeeper bought 600 oranges and 400 bananas. He found 15% of oranges and 7% of bananas were rotten. Find the percentage of fruits in good condition?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 881,
    "text": "Example:\n\nInstruction:\nI want to add indentation to the text 'Hello, World!' with a level of 4. Then, I want to hash the resulting indented text using the SHA-256 algorithm.\n\nUse this API documentation for reference: [{\"description\": \"Adds indentation to a text block, and handles errors gracefully.\", \"name\": \"add_indent\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"level\": {\"description\": \"The number of times to indent the text.\", \"type\": \"integer\"}, \"text\": {\"description\": \"The text block to be indented.\", \"type\": \"string\"}}, \"required\": [\"text\", \"level\"], \"type\": \"object\"}}, {\"description\": \"Swaps the maximum and minimum values in a list of numbers.\", \"name\": \"swap_max_min\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of numbers with the maximum and minimum values swapped.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Checks if the names of two functions are the same.\", \"name\": \"check_functions\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"func1\": {\"description\": \"The first function to check.\", \"type\": \"object\"}, \"func2\": {\"description\": \"The second function to check.\", \"type\": \"object\"}}, \"required\": [\"func1\", \"func2\"], \"type\": \"object\"}}, {\"description\": \"Calculates the value of a polynomial at a given point `x`.\", \"name\": \"P\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The coefficients of the polynomial.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"x\": {\"description\": \"The point at which to evaluate the polynomial.\", \"type\": \"number\"}}, \"required\": [\"x\", \"a\"], \"type\": \"object\"}}, {\"description\": \"Extracts the stock name from a string of the form `stock_name.closing_price`.\", \"name\": \"extract_stock_name\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The stock name if it can be extracted, otherwise `None`.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Hashes a JSON-serializable object using the SHA-256 algorithm.\", \"name\": \"hash_json\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The hex-encoded hash digest of the input object.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The JSON-serializable object to hash.\", \"type\": \"object\"}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Performs the logical AND operation on two boolean inputs.\", \"name\": \"and_op\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"input1\": {\"description\": \"The first boolean input.\", \"type\": [\"boolean\", \"integer\"]}, \"input2\": {\"description\": \"The second boolean input.\", \"type\": [\"boolean\", \"integer\"]}}, \"required\": [\"input1\", \"input2\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Determines if a given string represents a hash of a supported type.\", \"name\": \"is_hash\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the string represents a hash of a supported type, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The string to check.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Converts a given integer into a string and reverses it.\", \"name\": \"reverse_integer\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input integer as a string, but in reverse order.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"num\": {\"description\": \"The input integer.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"num\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of integers that are greater than or equal to the given integer.\", \"name\": \"greater_than_or_equal_to\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of integers that are greater than or equal to the given integer.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"list_of_ints\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"num\": {\"description\": \"An integer.\", \"type\": \"integer\"}}, \"required\": [\"list_of_ints\", \"num\"], \"type\": \"object\"}}, {\"description\": \"Returns the quotient and remainder of x divided by y.\", \"name\": \"div_and_mod\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The dividend.\", \"type\": \"integer\"}, \"y\": {\"description\": \"The divisor.\", \"type\": \"integer\"}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Constructs a string representing the full function name and its arguments.\", \"name\": \"construct_function_name\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string representing the full function name and its arguments.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"function_name\": {\"description\": \"The name of the function.\", \"type\": \"string\"}}, \"required\": [\"function_name\"], \"type\": \"object\"}}, {\"description\": \"Returns a nested list of lists, where the first element is the list itself,\\nfollowed by all sublists generated by successively splitting the list into\\nchunks of the size of the first argument.\", \"name\": \"list_chunks\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The list to be split into chunks.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"size\": {\"description\": \"The size of the chunks. Default is 2.\", \"type\": \"integer\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Converts a string to a number. If the string is a decimal number, it returns\\nthe corresponding integer value. If the string is a hexadecimal number, it\\nreturns the corresponding integer value converted from the hexadecimal.\", \"name\": \"str_to_num\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string to be converted to a number.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"add_indent\", \"arguments\": {\"text\": \"Hello, World!\", \"level\": 4}, \"label\": \"$var1\"}, {\"name\": \"hash_json\", \"arguments\": {\"obj\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n43c1c0e1c9aea74cc5b4d26ca50120e835025e8e2adf6e43d16909fbb6942936\n\nNow solve:\nPeter invested a certain sum of money in a simple interest bond whose value grew to $400 at the end of 3 years and to $ 600 at the end of another 2 years. What was the rate of interest in which he invested his sum?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 882,
    "text": "Example:\n\nInstruction:\nIf two-third of a bucket is filled in 6 minute then the time taken to fill the bucket completely will be .\n\nUse this API documentation for reference: [{\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 6, \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 3}}]\n\nGold Answer:\n9.0\n\nNow solve:\ncoconuts were purchased at 150 per 100 and sold at 2 per coconut . if 2000 coconuts were sold , what was the total profit made ?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 883,
    "text": "Example:\n\nInstruction:\nA train running at the speed of 40 km/hr crosses a pole in 9 sec. What is the length of the train?\n\nUse this API documentation for reference: [{\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 40, \"arg_1\": 1000}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 3600}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 9}}]\n\nGold Answer:\n100.0\n\nNow solve:\nP, Q and R have $8000 among themselves. R has two-thirds of the total amount with P and Q. Find the amount with R?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 884,
    "text": "Example:\n\nInstruction:\nthe sum of 7th and 23rd term of A.P. is equal to the sum of 8th , 15th and 13 th term . find the term which is 0\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 8, \"arg_1\": 15}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 13, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 7, \"arg_1\": 23}}, {\"name\": \"subtract\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}]\n\nGold Answer:\n6.0\n\nNow solve:\nConvert the string '123' to an integer, then divide it by 5 and return the quotient and remainder.\n\nUse this API documentation for reference: [{\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Renames the column 'A' to 'X' in the given DataFrame.\\n\\nIf the column 'A' does not exist, the function returns a message indicating that the column does not exist.\", \"name\": \"rename_column\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The DataFrame with the renamed column or a message indicating that the column does not exist.\", \"type\": [\"object\", \"string\"]}}}, \"parameters\": {\"properties\": {\"df\": {\"description\": \"The DataFrame to rename the column in.\", \"type\": \"object\"}}, \"required\": [\"df\"], \"type\": \"object\"}}, {\"description\": \"Constructs a dictionary containing the object's public properties and methods.\", \"name\": \"construct_object_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary containing the object's public properties and methods.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The object reference.\"}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Sorts a list of 2D vectors based on the second element of each vector.\", \"name\": \"sort_by_second_element\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The sorted list of vectors based on the second element of each vector.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"A list of 2D vectors (i.e. lists of length 2).\", \"items\": {\"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"input_list\"], \"type\": \"object\"}}, {\"description\": \"Removes duplicate pairs from a list of pairs.\\nA pair is considered a duplicate if it contains the same elements as another pair,\\nbut in a different order.\", \"name\": \"remove_duplicate_pairs\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list of unique pairs.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"pairs\": {\"description\": \"A list of pairs. Each pair is a 2-element list of integers.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"pairs\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Checks if m is a perfect square of n.\", \"name\": \"is_square_root\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A boolean value indicating whether m is a perfect square of n.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"m\": {\"description\": \"A positive integer.\", \"type\": \"integer\"}, \"n\": {\"description\": \"A positive integer.\", \"type\": \"integer\"}}, \"required\": [\"n\", \"m\"], \"type\": \"object\"}}, {\"description\": \"Divides two integers without using the `//` operator, and returns the quotient and remainder.\", \"name\": \"divide_without_div_operator\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"dividend\": {\"description\": \"The number to be divided.\", \"type\": \"integer\"}, \"divisor\": {\"description\": \"The number to divide by.\", \"type\": \"integer\"}}, \"required\": [\"dividend\", \"divisor\"], \"type\": \"object\"}}, {\"description\": \"Performs an arithmetic operation on two integers based on the value of `op`.\", \"name\": \"arith_op\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first integer.\", \"type\": \"integer\"}, \"b\": {\"description\": \"The second integer.\", \"type\": \"integer\"}, \"op\": {\"description\": \"The arithmetic operation to perform.\", \"type\": \"integer\"}}, \"required\": [\"a\", \"b\", \"op\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Converts a string containing a positive integer to an integer without using the built-in int() function.\", \"name\": \"my_int\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"string_num\": {\"description\": \"A string containing a positive integer.\", \"type\": \"string\"}}, \"required\": [\"string_num\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 885,
    "text": "Example:\n\nInstruction:\na sum of rs . 66000 is divided into 3 parts such that the simple interests accrued on them for 6 , two and 11 years respectively may be equal . find the amount deposited for 11 years .\n\nUse this API documentation for reference: [{\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 6, \"arg_1\": 10}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n6000.0\n\nNow solve:\nGiven a string \"hello world\", fix the TeX maths expressions in the string and then convert the fixed string to fixed-length records of length 10.\n\nUse this API documentation for reference: [{\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Sorts a list of integers from a string.\", \"name\": \"sort_numbers_in_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A sorted list of integers.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"A string containing a list of integers separated by commas.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Extracts data from the 'data' key of an event dict.\", \"name\": \"extract_data_from_event\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The data in a Python dict. If the 'data' key is missing or the value is not a valid JSON string,\\n    an empty dict is returned instead.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"event\": {\"description\": \"The event dict containing the 'data' key.\", \"type\": \"object\"}}, \"required\": [\"event\"], \"type\": \"object\"}}, {\"description\": \"Determines whether a given URL is using the HTTPS protocol.\", \"name\": \"is_https\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the URL is using HTTPS, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"url\": {\"description\": \"The URL to check.\", \"type\": \"string\"}}, \"required\": [\"url\"], \"type\": \"object\"}}, {\"description\": \"Checks if an integer is a power of 2.\", \"name\": \"check_for_binary_power\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the integer is a power of 2, otherwise False.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The integer to check.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Conjugates a complex number `z = a + bi`.\", \"name\": \"conjugate_complex\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"z\": {\"description\": \"The complex number to be conjugated.\", \"type\": \"object\"}}, \"required\": [\"z\"], \"type\": \"object\"}}, {\"description\": \"Converts a hexadecimal string to an integer.\", \"name\": \"from_hex_string_to_int\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"An integer.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"hex_string\": {\"description\": \"A string of hexadecimal digits (0123456789abcdef or 0123456789ABCDEF), with or without a '0x' prefix.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"hex_string\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Fixes TeX maths expressions in a given string by removing leading and trailing spaces.\", \"name\": \"fix_tex_maths\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The input string with all TeX maths expressions fixed.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string containing TeX maths expressions.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of all articles that match the query.\\nEach article is represented as a tuple (id, title, content) and sorted by the article ID in ascending order.\", \"name\": \"get_articles\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"db_file\": {\"description\": \"The SQLite database file name.\", \"type\": \"string\"}, \"query\": {\"description\": \"The query string.\", \"type\": \"string\"}}, \"required\": [\"db_file\", \"query\"], \"type\": \"object\"}}, {\"description\": \"Splits a string into a list of tokens based on Unicode whitespace characters.\", \"name\": \"split_by_unicode_whitespace\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tokens split by Unicode whitespace characters.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string to be split.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Converts the given text to fixed-length records by padding with spaces or truncating the text to fit the record length.\", \"name\": \"convert_to_fixed_length_records\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"record_length\": {\"description\": \"The length of each record.\", \"type\": \"integer\"}, \"text\": {\"description\": \"The input text to be converted.\", \"type\": \"string\"}}, \"required\": [\"text\", \"record_length\"], \"type\": \"object\"}}, {\"description\": \"Converts a string to its corresponding numeric value, if possible.\", \"name\": \"numeric_value\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The numeric value of the input string, if it can be converted to an integer or a float.\\n    None, if the input string cannot be converted to a numeric value.\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string to be converted.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Reads a pickled file and returns a dictionary containing the data.\", \"name\": \"read_pickled_file\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The name of the pickled file.\", \"type\": \"string\"}}, \"required\": [\"filename\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 886,
    "text": "Example:\n\nInstruction:\nTogether, 15 type A machines and 7 type B machines can complete a certain job in 4 hours. Together 8 type B machines and 15 type C machines can complete the same job in 11 hours. How many hours E would it take one type A machine, one type B machine, and one type C machine working together to complete the job (assuming constant rates for each machine)?\n\nUse this API documentation for reference: [{\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 4}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 11}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 15}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_4.result$\"}}]\n\nGold Answer:\n44.0\n\nNow solve:\nCountry X taxes each of its citizens an amount equal to 13 percent of the first $40,000 of income, plus 20 percent of all income in excess of $40,000. If a citizen of Country X is taxed a total of $8,000, what is her income?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 887,
    "text": "Example:\n\nInstruction:\n20 beavers, working together in a constant pace, can build a dam in 6 hours. How many hours will it take 12 beavers that work at the same pace, to build the same dam?\n\nUse this API documentation for reference: [{\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 6, \"arg_1\": 20}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 12}}]\n\nGold Answer:\n10.0\n\nNow solve:\nGiven a list of integers [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], find the 5th smallest element. Then convert the number 5 to a binary string of 5 zeros. Finally, calculate the number of leading and trailing spaces in the binary string.\n\nUse this API documentation for reference: [{\"description\": \"Calculates the product of two matrices.\", \"name\": \"matrix_product\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A numpy array of shape (N, K) representing the product of the two matrices.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"A numpy array of shape (N, M).\", \"type\": \"object\"}, \"b\": {\"description\": \"A numpy array of shape (M, K).\", \"type\": \"object\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Efficiently finds the nth smallest element in a list of unsorted integers.\", \"name\": \"find_nth_smallest\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The nth smallest element in the list.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The position of the smallest element to find.\", \"type\": \"integer\"}, \"nums\": {\"description\": \"A list of unsorted integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"nums\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Creates a m x n matrix filled with zeros.\", \"name\": \"zeros_matrix\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"m\": {\"description\": \"The number of rows in the matrix.\", \"type\": \"integer\"}, \"n\": {\"description\": \"The number of columns in the matrix.\", \"type\": \"integer\"}}, \"required\": [\"m\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Calculates the normalized sign of the unit magnitude of a number.\", \"name\": \"norm_sign\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"num\": {\"description\": \"The input number.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"num\"], \"type\": \"object\"}}, {\"description\": \"Calculates the number of leading and trailing spaces in a string.\", \"name\": \"count_leading_and_trailing_spaces\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing the number of leading spaces and the number of trailing spaces.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Converts a positive integer `n` to a binary string of `n` zeros.\", \"name\": \"zeroes_to_binary\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A binary string of `n` zeros.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"A positive integer.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of tuples of the coordinates of all the neighbors of (r,c)\\nthat are within the bounds of the matrix.\", \"name\": \"neighbors\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"c\": {\"description\": \"The column coordinate of the given coordinate.\", \"type\": \"integer\"}, \"matrix\": {\"description\": \"The sparse matrix.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}, \"r\": {\"description\": \"The row coordinate of the given coordinate.\", \"type\": \"integer\"}}, \"required\": [\"matrix\", \"r\", \"c\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Extracts the \\\"x\\\" and \\\"y\\\" coordinates from the given array of tuples.\", \"name\": \"get_xy\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing two lists. The first list contains the \\\"x\\\" coordinates, and the second list contains the \\\"y\\\" coordinates.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"arr\": {\"description\": \"A list of tuples, where each tuple contains two integers representing the \\\"x\\\" and \\\"y\\\" coordinates.\", \"items\": {\"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"arr\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 888,
    "text": "Example:\n\nInstruction:\nGiven a list of integers [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], return the sum of the first 5 elements.\n\nUse this API documentation for reference: [{\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Computes the sum of all elements in a list using recursion.\", \"name\": \"sum_of_elements\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The sum of all elements in the list.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The input list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}, {\"description\": \"Calculates the spherical harmonic values for the given theta and phi.\", \"name\": \"spherical_harmonic_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The spherical harmonic value.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"phi\": {\"description\": \"The phi value.\", \"type\": \"number\"}, \"theta\": {\"description\": \"The theta value.\", \"type\": \"number\"}}, \"required\": [\"theta\", \"phi\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Formats a dictionary into a string table with keys and values separated by a tab character.\", \"name\": \"format_dict_table\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string containing the formatted table.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"score_dict\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"A dictionary containing the keys and values to be formatted.\", \"type\": \"object\"}}, \"required\": [\"score_dict\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Pads a string with leading zeros to a specific length.\", \"name\": \"pad_string_with_leading_zeros\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new string with `length` characters, where the input string is right aligned and padded with zeros if necessary.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"length\": {\"description\": \"The desired length of the output string.\", \"type\": \"integer\"}, \"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\", \"length\"], \"type\": \"object\"}}, {\"description\": \"Checks whether an argument is a class method.\", \"name\": \"is_class_method\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the argument is a class method, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"arg\": {\"description\": \"The argument to check.\"}}, \"required\": [\"arg\"], \"type\": \"object\"}}, {\"description\": \"Returns the first k elements of a list L if k is less than or equal to the length of L. Otherwise, returns L.\", \"name\": \"first_k\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"L\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"k\": {\"description\": \"The number of elements to return.\", \"type\": \"integer\"}}, \"required\": [\"L\", \"k\"], \"type\": \"object\"}}, {\"description\": \"Calculates the frequency of each word in a string of text.\", \"name\": \"calculate_word_frequency_map\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary mapping each word to its frequency as an integer.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input text.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Checks if a given number is a prime number.\", \"name\": \"is_prime_naive\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The number to check.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"first_k\", \"arguments\": {\"L\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], \"k\": 5}, \"label\": \"$var1\"}, {\"name\": \"sum_of_elements\", \"arguments\": {\"lst\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n15\n\nNow solve:\nReplace every occurrence of 0 in the list [1, 0, 1, 0, 1] with 2. Then, group all the 0's and 1's together in the resulting list.\n\nUse this API documentation for reference: [{\"description\": \"Replaces every occurrence of `target` in `src_list` with `replacement`.\\nIf `target` does not occur in `src_list`, returns an empty list.\", \"name\": \"replace_with_target\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"replacement\": {\"description\": \"The integer to replace `target` with.\", \"type\": \"integer\"}, \"src_list\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"target\": {\"description\": \"The integer to be replaced.\", \"type\": \"integer\"}}, \"required\": [\"src_list\", \"target\", \"replacement\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Splits a string of key-value pairs into a list of tuples representing the split key-value pairs.\", \"name\": \"split_text_into_key_val_tuples\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing a list of tuples representing the split key-value pairs and the default value.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"A string of key-value pairs.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Converts a byte array to a Base64-encoded string using the URL-safe alphabet.\", \"name\": \"convert_to_base64_url\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"byte_array\": {\"description\": \"A byte array to be converted to Base64.\", \"type\": \"object\"}}, \"required\": [\"byte_array\"], \"type\": \"object\"}}, {\"description\": \"Groups all the 0's together and all the 1's together in a list.\", \"name\": \"group_zeros_and_ones\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of 0's and 1's with all the 0's grouped together and all the 1's grouped together.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"A list of 0's and 1's.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"input_list\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Returns the corresponding description for a given range string, or None if the range string is not present in the table.\", \"name\": \"get_range_description\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"range_string\": {\"description\": \"A string in the form of \\\"x-y\\\" representing a range.\", \"type\": \"string\"}, \"table\": {\"description\": \"A list of lists, where each inner list corresponds to a row in the table. Each row contains two elements: the range string and the description string.\", \"items\": {\"items\": {\"nullable\": true, \"type\": \"string\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"table\", \"range_string\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Generates a string representation of a given integer.\", \"name\": \"generate_integer_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"integer\": {\"description\": \"The integer to be represented as a string.\", \"type\": \"integer\"}}, \"required\": [\"integer\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Replaces all occurrences of the substring \\\"abc\\\" with \\\"def\\\" in the input string.\", \"name\": \"replace_abc_with_def\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The modified string with all occurrences of \\\"abc\\\" replaced with \\\"def\\\".\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string to be modified.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 889,
    "text": "Example:\n\nInstruction:\nx varies inversely as square of y. Given that y=3 for x=1. The value of x for y = 7 will be equal to:\n\nUse this API documentation for reference: [{\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"power\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"power\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 7, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}]\n\nGold Answer:\n0.1836734693877551\n\nNow solve:\nGenerate a random string of length 10 containing only alphanumeric characters, then split it into chunks of size 2.\n\nUse this API documentation for reference: [{\"description\": \"Splits a string into chunks of a specified size.\", \"name\": \"chunked\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings, where each string is a chunk of the input string.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"chunk_size\": {\"description\": \"The size of each chunk.\", \"type\": \"integer\"}, \"string\": {\"description\": \"The input string to be split.\", \"type\": \"string\"}}, \"required\": [\"string\", \"chunk_size\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Creates a dictionary where the keys are the unique strings in the input list and the values are a list of indices where each string appears.\", \"name\": \"string_indices_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the keys are the unique strings in the input list and the values are a list of indices where each string appears.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"input_list\"], \"type\": \"object\"}}, {\"description\": \"Finds all possible paths from a source node to a destination node in a directed graph.\", \"name\": \"find_paths\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of paths, each path is a list of nodes representing the path from the source to the destination.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"destination\": {\"description\": \"The destination node.\", \"type\": \"string\"}, \"graph\": {\"additionalProperties\": {\"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"description\": \"A dictionary representing the directed graph. Each key is a node and its value is a list of nodes that can be reached directly from the key node.\", \"type\": \"object\"}, \"source\": {\"description\": \"The source node.\", \"type\": \"string\"}}, \"required\": [\"graph\", \"source\", \"destination\"], \"type\": \"object\"}}, {\"description\": \"Constructs an HTML element with the given tag and text as content.\", \"name\": \"construct_html_tag\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string representing the constructed HTML element.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"tag\": {\"description\": \"The HTML tag to use for the element.\", \"type\": \"string\"}, \"text\": {\"description\": \"The content to include within the HTML element.\", \"type\": \"string\"}}, \"required\": [\"tag\", \"text\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Merges the lines of two files into a single list of lines.\", \"name\": \"merge_lines\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of all lines contained in the first file followed by all lines contained in the second file.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"file1_path\": {\"description\": \"The path to the first file.\", \"type\": \"string\"}, \"file2_path\": {\"description\": \"The path to the second file.\", \"type\": \"string\"}}, \"required\": [\"file1_path\", \"file2_path\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Generates a random string of size `length`, where each character is randomly chosen from the set of digits (0-9).\", \"name\": \"random_hash\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A random string of length `length`.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"length\": {\"description\": \"The length of the random string.\", \"type\": \"integer\"}}, \"required\": [\"length\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Finds the key of the innermost dictionary with the largest value.\", \"name\": \"find_largest_value\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The key of the innermost dictionary with the largest value.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {}, \"description\": \"A dictionary of nested dictionaries.\", \"type\": \"object\"}}, \"required\": [\"dictionary\"], \"type\": \"object\"}}, {\"description\": \"Generates a random string of a specified length, containing only alphanumeric characters.\", \"name\": \"random_alphanumeric_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A random string of the specified length, containing only alphanumeric characters.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"length\": {\"description\": \"The length of the random string to generate.\", \"type\": \"integer\"}}, \"required\": [\"length\"], \"type\": \"object\"}}, {\"description\": \"Applies a mathematical expression to a tensor and modifies it in-place.\", \"name\": \"tensor_operation\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"tensor\": {\"description\": \"The input tensor of unknown shape and length.\", \"type\": \"object\"}}, \"required\": [\"tensor\"], \"type\": \"object\"}}, {\"description\": \"Returns the first index where the search string occurs in the source string.\\nIf the search string is not found, returns -1 as a default value.\", \"name\": \"find_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"search\": {\"description\": \"The search string to find in the source string.\", \"type\": \"string\"}, \"source\": {\"description\": \"The source string to search in.\", \"type\": \"string\"}}, \"required\": [\"source\", \"search\"], \"type\": \"object\"}}, {\"description\": \"Deletes any empty subdirectories located within the specified directory.\", \"name\": \"delete_empty_folders\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"directory\": {\"description\": \"A string representing a directory path.\", \"type\": \"string\"}}, \"required\": [\"directory\"], \"type\": \"object\"}}, {\"description\": \"Inverts a dictionary where the values are unique.\", \"name\": \"invert_unique_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where keys are values and values are keys.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"d\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"A dictionary where values are unique.\", \"type\": \"object\"}}, \"required\": [\"d\"], \"type\": \"object\"}}, {\"description\": \"Returns True if either of the two boolean values is True but not both are True at the same time.\", \"name\": \"skip_if_both_true\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first boolean value.\", \"type\": \"boolean\"}, \"b\": {\"description\": \"The second boolean value.\", \"type\": \"boolean\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 890,
    "text": "Example:\n\nInstruction:\nA parking garage rents parking spaces for $10 per week or $20 per month. How much does a person save in a year by renting by the month rather than by the week?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 10, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 10}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 20, \"arg_1\": 12}}, {\"name\": \"subtract\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": \"$var_5.result$\"}}]\n\nGold Answer:\n280.0\n\nNow solve:\nchocolate bars are sold in packages of 4 or 9 only . if mark bought 97 chocolate bars exactly , what could be the number of large packs mark bought ?\n\nUse this API documentation for reference: [{\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 891,
    "text": "Example:\n\nInstruction:\nA man walking at a constant rate of 9 miles per hour is passed by a woman traveling in the same direction along the same path at a constant rate of 15 miles per hour. The woman stops to wait for the man 3 minutes after passing him, while the man continues to walk at his constant rate. How many minutes must the woman wait until the man catches up?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 60}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 15, \"arg_1\": 9}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 9}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 60, \"arg_1\": \"$var_4.result$\"}}]\n\nGold Answer:\n2.0\n\nNow solve:\nWorking at their respective constant rates, machine A makes 100 copies in 15 minutes and machine B makes 150 copies in 10 minutes. If these machines work simultaneously at their respective rates for 30 minutes, what is the total number of copies that they will produce?\n\nUse this API documentation for reference: [{\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 892,
    "text": "Example:\n\nInstruction:\nA train 100 meters long completely crosses a 300 meters long bridge in 45 seconds. What is the speed of the train is?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 300}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 1000}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 45, \"arg_1\": 3600}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}]\n\nGold Answer:\n32.0\n\nNow solve:\nThe cost price of an article is 64% of the marked price. Calculate the gain percent after allowing a discount of 20%?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 893,
    "text": "Example:\n\nInstruction:\nBy how much is 70% of 120 greater than 35% of 200.\n\nUse this API documentation for reference: [{\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 70, \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 120, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 35, \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 200}}, {\"name\": \"subtract\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_4.result$\"}}]\n\nGold Answer:\n14.0\n\nNow solve:\nFind the value of (950+ 220/900) \u00d7 900\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 894,
    "text": "Example:\n\nInstruction:\nI have a date string in US format '12/31/2022'. I want to convert it to European format and then pad it with spaces on the left until it becomes 15 characters long.\n\nUse this API documentation for reference: [{\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Parses a string of comments separated by newlines and returns a dictionary where each comment is a key and the value is the number of times the comment appears.\", \"name\": \"parse_comments\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the key is the comment and the value is the number of times the comment appears.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"comments\": {\"description\": \"A string of comments separated by newlines.\", \"type\": \"string\"}}, \"required\": [\"comments\"], \"type\": \"object\"}}, {\"description\": \"Determines if an integer is a power of two or a power of two plus one.\", \"name\": \"is_power_of_two_or_two_plus_one\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The integer to check.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Pads a string on the left with spaces until it becomes `n` characters long.\", \"name\": \"pad_string_left\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The padded string.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The desired length of the padded string.\", \"type\": \"integer\"}, \"s\": {\"description\": \"The string to pad.\", \"type\": \"object\"}}, \"required\": [\"s\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Converts a date string from US format to European format.\", \"name\": \"get_euro_date\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The date string in European format.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"date_str\": {\"description\": \"The date string in US format.\", \"type\": \"string\"}}, \"required\": [\"date_str\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Splits a list of strings into prefixes and suffixes, converts the prefixes to lowercase, and replaces every _ with a space.\", \"name\": \"split_and_lowercase\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples with lowercased prefixes and suffixes.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"strings\": {\"description\": \"A list of strings in the format \\\"[prefix]_[suffix]\\\".\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"strings\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Adds a paragraph tag before each h3 tag in the given HTML content.\", \"name\": \"add_paragraph_before_h3\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The modified HTML content.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"html_content\": {\"description\": \"The HTML content to modify.\", \"type\": \"string\"}}, \"required\": [\"html_content\"], \"type\": \"object\"}}, {\"description\": \"Returns the binary representation of the integer `n` as a string with a leading `\\\"0b\\\"` prefix.\", \"name\": \"bin_repr\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The binary representation of `n` as a string with a leading `\\\"0b\\\"` prefix.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"A positive integer.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"get_euro_date\", \"arguments\": {\"date_str\": \"12/31/2022\"}, \"label\": \"$var1\"}, {\"name\": \"pad_string_left\", \"arguments\": {\"s\": \"$var1.output_0$\", \"n\": 15}, \"label\": \"$var2\"}]\n\nGold Answer:\n     31.12.2022\n\nNow solve:\nIf the sides of a triangle are 31 cm, 29 cm and 15 cm, what is its area?\n\nUse this API documentation for reference: [{\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 895,
    "text": "Example:\n\nInstruction:\nGiven a string \"Hello, World!\", convert it to a list of ASCII codes. Then, find the smallest and largest ASCII codes in the list.\n\nUse this API documentation for reference: [{\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Transforms the case of a given string.\\nCapitalizes the first letter of each word, and lower-case all other letters.\\nA word is considered a sequence of non-space characters.\\nHandles empty and whitespace-only strings by returning an empty string.\\nRaises an exception for invalid input.\", \"name\": \"str_title_case\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"nullable\": true, \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the result using function foo.\", \"name\": \"foo\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first argument for function foo.\", \"type\": [\"integer\", \"number\"]}, \"b\": {\"description\": \"The second argument for function foo.\", \"type\": [\"integer\", \"number\"]}, \"c\": {\"description\": \"The third argument for function foo.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"a\", \"b\", \"c\"], \"type\": \"object\"}}, {\"description\": \"Finds the smallest and largest numbers in a given list.\", \"name\": \"find_extremes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A two-element list containing the smallest and largest numbers in the list.\\n    If the list is empty, returns an empty list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Splits a string into a list of substrings separated by a comma (`,`).\", \"name\": \"split_string_by_comma\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of substrings.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of keys that are common to both dictionaries.\", \"name\": \"common_keys\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"dict1\": {\"description\": \"The first dictionary.\", \"type\": \"object\"}, \"dict2\": {\"description\": \"The second dictionary.\", \"type\": \"object\"}}, \"required\": [\"dict1\", \"dict2\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Converts a string to a list of ASCII codes.\", \"name\": \"convert_to_ascii_codes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of integers representing the ASCII values of the characters in the input string.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Finds the maximum value from the first column in a file.\", \"name\": \"find_max_in_first_column\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the file.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of matches containing the input ID from the given list of dictionaries.\", \"name\": \"find_id\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"id\": {\"description\": \"The ID to search for.\", \"type\": \"integer\"}, \"target_list\": {\"description\": \"The list of dictionaries to search through.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"target_list\", \"id\"], \"type\": \"object\"}}, {\"description\": \"Returns a new list containing the first and last element of the input list.\\nIf the input list is empty or has fewer than two elements, `first_and_last()` returns an empty list.\", \"name\": \"first_and_last\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Finds all strings in the list that contain the target string.\", \"name\": \"find_containing_strings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings that contain the target string.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string_list\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"target_string\": {\"description\": \"The target string to search for.\", \"type\": \"string\"}}, \"required\": [\"string_list\", \"target_string\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Checks if the parameter name \\\"q\\\" exists in the URL.\", \"name\": \"check_query_param\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"url\": {\"description\": \"The URL to check for the parameter name \\\"q\\\".\", \"type\": \"string\"}}, \"required\": [\"url\"], \"type\": \"object\"}}, {\"description\": \"Collects and sorts the counts of phone numbers in a dictionary.\", \"name\": \"collect_and_sort_counts\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A sorted list of tuples, where each tuple contains a name and its corresponding count of phone numbers. The list is sorted in ascending order based on the count of phone numbers.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"phone_counts_dict\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"A dictionary where the keys are the names of people and the values are the counts of phone numbers associated with them.\", \"type\": \"object\"}}, \"required\": [\"phone_counts_dict\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"convert_to_ascii_codes\", \"arguments\": {\"text\": \"Hello, World!\"}, \"label\": \"$var1\"}, {\"name\": \"find_extremes\", \"arguments\": {\"numbers\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n[32, 114]\n\nNow solve:\nFormat the directory path '/home/user/documents' into a string with each directory or file on a new line. Then reverse the words in each line without reversing the entire line.\n\nUse this API documentation for reference: [{\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns the file name from the subject string.\\nThe subject string is in the format of \\\"[filename] - [file info]\\\".\\nThe function splits the string by the dash and then removes any square brackets (`[]`) or parentheses (`()`) from the resulting string.\", \"name\": \"get_file_name_from_subject\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The file name from the subject string.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"subject\": {\"description\": \"The subject string in the format of \\\"[filename] - [file info]\\\".\", \"type\": \"object\"}}, \"required\": [\"subject\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Reverses the words in a line without reversing the entire line.\", \"name\": \"reverse_line_by_word\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The line with the words reversed.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"line\": {\"description\": \"The input line.\", \"type\": \"string\"}}, \"required\": [\"line\"], \"type\": \"object\"}}, {\"description\": \"Generates a parametrized SQL DELETE query from a list of numeric IDs and a list of string values.\", \"name\": \"generate_sql_delete_query\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"num_ids\": {\"description\": \"A list of numeric IDs.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"str_values\": {\"description\": \"A list of string values.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"table_name\": {\"description\": \"A string representing the name of the database table.\", \"type\": \"string\"}}, \"required\": [\"num_ids\", \"str_values\", \"table_name\"], \"type\": \"object\"}}, {\"description\": \"Finds the index of the first even number in the input list.\", \"name\": \"find_first_even_number\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The index of the first even number in the input list, or -1 if no even number is found.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"The input list to search for an even number.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"input_list\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Returns a new list with every third element of the original list skipped.\", \"name\": \"skip_every_third\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list with every third element of the original list skipped.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"The original list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}, {\"description\": \"Returns a sorted list of key-value pairs based on the values of the dictionary.\\nThe pairs are sorted in descending order based on the values.\", \"name\": \"get_sorted_pairs\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"The input dictionary.\", \"type\": \"object\"}}, \"required\": [\"dictionary\"], \"type\": \"object\"}}, {\"description\": \"Returns a new list consisting of the minimum value at each index among all the input lists.\", \"name\": \"min_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"A list of lists of integers.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"input_list\"], \"type\": \"object\"}}, {\"description\": \"Parses a string of a range of integers in the format 'start-end' and returns a list of integers within that range.\", \"name\": \"parse_range_str\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of integers within the range.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"range_str\": {\"description\": \"The input string of a range of integers in the format 'start-end'.\", \"type\": \"string\"}}, \"required\": [\"range_str\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Formats a directory path into a string with each directory or file on a new line.\", \"name\": \"format_directory\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string with each directory or file on a new line.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"directory_path\": {\"description\": \"The directory path to format.\", \"type\": \"string\"}}, \"required\": [\"directory_path\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Calculates the maximum number of elements that can be stored in a block.\", \"name\": \"max_elements\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The maximum number of elements that can be stored in the block.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"block_size\": {\"description\": \"The size of the block.\", \"type\": \"integer\"}, \"element_size\": {\"description\": \"The size of each element.\", \"type\": \"integer\"}}, \"required\": [\"block_size\", \"element_size\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 896,
    "text": "Example:\n\nInstruction:\nSuppose you have three identical prisms with congruent equilateral triangles as the end-polygons. Suppose you attach them by the rectangular faces so they are perfectly aligned. There will be some large faces created by two or more co-planar faces of the individual prisms: count each such large face as one. Given that, how many faces does the resultant solid have?\n\nUse this API documentation for reference: [{\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 1}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 1}}]\n\nGold Answer:\n6.0\n\nNow solve:\nThe sum of all the integers s such that -26 < s < 24 is\n\nUse this API documentation for reference: [{\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 897,
    "text": "Example:\n\nInstruction:\nMr Yadav spends 60% of his monthly salary on consumable items and 50% of the remaining on clothes and transport. He saves the remaining amount. If his savings at the end of the year were 38400, how much amount per month would he have spent on clothes and transport?\n\nUse this API documentation for reference: [{\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 60}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 50}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 100}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 100}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 38400, \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 4}}, {\"name\": \"divide\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": \"$var_6.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 60}}, {\"name\": \"multiply\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": \"$var_8.result$\", \"arg_1\": 50}}, {\"name\": \"divide\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_9.result$\", \"arg_1\": 100}}, {\"name\": \"divide\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": \"$var_10.result$\", \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_12\", \"arguments\": {\"arg_0\": \"$var_7.result$\", \"arg_1\": \"$var_11.result$\"}}]\n\nGold Answer:\n3200.0\n\nNow solve:\nGeorge went to a fruit market with certain amount of money. With this money he can buy either 50 oranges or 40 mangoes. He retains 5% of the money for taxi fare and buys 25 mangoes. How many oranges can he buy?\n\nUse this API documentation for reference: [{\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 898,
    "text": "Example:\n\nInstruction:\nA box contains 8 pairs of shoes (16 shoes in total). If two shoes are selected at random, what it is the probability that they are matching shoes?\n\nUse this API documentation for reference: [{\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 16, \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_1.result$\"}}]\n\nGold Answer:\n0.06666666666666667\n\nNow solve:\nFind large no. from below question The difference of two numbers is 1365. On dividing the larger number by the smaller, we get 6 as quotient and the 30 as remainder\n\nUse this API documentation for reference: [{\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 899,
    "text": "Example:\n\nInstruction:\nA retailer sold an appliance for $100. If the retailer's gross profit on the appliance was 25 percent of the retailer's cost for the appliance, how many dollars was the retailer's gross profit?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 25, \"arg_1\": 100}}, {\"name\": \"add\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 100}}, {\"name\": \"subtract\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 100, \"arg_1\": \"$var_4.result$\"}}]\n\nGold Answer:\n20.0\n\nNow solve:\nTwo cars start from the opposite places of a main road, 140 km apart. First car runs for 25 km and takes a right turn and then runs 15 km. It then turns left and then runs for another 25 km and then takes the direction back to reach the main road. In the mean time, due to minor break down the other car has run only 35 km along the main road. What would be the distance between two cars at this point?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"gcd\", \"description\": \"calculate the Greatest Common Divisor (GCD) of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Greatest Common Divisor\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 900,
    "text": "Example:\n\nInstruction:\nI have a value of 10. I want to round it to the nearest bin edge using the bin edges [0, 5, 10, 15]. Then, I want to calculate the number of bits required to represent the rounded value in binary.\n\nUse this API documentation for reference: [{\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Rounds a value to the nearest bin edge.\", \"name\": \"round_to_bin_edge\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"bin_edges\": {\"description\": \"A list of bin edges.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"value\": {\"description\": \"The value to round.\", \"type\": \"number\"}}, \"required\": [\"value\", \"bin_edges\"], \"type\": \"object\"}}, {\"description\": \"Generates a list of all increasing sequences of length k that are composed of the first n natural numbers.\", \"name\": \"generate_increasing_sequences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of increasing sequences of length k that are composed of the first n natural numbers.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"k\": {\"description\": \"The length of the sequences.\", \"type\": \"integer\"}, \"n\": {\"description\": \"The number of natural numbers to use.\", \"type\": \"integer\"}}, \"required\": [\"n\", \"k\"], \"type\": \"object\"}}, {\"description\": \"Checks if at least one of the mode flags is set.\", \"name\": \"is_one_of_modes\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A boolean indicating if at least one of the flags is set to True.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"is_append_mode\": {\"description\": \"A boolean indicating if the append mode is set.\", \"type\": \"boolean\"}, \"is_binary_mode\": {\"description\": \"A boolean indicating if the binary mode is set.\", \"type\": \"boolean\"}, \"is_read_mode\": {\"description\": \"A boolean indicating if the read mode is set.\", \"type\": \"boolean\"}, \"is_update_mode\": {\"description\": \"A boolean indicating if the update mode is set.\", \"type\": \"boolean\"}, \"is_write_mode\": {\"description\": \"A boolean indicating if the write mode is set.\", \"type\": \"boolean\"}}, \"required\": [\"is_read_mode\", \"is_write_mode\", \"is_append_mode\", \"is_update_mode\", \"is_binary_mode\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the number of bits required to represent an integer in binary.\", \"name\": \"bit_length\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The integer to calculate the bit length for.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Checks if the given time_format is a valid time format using the datetime module in the standard library.\\nThe time_format is in the format of '%I:%M %p'.\", \"name\": \"is_valid_time_format\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"time_format\": {\"description\": \"The time format to check.\", \"type\": \"string\"}}, \"required\": [\"time_format\"], \"type\": \"object\"}}, {\"description\": \"Parses a list of strings representing names and ages into a dictionary.\", \"name\": \"parse_names_ages\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the keys are the names and the values are the ages. If the input is not in the correct format,\\n    the function returns an empty dictionary.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"names_ages\": {\"description\": \"A list of strings, each representing a person's name and age in the format `name,age`.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"names_ages\"], \"type\": \"object\"}}, {\"description\": \"Validates and formats a 24-hour time string to a 12-hour time string with AM or PM.\", \"name\": \"validate_and_format_time\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string representing the reformatted 12-hour time with AM or PM.\", \"type\": [\"object\", \"string\"]}}}, \"parameters\": {\"properties\": {\"time_str\": {\"description\": \"A string representing a 24-hour time.\", \"type\": \"string\"}}, \"required\": [\"time_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the value of y for a given input x using a polynomial function.\", \"name\": \"polynomial\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The input value.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Returns a string in the form \\\"Model <model_name>: <model_description>\\\".\", \"name\": \"get_model_info\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"model\": {\"description\": \"The model object with `.name` and `.description` attributes.\"}}, \"required\": [\"model\"], \"type\": \"object\"}}, {\"description\": \"Replaces all tokens in a string `s` with corresponding values in a dictionary `tokens`.\", \"name\": \"replace_tokens\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"string\"}, \"tokens\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary of tokens and their corresponding values.\", \"type\": \"object\"}}, \"required\": [\"s\", \"tokens\"], \"type\": \"object\"}}, {\"description\": \"Generates file names for a given list of strings.\", \"name\": \"generate_file_names\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"base_path\": {\"description\": \"The path to a base directory.\", \"type\": \"string\"}, \"names\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"base_path\", \"names\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Flips an image horizontally (i.e., left-to-right).\", \"name\": \"flip_image\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A flipped image.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"image\": {\"description\": \"A list of lists of numbers representing an image.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"image\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"round_to_bin_edge\", \"arguments\": {\"value\": 10, \"bin_edges\": [0, 5, 10, 15]}, \"label\": \"$var1\"}, {\"name\": \"bit_length\", \"arguments\": {\"n\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n4\n\nNow solve:\nIn a certain apartment building, there are one-bedroom and two-bedroom apartments. The rental prices of the apartment depend on a number of factors, but on average, two-bedroom apartments have higher rental prices than do one-bedroom apartments. Let M be the average rental price for all apartments in the building. If M is $700 higher than the average rental price for all one-bedroom apartments, and if the average rental price for all two-bedroom apartments is $2,100 higher that M, then what percentage of apartments in the building are two-bedroom apartments?\n\nUse this API documentation for reference: [{\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 901,
    "text": "Example:\n\nInstruction:\nIf Henry were to add 6 gallons of water to a tank that is already 3/4 full of water, the tank would be 7/8 full. How many gallons of water would the tank hold if it were full?\n\nUse this API documentation for reference: [{\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 7, \"arg_1\": 8}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 3, \"arg_1\": 4}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 6, \"arg_1\": \"$var_4.result$\"}}]\n\nGold Answer:\n48.0\n\nNow solve:\nMary can do a piece of work in 12 days. Rosy is 50% more efficient than Mary. The number of days taken by Rosy to do the same piece of work is?\n\nUse this API documentation for reference: [{\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 902,
    "text": "Example:\n\nInstruction:\nCalculate the value of the special formula P(x, y) = arctan(x / y) with x = 3 and y = 4. Then, convert the result to a piano key number.\n\nUse this API documentation for reference: [{\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Swaps keys and values of a dictionary.\", \"name\": \"swap_keys_and_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new dictionary with the keys and values swapped.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"input_dict\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"The input dictionary.\", \"type\": \"object\"}}, \"required\": [\"input_dict\"], \"type\": \"object\"}}, {\"description\": \"Converts a list of numbers to a set, and then back to a list again.\", \"name\": \"convert_to_set_then_back_to_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Parses a string as a Python tuple.\", \"name\": \"parse_tuple\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The parsed tuple, or `None` if the input string is invalid or doesn't represent a tuple.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The string to parse.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Converts a MIDI note number to a piano key number.\", \"name\": \"midi_to_piano\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"midi_note\": {\"description\": \"The MIDI note number.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"midi_note\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the length of a list without using the built-in `len()` function.\", \"name\": \"list_length\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The length of the list.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"The list to calculate the length of.\", \"items\": {}, \"type\": \"array\"}}, \"required\": [\"data\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the integer division of `a` and `b` rounded up.\", \"name\": \"int_div_ceil\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The integer division of `a` and `b` rounded up.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The numerator.\", \"type\": \"integer\"}, \"b\": {\"description\": \"The denominator.\", \"type\": \"integer\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Calculates the value of the special formula P(x, y) = arctan(x / y).\", \"name\": \"special_formula\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The value of P(x, y).\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The numerator of the fraction.\", \"type\": \"number\"}, \"y\": {\"description\": \"The denominator of the fraction.\", \"type\": \"number\"}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"special_formula\", \"arguments\": {\"x\": 3, \"y\": 4}, \"label\": \"$var1\"}, {\"name\": \"midi_to_piano\", \"arguments\": {\"midi_note\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n-21\n\nNow solve:\nWhen tossed, a certain coin has equal probability of landing on either side. If the coin is tossed 4 times, what is the probability that it will land twice on heads and twice tails?\n\nUse this API documentation for reference: [{\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 903,
    "text": "Example:\n\nInstruction:\nJonathan can type a 30 page document in 40 minutes, Susan can type it in 30 minutes, and Jack can type it in 24 minutes. Working together, how much time will it take them to type the same document?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 30, \"arg_1\": 24}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 30, \"arg_1\": 40}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 30, \"arg_1\": 30}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_3.result$\"}}, {\"name\": \"add\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 30, \"arg_1\": \"$var_5.result$\"}}]\n\nGold Answer:\n10.0\n\nNow solve:\nCost is expressed by the formula tb^4. If b is doubled, the new cost Q is what percent of the original cost?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 904,
    "text": "Example:\n\nInstruction:\nFind the length of the wire required to go 14 times round a square field containing 5625 m2.\n\nUse this API documentation for reference: [{\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"square_edge_by_area\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 5625}}, {\"name\": \"square_perimeter\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 14}}]\n\nGold Answer:\n4200.0\n\nNow solve:\nConvert the camel case string \"helloWorld\" to an underscored string, then check if the list [1, 2, 3, 4, 5] contains the index of the underscored string.\n\nUse this API documentation for reference: [{\"description\": \"Find the unique elements in the intersection of two lists.\", \"name\": \"unique_sorted_intersection_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A sorted list containing only the unique elements that are present in both lists.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"list1\": {\"description\": \"The first list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"list2\": {\"description\": \"The second list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"list1\", \"list2\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Maps each object's \\\"id\\\" key to a list of its \\\"children\\\" objects.\", \"name\": \"map_children_to_id\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary that maps each object's \\\"id\\\" key to a list of its \\\"children\\\" objects.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"objects\": {\"description\": \"A list of objects, where each object is a dictionary with \\\"id\\\" and \\\"children\\\" keys.\", \"items\": {\"additionalProperties\": {}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"objects\"], \"type\": \"object\"}}, {\"description\": \"Checks whether a list of numbers contains a specific value.\\nIf this value exists in the list, returns the index of its first occurrence.\\nIf it doesn't exist, returns -1.\", \"name\": \"contains_value\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The list of numbers.\", \"items\": {\"type\": [\"integer\", \"number\"]}, \"type\": \"array\"}, \"value\": {\"description\": \"The value to search for.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"lst\", \"value\"], \"type\": \"object\"}}, {\"description\": \"Creates a new dictionary containing only the key-value pairs from the original dictionary that have keys in the given list.\", \"name\": \"keep_keys\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"d\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"The original dictionary.\", \"type\": \"object\"}, \"keys\": {\"description\": \"The list of keys to keep in the new dictionary.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"d\", \"keys\"], \"type\": \"object\"}}, {\"description\": \"Converts a camel case string into an underscored string.\", \"name\": \"camel_case_to_underscore\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The underscored string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The camel case string to convert.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns the larger number of the two input numbers.\", \"name\": \"larger_number\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first input number.\", \"type\": [\"integer\", \"number\"]}, \"b\": {\"description\": \"The second input number.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the integer quotient of two integers `a` and `b`.\", \"name\": \"divide_integer\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The integer quotient of `a` and `b`.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The dividend.\", \"type\": \"integer\"}, \"b\": {\"description\": \"The divisor.\", \"type\": \"integer\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 905,
    "text": "Example:\n\nInstruction:\nPerform uniform crossover on the lists [1, 2, 3] and [4, 5, 6], then calculate the average of each number and the number before it in the resulting list.\n\nUse this API documentation for reference: [{\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Performs uniform crossover on the given two lists of chromosomes.\\nReturns a single child chromosome (as a list) created by randomly selecting elements from each parent at each position in the chromosome.\", \"name\": \"crossover_uniform\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"parent1\": {\"description\": \"The first parent chromosome.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"parent2\": {\"description\": \"The second parent chromosome.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"parent1\", \"parent2\"], \"type\": \"object\"}}, {\"description\": \"Checks if a string matches the regex pattern for an HTML tag or a closing tag.\", \"name\": \"is_html_tag\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the string matches the pattern, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"tag\": {\"description\": \"The string to check.\", \"type\": \"string\"}}, \"required\": [\"tag\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the average of each number and the number before it in a list.\", \"name\": \"average_consecutive\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the averages of consecutive elements in the input list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Performs a left-outer join operation on two dictionaries based on common keys.\", \"name\": \"left_outer_join\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new dictionary with the joined result.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"left\": {\"additionalProperties\": {}, \"description\": \"The first dictionary.\", \"type\": \"object\"}, \"right\": {\"additionalProperties\": {}, \"description\": \"The second dictionary.\", \"type\": \"object\"}}, \"required\": [\"left\", \"right\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Converts a string representing a non-negative integer to its corresponding integer value.\", \"name\": \"convert_string_to_number\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The integer value of the string.\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The string to be converted.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Returns `True` if `a` is greater than `b`, and `False` otherwise.\", \"name\": \"is_greater_than\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first integer to compare.\", \"type\": \"integer\"}, \"b\": {\"description\": \"The second integer to compare.\", \"type\": \"integer\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Converts a pixel position `x` to an angle in degrees.\\n\\nThe angle is in the range `-90` to `90`, where `-90` maps to the leftmost pixel and `90` maps to the rightmost pixel.\", \"name\": \"pixel_position_to_angle\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The angle in degrees.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"width\": {\"description\": \"The image width in pixels.\", \"type\": \"integer\"}, \"x\": {\"description\": \"The pixel position.\", \"type\": \"integer\"}}, \"required\": [\"x\", \"width\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"crossover_uniform\", \"arguments\": {\"parent1\": [1, 2, 3], \"parent2\": [4, 5, 6]}, \"label\": \"$var1\"}, {\"name\": \"average_consecutive\", \"arguments\": {\"numbers\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n[3.0, 2.5]\n\nNow solve:\nA profit of Rs. 600 is divided between X and Y in the ratio of 1/2:1/3 . What is the difference between their profit shares ?\n\nUse this API documentation for reference: [{\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 906,
    "text": "Example:\n\nInstruction:\nThe sum of ages of 5 children born at the intervals of 3 years each is 50 years. What is the age of the youngest child?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 50, \"arg_1\": 5}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 3}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 3}}]\n\nGold Answer:\n4.0\n\nNow solve:\n15 chess players take part in a tournament. Every player plays twice with each of his opponents. How many games are to be played?\n\nUse this API documentation for reference: [{\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 907,
    "text": "Example:\n\nInstruction:\nSplit the sentence 'Hello, World!' into words, then check if the list of words is sorted in alphabetical order.\n\nUse this API documentation for reference: [{\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Computes the average value of a given attribute of a list of objects.\", \"name\": \"compute_average_value\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The average value of the specified attribute, or None if no objects are provided or all the objects don't have the specified attribute.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"attribute\": {\"description\": \"The name of the attribute to compute the average value of.\", \"type\": \"string\"}, \"objects\": {\"description\": \"A list of objects.\", \"items\": {}, \"type\": \"array\"}}, \"required\": [\"objects\", \"attribute\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Checks if a list of strings is sorted in alphabetical order.\", \"name\": \"is_alphabetically_sorted\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the list is sorted in ascending order, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"list_of_strings\": {\"description\": \"A list of strings to check.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"list_of_strings\"], \"type\": \"object\"}}, {\"description\": \"Calculates the reverse complement of a DNA sequence.\", \"name\": \"reverse_complement_dna\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The reverse complement of the input DNA sequence.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"dna_sequence\": {\"description\": \"The DNA sequence to calculate the reverse complement of.\", \"type\": \"string\"}}, \"required\": [\"dna_sequence\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Returns a list with a maximum of two of each distinct number.\", \"name\": \"max_two_of_each\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list with a maximum of two of each distinct number.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Returns the index of the first element that matches in both arrays, or -1 if there is no match.\", \"name\": \"find_first_match_index\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The index of the first matching element, or -1 if there is no match.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"arr1\": {\"description\": \"The first array.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"arr2\": {\"description\": \"The second array.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"arr1\", \"arr2\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Returns a string that is either \\\"Hi, John\\\" if the address contains the name \\\"John\\\", \\\"Hi, Jane\\\" if the address contains the name \\\"Jane\\\", or \\\"Hi there\\\" if the address does not contain any of these names.\", \"name\": \"get_name_from_address\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string that is either \\\"Hi, John\\\" if the address contains the name \\\"John\\\", \\\"Hi, Jane\\\" if the address contains the name \\\"Jane\\\", or \\\"Hi there\\\" if the address does not contain any of these names.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"address\": {\"description\": \"The address to search for the name.\", \"type\": \"string\"}}, \"required\": [\"address\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Finds the missing number in a list of integers.\", \"name\": \"missing_number\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The missing number in the list.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"numbers\": {\"description\": \"A list of integers with exactly one missing number.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"numbers\"], \"type\": \"object\"}}, {\"description\": \"Adds a new key named `id` to each dictionary in a list of dictionaries.\\n\\nThe `id` values are incremented starting from 1 for each dictionary in the list.\", \"name\": \"add_id_to_dicts\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of dictionaries with the added `id` keys.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"dicts\": {\"description\": \"A list of dictionaries.\", \"items\": {\"additionalProperties\": {\"type\": \"string\"}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"dicts\"], \"type\": \"object\"}}, {\"description\": \"Returns a dictionary with the same keys and their corresponding values from the input dictionary.\\nIf a key does not exist in the input dictionary, it is added to the result dictionary with a None value.\", \"name\": \"access_attrs\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary with the same keys and their corresponding values from the input dictionary.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"json\": {\"additionalProperties\": {}, \"description\": \"The input dictionary.\", \"type\": \"object\"}, \"keys\": {\"description\": \"A list of keys to access in the input dictionary.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"json\", \"keys\"], \"type\": \"object\"}}, {\"description\": \"Replaces all spaces in a string with \\\"%20\\\".\", \"name\": \"replace_string_with_spaces\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string.\", \"nullable\": true, \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Splits a string into a list of words, removing any punctuation marks.\", \"name\": \"sentence_to_words\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings, where each string corresponds to a word in the original string.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"sentence\": {\"description\": \"The input string to be split into words.\", \"type\": \"string\"}}, \"required\": [\"sentence\"], \"type\": \"object\"}}, {\"description\": \"Checks if an integer `n` is divisible by `3` or `5`.\", \"name\": \"check_divisible\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if `n` is divisible by either `3` or `5`, and False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The integer to check for divisibility.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"sentence_to_words\", \"arguments\": {\"sentence\": \"Hello, World!\"}, \"label\": \"$var1\"}, {\"name\": \"is_alphabetically_sorted\", \"arguments\": {\"list_of_strings\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\nTrue\n\nNow solve:\nThe difference of 2 digit number & the number obtained by interchanging the digits is 36. What is the difference the sum and the number if the ratio between the digits of the number is 1:2 ?\n\nUse this API documentation for reference: [{\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 908,
    "text": "Example:\n\nInstruction:\nA spirit and water solution is sold in a market. The cost per liter of the solution is directly proportional to the part (fraction) of spirit (by volume) the solution has. A solution of 1 liter of spirit and 1 liter of water costs 40 cents. How many cents does a solution of 1 liter of spirit and 2 liters of water cost?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 1, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 40, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_4.result$\"}}]\n\nGold Answer:\n40.0\n\nNow solve:\nI have a decibel value of 10. I want to convert it to linear units and then calculate the sum of the base-10 logarithms of the linear value and 100.\n\nUse this API documentation for reference: [{\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Determines whether two numbers are close in value.\", \"name\": \"isclose\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the absolute value of the difference between `a` and `b` is less than or equal to `tolerance`,\\n    and False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first number.\", \"type\": [\"integer\", \"number\"]}, \"b\": {\"description\": \"The second number.\", \"type\": [\"integer\", \"number\"]}, \"tolerance\": {\"description\": \"The maximum difference between `a` and `b` for them to be considered close. Defaults to 1e-9 if not provided.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Calculates the checksum (SHA-256) of a given file.\", \"name\": \"calculate_file_checksum\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The checksum of the file as a string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"fname\": {\"description\": \"The name of the file to calculate the checksum for.\", \"type\": \"string\"}}, \"required\": [\"fname\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Converts decibel to linear units.\", \"name\": \"dB_to_linear\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"dB\": {\"description\": \"A floating-point number representing a decibel value.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"dB\"], \"type\": \"object\"}}, {\"description\": \"A pure function that returns None.\\n\\nThis function does not take any parameters, does not mutate any data or state,\\nand does not access any external resources such as files or network.\", \"name\": \"pure_function\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Returns the status of a job in the given job queue.\", \"name\": \"get_job_status\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The status of the job if found, otherwise \\\"Job not found.\\\"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"job_name\": {\"description\": \"The name of the job to find.\", \"type\": \"string\"}, \"queue\": {\"description\": \"A list of dictionaries representing the job queue. Each dictionary should have 'name' and 'status' keys.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"queue\", \"job_name\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Formats the value of the `page_views` key in the `data` dictionary based on its type.\", \"name\": \"format_page_views\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The formatted value of the `page_views` key, or None if it's a dictionary.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"data\": {\"additionalProperties\": {\"type\": [\"integer\", \"object\", \"object\"]}, \"description\": \"A dictionary containing the data of a website visitor.\", \"type\": \"object\"}, \"date_str\": {\"description\": \"A string representing the date format.\", \"type\": \"string\"}}, \"required\": [\"data\", \"date_str\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of the base-10 logarithms of two integers.\", \"name\": \"log_sum_product\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The sum of the base-10 logarithms of `x` and `y`.\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The first integer.\", \"type\": \"integer\"}, \"y\": {\"description\": \"The second integer.\", \"type\": \"integer\"}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Gets the next valid MAC address in the format '02-42-AC-13-00-00' (lower case).\", \"name\": \"get_next_mac_address\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The next valid MAC address string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"address\": {\"description\": \"The input MAC address string.\", \"type\": \"string\"}}, \"required\": [\"address\"], \"type\": \"object\"}}, {\"description\": \"Calculates the number of distinct values in a dictionary `d`.\", \"name\": \"num_distinct_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of distinct values in `d`.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"d\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"The dictionary to count distinct values in.\", \"type\": \"object\"}}, \"required\": [\"d\"], \"type\": \"object\"}}, {\"description\": \"Processes a vector based on the given scalar and boolean.\\n\\nIf `do_normalize` is True, the function returns a normalized vector.\\nOtherwise, the function returns a vector whose elements are the square of the difference of `v` and `s`.\", \"name\": \"process_vector\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"do_normalize\": {\"description\": \"A boolean indicating whether to normalize the vector or not.\", \"type\": \"boolean\"}, \"s\": {\"description\": \"The scalar.\", \"type\": \"number\"}, \"v\": {\"description\": \"The input vector.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"v\", \"s\", \"do_normalize\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 909,
    "text": "Example:\n\nInstruction:\nList A consists of 12 consecutive integers. If -4 is the least integer in list A, what is the range of positive integers in list A?\n\nUse this API documentation for reference: [{\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 4, \"arg_1\": 1}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 12, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 1}}]\n\nGold Answer:\n6.0\n\nNow solve:\nin the game of dubblefud , red chips , blue chips and green chips are each worth 2 , 4 and 5 points respectively . in a certain selection of chips , the product of the point values of the chips is 16000 . if the number of blue chips in this selection doubles the number of green chips , how many red chips are in the selection ?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 910,
    "text": "Example:\n\nInstruction:\nI want to split the batch data into batches of size 100 and then generate a geometric progression with the first term as 2, common ratio as 3, and 5 terms.\n\nUse this API documentation for reference: [{\"description\": \"Loads a dictionary from a pickle file that maps UUIDs to user IDs.\\nIf the file is not found, an empty dictionary is returned.\", \"name\": \"load_uuid_to_user_id_map\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary mapping UUIDs to user IDs.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Removes columns from a given pandas data frame that match a given pattern.\", \"name\": \"remove_columns_by_pattern\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"df\": {\"description\": \"The input data frame.\", \"type\": \"object\"}, \"pattern\": {\"description\": \"The regular expression pattern to match.\", \"type\": \"string\"}}, \"required\": [\"df\", \"pattern\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of the first `n` elements of a geometric progression.\", \"name\": \"geometric\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the first `n` elements of the progression.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first term of the progression.\", \"type\": \"number\"}, \"n\": {\"description\": \"The number of terms to generate.\", \"type\": \"integer\"}, \"r\": {\"description\": \"The common ratio of the progression.\", \"type\": \"number\"}}, \"required\": [\"a\", \"r\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Calculates the value of the exponential model function at a given point.\", \"name\": \"exponential_model\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The coefficient of the exponential term.\", \"type\": \"number\"}, \"b\": {\"description\": \"The exponent of the exponential term.\", \"type\": \"number\"}, \"c\": {\"description\": \"The constant term.\", \"type\": \"number\"}, \"x\": {\"description\": \"The point at which to evaluate the function.\", \"type\": \"number\"}}, \"required\": [\"a\", \"b\", \"c\", \"x\"], \"type\": \"object\"}}, {\"description\": \"Rearranges the keys of a nested dictionary in a specific order.\", \"name\": \"rearrange_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new dictionary with the same key-value pairs as the input dictionary,\\n    but with the keys rearranged in a specific order.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"input_dict\": {\"additionalProperties\": {}, \"description\": \"The input dictionary to rearrange.\", \"type\": \"object\"}}, \"required\": [\"input_dict\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Generates a commit message based on the current branch name and date.\\n\\nThe function retrieves the current branch name using the `git rev-parse --abbrev-ref HEAD` command and\\nconstructs the commit message by concatenating the branch name and the current date in the format\\n`branch-name: YYYY-MM-DD`.\", \"name\": \"generate_commit_message\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The generated commit message.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Generates a list of `n` unique random floating point numbers between 0.0 and 1.0.\\n\\nThe function returns a list of floating point numbers with a precision of 2 decimal places.\", \"name\": \"generate_unique_random_floats\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The number of unique random floating point numbers to generate.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Splits batch data into batches of size `batch_size`.\", \"name\": \"split_batch_data\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of batches, where each batch is a list of sub-batches.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"batch_data\": {\"description\": \"A list of lists representing the original batch data.\", \"items\": {\"items\": {}, \"type\": \"array\"}, \"type\": \"array\"}, \"batch_size\": {\"description\": \"An integer indicating the desired size of each batch.\", \"type\": \"integer\"}}, \"required\": [\"batch_data\", \"batch_size\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"load_uuid_to_user_id_map\", \"arguments\": {}, \"label\": \"$var1\"}, {\"name\": \"split_batch_data\", \"arguments\": {\"batch_data\": \"$var1.output_0$\", \"batch_size\": 100}, \"label\": \"$var2\"}, {\"name\": \"geometric\", \"arguments\": {\"a\": 2, \"r\": 3, \"n\": 5}, \"label\": \"$var3\"}]\n\nGold Answer:\n[2, 6, 18, 54, 162]\n\nNow solve:\nBhanu spends 30% of his income on petrol on scooter 21% of the remaining on house rent and the balance on food. If he spends Rs.300 on petrol then what is the expenditure on house rent?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 911,
    "text": "Example:\n\nInstruction:\n-24*29+1240=?\n\nUse this API documentation for reference: [{\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"negate\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 24}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 29}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 1240}}]\n\nGold Answer:\n544.0\n\nNow solve:\nA certain quantity of 50% solution is replaced with 25% solution such that the new concentration is 35%. What is the fraction of the solution that was replaced?\n\nUse this API documentation for reference: [{\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 912,
    "text": "Example:\n\nInstruction:\nGiven a string '1.2, 3.4, 5.6, 7.8, 9.0', parse it to a list of float values, then find the longest unique substring of the resulting list.\n\nUse this API documentation for reference: [{\"description\": \"Computes the n-th element of the Fibonacci sequence, given a tuple `fib_seq` of the first two terms of the Fibonacci sequence.\", \"name\": \"fibonacci_element\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The n-th element of the Fibonacci sequence.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"fib_seq\": {\"description\": \"A tuple containing the first two terms of the Fibonacci sequence.\", \"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"n\": {\"description\": \"The position of the element in the Fibonacci sequence.\", \"type\": \"integer\"}}, \"required\": [\"fib_seq\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Finds the longest unique substring of a given string `s`.\", \"name\": \"unique_substring\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The longest unique substring of `s`.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Reads a file line-by-line and returns a string where each line is terminated by a newline character.\", \"name\": \"read_file_by_line_and_get_lines_ending_with_newline\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string where each line is terminated by a newline character.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"filename\": {\"description\": \"The file path.\", \"type\": \"string\"}}, \"required\": [\"filename\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Converts a bytearray object to a string representation with each byte separated by commas.\", \"name\": \"bytearray_to_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The string representation of the bytearray.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"arr\": {\"description\": \"The bytearray object to convert.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"arr\"], \"type\": \"object\"}}, {\"description\": \"Converts a 1D NumPy array to a list.\", \"name\": \"convert_numpy_array_to_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list containing the elements of the input NumPy array.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"numpy_arr\": {\"description\": \"The 1D NumPy array to be converted.\", \"type\": \"object\"}}, \"required\": [\"numpy_arr\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Lists all the filepaths of the members in a given directory, including subdirectories.\", \"name\": \"list_dir_members\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of filepaths of the members in the given directory, including subdirectories.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"root_dir\": {\"description\": \"The root directory to start the search from.\", \"type\": \"string\"}}, \"required\": [\"root_dir\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sum of a and b divided by c rounded to the nearest integer, and the percentage of d out of c rounded to the nearest integer.\", \"name\": \"calculate_sum_and_percentage\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple of two integers.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first number.\", \"type\": \"integer\"}, \"b\": {\"description\": \"The second number.\", \"type\": \"integer\"}, \"c\": {\"description\": \"The divisor.\", \"type\": \"integer\"}, \"d\": {\"description\": \"The number to calculate the percentage of.\", \"type\": \"integer\"}}, \"required\": [\"a\", \"b\", \"c\", \"d\"], \"type\": \"object\"}}, {\"description\": \"Calculates the mean of each window of `n` consecutive elements in `nums`.\", \"name\": \"windowed_mean\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of mean values for each window.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The size of the window.\", \"type\": \"integer\"}, \"nums\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"nums\", \"n\"], \"type\": \"object\"}}, {\"description\": \"Checks if a target string matches a given regular expression pattern.\\nHandles both string and bytes types as input.\", \"name\": \"match_regex_any_type\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"pattern\": {\"description\": \"The regular expression pattern to match.\", \"type\": \"string\"}, \"target\": {\"description\": \"The target string to match against the pattern.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"pattern\", \"target\"], \"type\": \"object\"}}, {\"description\": \"Parses a string that may contain integer or float values to a list of float values.\", \"name\": \"parse_string_to_floats\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of float values, with invalid values ignored.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string to parse.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Checks if the ranges of two tuples of integers overlap or not.\\n\\nThe range of a tuple is defined as the set of integers between the boundary values inclusive.\", \"name\": \"range_overlap\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the ranges overlap, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"tuple1\": {\"description\": \"The first tuple of integers.\", \"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"tuple2\": {\"description\": \"The second tuple of integers.\", \"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"integer\"}], \"type\": \"array\"}}, \"required\": [\"tuple1\", \"tuple2\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"parse_string_to_floats\", \"arguments\": {\"string\": \"1.2, 3.4, 5.6, 7.8, 9.0\"}, \"label\": \"$var1\"}, {\"name\": \"unique_substring\", \"arguments\": {\"s\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n[1.2, 3.4, 5.6, 7.8, 9.0]\n\nNow solve:\nIf the sides of a triangle are 52 cm, 48 cm and 20 cm, what is its area?\n\nUse this API documentation for reference: [{\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 913,
    "text": "Example:\n\nInstruction:\nA certain list consists of 21 different numbers. If n is in the list and n is 4 times the average(arithmetic mean) of the other 20 numbers in the list, then n is what fraction T of the sum of the 21 numbers in the list?\n\nUse this API documentation for reference: [{\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 1, \"arg_1\": 1}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 20, \"arg_1\": 4}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 21}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 4}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 2}}, {\"name\": \"subtract\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 4}}, {\"name\": \"subtract\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": 3}}, {\"name\": \"divide\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_7.result$\"}}]\n\nGold Answer:\n0.16666666666666666\n\nNow solve:\nFind the value of (875 233/899) \u00d7 899\n\nUse this API documentation for reference: [{\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 914,
    "text": "Example:\n\nInstruction:\nA bowl contains equal numbers of red, orange, green, blue, and yellow candies. Kaz eats all of the green candies and half of the orange ones. Next, he eats half of the remaining pieces of each color. Finally, he eats red and yellow candies in equal proportions until the total number of remaining candies of all colors equals 25% of the original number. What percent of the red candies remain?\n\nUse this API documentation for reference: [{\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 3}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 100, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 3}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": 100, \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_7.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": 25, \"arg_1\": \"$var_8.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_9.result$\", \"arg_1\": 2}}, {\"name\": \"add\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": 2, \"arg_1\": 3}}, {\"name\": \"divide\", \"label\": \"$var_12\", \"arguments\": {\"arg_0\": 100, \"arg_1\": \"$var_11.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_13\", \"arguments\": {\"arg_0\": \"$var_10.result$\", \"arg_1\": \"$var_12.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_14\", \"arguments\": {\"arg_0\": \"$var_13.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n25.0\n\nNow solve:\nA number increased by 30% gives 650. The number is?\n\nUse this API documentation for reference: [{\"name\": \"diagonal\", \"description\": \"Calculate the length of the diagonal of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the rectangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Width of the rectangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Length of the diagonal\", \"type\": \"float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 915,
    "text": "Example:\n\nInstruction:\nCreate a square tensor of size 5, calculate the mean of all the values in the tensor, remove all occurrences of the character 'a' from the string \"banana\", and then convert the time \"12:34:56\" to a list of integers representing the hours, minutes, and seconds.\n\nUse this API documentation for reference: [{\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Removes all occurrences of the character `c` from the string `s`.\\nIf the string `s` is empty, the function returns a string containing only a single space.\", \"name\": \"remove_character\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"c\": {\"description\": \"The character to be removed.\", \"type\": \"string\"}, \"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\", \"c\"], \"type\": \"object\"}}, {\"description\": \"Calculates the mean of all the values in a NumPy array.\", \"name\": \"calculate_mean_of_array\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"array\": {\"description\": \"A NumPy array with a shape of (N, M), where N and M are positive integers.\", \"type\": \"object\"}}, \"required\": [\"array\"], \"type\": \"object\"}}, {\"description\": \"Determines whether a given string contains two adjacent characters.\", \"name\": \"check_adjacent_characters\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"object\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Computes the dot product between two batches of matrices by batch matrix multiplication.\", \"name\": \"batch_matmul_dot_product\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"A\": {\"description\": \"A batch of matrices with dimensions (batch_size, num_rows_A, num_cols_A).\", \"type\": \"object\"}, \"B\": {\"description\": \"A batch of matrices with dimensions (batch_size, num_rows_B, num_cols_B).\", \"type\": \"object\"}}, \"required\": [\"A\", \"B\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns the mean and variance of the list `nums`.\\nIf `nums` is empty, returns `None`.\", \"name\": \"get_mean_and_variance\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}, {\"description\": \"Converts a string containing a time in the format `\\\"HH:MM:SS\\\"` to the corresponding digital time in units of hours, minutes, and seconds (all integers).\", \"name\": \"convert_time_to_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of integers representing the hours, minutes, and seconds.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time\": {\"description\": \"A string containing a time in the format `\\\"HH:MM:SS\\\"`.\", \"type\": \"string\"}}, \"required\": [\"time\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Parses an operator string and returns a tuple containing the operator name, operator symbol, and version range.\", \"name\": \"parse_operator\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing the operator name, operator symbol, and version range, or `None` if the input string does not match the expected format.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"operator_str\": {\"description\": \"The operator string to parse.\", \"type\": \"string\"}}, \"required\": [\"operator_str\"], \"type\": \"object\"}}, {\"description\": \"Creates a square tensor of size `n` whose diagonal entries are 1 and all other entries are 0.\", \"name\": \"create_square_tensor\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The size of the tensor.\", \"type\": \"integer\"}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Converts a shortened URL into a long URL by concatenating a given base URL with the string following the last slash in the shortened URL.\", \"name\": \"convert_shortened_url\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The long URL as a string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"base_url\": {\"description\": \"The base URL to be used for concatenation.\", \"type\": \"string\"}, \"shortened_url\": {\"description\": \"The shortened URL to be converted.\", \"type\": \"string\"}}, \"required\": [\"shortened_url\", \"base_url\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"create_square_tensor\", \"arguments\": {\"n\": 5}, \"label\": \"$var1\"}, {\"name\": \"calculate_mean_of_array\", \"arguments\": {\"array\": \"$var1.output_0$\"}, \"label\": \"$var2\"}, {\"name\": \"remove_character\", \"arguments\": {\"c\": \"a\", \"s\": \"banana\"}, \"label\": \"$var3\"}, {\"name\": \"convert_time_to_list\", \"arguments\": {\"time\": \"12:34:56\"}, \"label\": \"$var4\"}]\n\nGold Answer:\n[12, 34, 56]\n\nNow solve:\nA certain list consists of 21 different numbers. If n is in the list and n is 4 times the average(arithmetic mean) of the other 20 numbers in the list, then n is what fraction E of the sum of the 21 numbers in the list?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 916,
    "text": "Example:\n\nInstruction:\nA cycle is bought for Rs.750 and sold for Rs.1080, find the gain percent?\n\nUse this API documentation for reference: [{\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 1080, \"arg_1\": 750}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 750}}, {\"name\": \"multiply\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n44.0\n\nNow solve:\nA pupil's marks were wrongly entered as 83 instead of 63. Due to the average marks for the class got increased by half. The number of pupils in the class is?\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"reminder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 917,
    "text": "Example:\n\nInstruction:\nIn one hour, a boat goes 8 km along the stream and 2 km against the stream. the sped of the boat in still water (in km/hr) is :\n\nUse this API documentation for reference: [{\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"square_area\", \"description\": \"Calculate the area of a square given its side\", \"parameters\": {\"arg_0\": {\"description\": \"The sequare side\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square area\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 8, \"arg_1\": 2}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 2}}]\n\nGold Answer:\n5.0\n\nNow solve:\nBy selling an article at Rs.300, a profit of 25% is made. Find its cost price?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"triangle_area\", \"description\": \"Calculate the area of a triangle given base and height\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the base of the triangle\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the triangle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the triangle\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 918,
    "text": "Example:\n\nInstruction:\nI have a string \"Hello, World!\". I want to remove the leading and trailing white spaces, replace multiple consecutive white spaces with a single space, and then add commas to the beginning and end of the string, and after each word.\n\nUse this API documentation for reference: [{\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Flattens a list of lists, but only if all the elements in the top-level list are lists.\\nIf there is an element that is not a list, the function raises a TypeError exception.\", \"name\": \"flatten_list_with_type_validation\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"A list of lists.\", \"items\": {\"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Performs a topological sort traversal on a nested list data structure.\\n\\nThe function takes a nested list data structure as input and returns a list of the nodes in the order they are encountered during the traversal.\", \"name\": \"topological_sort\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the nodes in the order they are encountered during the traversal.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"The nested list data structure to traverse.\", \"items\": {\"type\": [\"array\", \"integer\"]}, \"type\": \"array\"}}, \"required\": [\"data\"], \"type\": \"object\"}}, {\"description\": \"Creates a dictionary with fruit names as keys and default values.\", \"name\": \"default_fruit_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"default_value\": {\"description\": \"The default value for each fruit name in the dictionary.\", \"type\": \"integer\"}, \"fruit_list\": {\"description\": \"A list of fruit names.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"fruit_list\"], \"type\": \"object\"}}, {\"description\": \"Converts a digit string to a list of digits.\", \"name\": \"convert_to_digits\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"digit_string\": {\"description\": \"A string containing only digits (from 0 to 9) or a list of digits.\", \"type\": [\"array\", \"string\"]}}, \"required\": [\"digit_string\"], \"type\": \"object\"}}, {\"description\": \"Filters rows in a DataFrame based on a list of categories.\\n\\nIf `categories` is empty, then the function returns the original DataFrame.\\nIf `categories` is not empty, then the function returns only rows that match any of the supplied categories.\", \"name\": \"filter_rows_by_category\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"categories\": {\"description\": \"A list of categories for which to filter results.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"df\": {\"description\": \"The input DataFrame.\", \"type\": \"object\"}}, \"required\": [\"df\"], \"type\": \"object\"}}, {\"description\": \"Counts the number of times each integer appears in a list.\", \"name\": \"count_integers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary whose keys are the integers and values are the number of times the integers appear in the list.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}, {\"description\": \"Adds commas to the beginning and end of a string, and after each word.\\nLeaves commas in the string if they appear in the word itself.\", \"name\": \"add_commas_to_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Removes all characters from the string that are not alphanumeric.\", \"name\": \"remove_non_alphanumeric_characters\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Augments an image by flipping it horizontally randomly with a given probability.\", \"name\": \"augment_image\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"image\": {\"description\": \"The input image.\", \"type\": \"object\"}, \"prob\": {\"description\": \"The probability of flipping the image horizontally.\", \"type\": \"number\"}}, \"required\": [\"image\", \"prob\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Maps a number between 1 and 100 to a string representing the severity level.\", \"name\": \"get_severity_level\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string representing the severity level.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"score\": {\"description\": \"The number to map to a severity level.\", \"type\": \"integer\"}}, \"required\": [\"score\"], \"type\": \"object\"}}, {\"description\": \"Removes the leading and trailing white spaces from a given string.\\nIf the string contains multiple consecutive white spaces, then replace them with a single space.\\nRaises an exception if the string contains non-ASCII characters.\", \"name\": \"strip_and_replace_spaces\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Converts a list of user-item interactions into a dictionary whose keys are the users and the values are the corresponding items.\", \"name\": \"format_interactions\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary that maps user IDs to a list of unique item IDs.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"A list of user-item interactions. Each interaction is represented as a list of two strings: the user ID and the item ID.\", \"items\": {\"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"data\"], \"type\": \"object\"}}, {\"description\": \"Compares two images to find if they match exactly.\", \"name\": \"pixels_match\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A boolean value indicating whether the images are identical.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"image1\": {\"description\": \"The first image.\", \"type\": \"object\"}, \"image2\": {\"description\": \"The second image.\", \"type\": \"object\"}}, \"required\": [\"image1\", \"image2\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"strip_and_replace_spaces\", \"arguments\": {\"s\": \"Hello, World!\"}, \"label\": \"$var1\"}, {\"name\": \"add_commas_to_string\", \"arguments\": {\"s\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n,Hello , World!,\n\nNow solve:\nA mobile battery in 1 hour charges to 20 percent.How much time (in minute) will it require more to charge to 55 percent.\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 919,
    "text": "Example:\n\nInstruction:\nMarts income is 50 percent more than Tims income and Tims income is 40 percent less than Juans income. What percentage of Juans income is Marts income\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 50}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 40}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 100, \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 100}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n90.0\n\nNow solve:\nA train with 120 wagons crosses John who is going in the same direction, in 36 seconds. It travels for half an hour from the time it starts ove(who is also riding on his horse) coming from the opposite direction in 24 seconds. In how much time after the train has crossed the Mike do the John meets to Mike?rtaking the John (he is riding on the horse) before it starts overtaking the Mike\n\nUse this API documentation for reference: [{\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cube\", \"description\": \"Calculate the volume of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"remainder\", \"description\": \"Calculate the remainder of a divided by b\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the remainder\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 920,
    "text": "Example:\n\nInstruction:\nClean the column name 'Column 1', then count the number of differences between the cleaned column name and 'column_1'.\n\nUse this API documentation for reference: [{\"description\": \"Calculates the number of characters that are different between two strings.\", \"name\": \"count_differences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of different characters between the two strings, or `-1` if the strings are not of equal length.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"str1\": {\"description\": \"The first string.\", \"type\": \"string\"}, \"str2\": {\"description\": \"The second string.\", \"type\": \"string\"}}, \"required\": [\"str1\", \"str2\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Reads a file called `test.txt` and outputs a list of words which are longer than 5 letters.\", \"name\": \"read_file_and_output_words_longer_than_5\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of words which are longer than 5 letters.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Cleans column names by removing non-alphanumeric characters and converting them to lowercase.\", \"name\": \"clean_column_names\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string with only alphanumeric characters, underscores, and lowercase letters.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"column_name\": {\"description\": \"The input column name.\", \"type\": \"string\"}}, \"required\": [\"column_name\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Sorts a list in descending order using the insertion sort algorithm.\", \"name\": \"insertion_sort_descending\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The sorted list.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The list to be sorted.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"lst\"], \"type\": \"object\"}}, {\"description\": \"Calculates the maximum value in a list of integers using recursion.\", \"name\": \"max_recur\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Returns the object with the highest rank from a Pandas dataframe.\", \"name\": \"get_highest_rank\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The object with the highest rank, or None if no object has a rank.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"dataframe\": {\"description\": \"The dataframe containing the objects.\", \"type\": \"object\"}}, \"required\": [\"dataframe\"], \"type\": \"object\"}}, {\"description\": \"Concatenates the contents of the given files into a new file called 'out.txt'.\", \"name\": \"concat_files\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"file_list\": {\"description\": \"A list of file names.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"file_list\"], \"type\": \"object\"}}, {\"description\": \"Returns a set of keys that are common to both dictionaries.\", \"name\": \"get_intersected_keys\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"dict_1\": {\"description\": \"The first dictionary.\", \"type\": \"object\"}, \"dict_2\": {\"description\": \"The second dictionary.\", \"type\": \"object\"}}, \"required\": [\"dict_1\", \"dict_2\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Concatenates the numbers from the list into a string, with a comma separating the numbers.\", \"name\": \"concatenate_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string that concatenates the numbers from the list, with a comma separating the numbers.\\n    If the list is empty, returns an empty string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"arr\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"arr\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"clean_column_names\", \"arguments\": {\"column_name\": \"Column 1\"}, \"label\": \"$var1\"}, {\"name\": \"count_differences\", \"arguments\": {\"str1\": \"$var1.output_0$\", \"str2\": \"column_1\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n-1\n\nNow solve:\n3 - twentieths of the members of a social club are retirees who are also bridge players , 5 - twentieths of the members are retirees , and one - half of the members are bridge players . if 120 of the members are neither retirees nor bridge players , what is the total number of members in the social club ?\n\nUse this API documentation for reference: [{\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 921,
    "text": "Example:\n\nInstruction:\nA garrison of 500 men has provisions for 20 days. At the end of 14 days, a reinforcement arrives, and it is now found that the provisions will last only for 3 days more. What is the reinforcement?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 500, \"arg_1\": 20}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 500, \"arg_1\": 14}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 3}}, {\"name\": \"subtract\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_4.result$\", \"arg_1\": 500}}]\n\nGold Answer:\n500.0\n\nNow solve:\nSplit the string 'Hello, World!' into chunks of size 5. Then join the chunks with spaces.\n\nUse this API documentation for reference: [{\"description\": \"Extracts numeric values from a given input string.\", \"name\": \"extract_numeric_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of integers and floats representing the numeric values found in the input string.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string to extract numeric values from.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Remaps the question indices in a list of tuples of question indices and answers.\", \"name\": \"remap_question_indices\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples of the remapped question indices and answers.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"A list of tuples of the question index (integer) and the corresponding answer (string).\", \"items\": {\"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"string\"}], \"type\": \"array\"}, \"type\": \"array\"}, \"remap_index\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"A dictionary mapping the original question index to the new index.\", \"type\": \"object\"}}, \"required\": [\"data\", \"remap_index\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Extracts the subdirectories of a parent directory from a string.\", \"name\": \"get_subdirectories\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of subdirectories.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"path_string\": {\"description\": \"A string formatted as follows: parent_dir_name/sub_dir1_name/sub_dir2_name/.../sub_dirn_name\", \"type\": \"string\"}}, \"required\": [\"path_string\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Calculates the mean value of a 2D array along the specified axis.\", \"name\": \"mean_along_axis\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"arr\": {\"description\": \"The 2D array to calculate the mean of.\", \"type\": \"object\"}, \"axis\": {\"description\": \"The axis to calculate the mean along. If not specified, the mean of the flattened array is calculated.\", \"nullable\": true, \"type\": \"integer\"}, \"keepdims\": {\"description\": \"Whether the output array should maintain the input's dimensions or be flattened.\", \"type\": \"boolean\"}}, \"required\": [\"arr\"], \"type\": \"object\"}}, {\"description\": \"Returns the point in the list that is closest to the target point.\", \"name\": \"get_closest_point\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"points\": {\"description\": \"A list of points.\", \"items\": {\"prefixItems\": [{\"type\": \"number\"}, {\"type\": \"number\"}], \"type\": \"array\"}, \"type\": \"array\"}, \"target\": {\"description\": \"The target point.\", \"prefixItems\": [{\"type\": \"number\"}, {\"type\": \"number\"}], \"type\": \"array\"}}, \"required\": [\"points\", \"target\"], \"type\": \"object\"}}, {\"description\": \"Splits a string into chunks of a specified size.\", \"name\": \"chunked\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings, where each string is a chunk of the input string.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"chunk_size\": {\"description\": \"The size of each chunk.\", \"type\": \"integer\"}, \"string\": {\"description\": \"The input string to be split.\", \"type\": \"string\"}}, \"required\": [\"string\", \"chunk_size\"], \"type\": \"object\"}}, {\"description\": \"Joins a list of strings with spaces.\", \"name\": \"join_with_spaces\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A single string containing the joined parameters.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"parameters\": {\"description\": \"A list of strings to join.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"parameters\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Generates a random character from a list of lowercase letters and numbers.\", \"name\": \"generate_char\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A random character from the list of lowercase letters and numbers.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Calculates the difference between the current timestamp and a given timestamp in seconds, rounded to the nearest integer.\", \"name\": \"timestamp_difference\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"timestamp\": {\"description\": \"The earlier timestamp.\", \"type\": \"number\"}}, \"required\": [\"timestamp\"], \"type\": \"object\"}}, {\"description\": \"Filters a list to only include numbers.\", \"name\": \"filter_non_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list containing only numbers.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"The list to filter.\", \"type\": \"object\"}}, \"required\": [\"input_list\"], \"type\": \"object\"}}, {\"description\": \"Splits a given string into words, ignoring punctuation marks and performing whitespace trimming.\", \"name\": \"split_words\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of words obtained from the input string.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string to be split into words.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Extracts all the digits from a given string and returns them as a list.\", \"name\": \"get_digits_from_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of all the digits found in the input string, in the same order as they appear in the string.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string from which to extract the digits.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Displays the contents of a file and returns the number of lines in the file.\", \"name\": \"display_file_contents\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of lines in the file.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the file to be displayed.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 922,
    "text": "Example:\n\nInstruction:\nI have a list of integers [1, 2, 3, 4, 5]. I want to convert this list into a string representing a space-separated sequence of those integers. Then, I want to normalize this string by replacing all non-alphanumeric characters with underscores and converting to lowercase.\n\nUse this API documentation for reference: [{\"description\": \"Converts a list of integers into a string representing a space-separated sequence of those integers.\\nIf a file path is provided as an optional parameter, the function saves the string in that file.\\nIf the file path is not provided, the function returns the string.\", \"name\": \"integer_list_to_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The string representing the space-separated sequence of integers, or None if the file path is provided.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"An optional file path to save the string.\", \"nullable\": true, \"type\": \"string\"}, \"integer_list\": {\"description\": \"A list of integers to be converted into a string.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"integer_list\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Extracts the country name for each row in a CSV file and returns a list of the extracted country names as strings.\", \"name\": \"get_countries_from_csv\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the extracted country names as strings.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"csv_file\": {\"description\": \"The path to the CSV file.\", \"type\": \"string\"}}, \"required\": [\"csv_file\"], \"type\": \"object\"}}, {\"description\": \"Filters an array of tuples by a given timestamp range (inclusive).\", \"name\": \"filter_array_by_timestamp\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new array containing the tuples from the original array whose timestamps fall within the given range.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"array\": {\"description\": \"The array of tuples to filter. Each tuple is of the form (timestamp, data, metadata).\", \"items\": {\"prefixItems\": [{\"type\": \"integer\"}, {\"type\": \"string\"}, {\"type\": \"string\"}], \"type\": \"array\"}, \"type\": \"array\"}, \"timestamp_end\": {\"description\": \"The end of the timestamp range.\", \"type\": \"integer\"}, \"timestamp_start\": {\"description\": \"The start of the timestamp range.\", \"type\": \"integer\"}}, \"required\": [\"array\", \"timestamp_start\", \"timestamp_end\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Normalizes a string by replacing all non-alphanumeric characters with underscores and converting to lowercase.\\nThe function also groups repeated underscores and trims leading and trailing underscores.\", \"name\": \"normalize_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string to be normalized.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Computes the norm of the dot product of two tensors.\", \"name\": \"norm_of_dot_product\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The norm of the dot product of the two tensors.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The first tensor.\", \"type\": \"object\"}, \"y\": {\"description\": \"The second tensor.\", \"type\": \"object\"}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Returns a string representation of the date in the format: \\\"{year}-{month}-{day}\\\".\", \"name\": \"quote_date\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"date\": {\"description\": \"A Python datetime object or a string representation of a date.\", \"type\": [\"object\", \"string\"]}}, \"required\": [\"date\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Converts the shape of a 3-D tensor to a list of strings.\", \"name\": \"shape_to_strings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of strings that represent the shape of the tensor.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"tensor\": {\"description\": \"The input 3-D tensor.\", \"type\": \"object\"}}, \"required\": [\"tensor\"], \"type\": \"object\"}}, {\"description\": \"Converts a number or string to a string, and returns None for other types.\", \"name\": \"to_str_if_number_or_string\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The object as a string, or None if the object is not a number or string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"obj\": {\"description\": \"The object to convert.\", \"type\": [\"integer\", \"number\", \"string\"]}}, \"required\": [\"obj\"], \"type\": \"object\"}}, {\"description\": \"Extracts articles containing a target keyword from a given HTML document.\", \"name\": \"scrape_data\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of articles containing the target keyword in the article title or content.\\n    Each article is represented as a dictionary with the title as the key and the content as the value.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"html_document\": {\"description\": \"The HTML document as a string.\", \"type\": \"string\"}, \"target_keyword\": {\"description\": \"The target keyword to search for in the article titles and contents.\", \"type\": \"string\"}}, \"required\": [\"html_document\", \"target_keyword\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"integer_list_to_string\", \"arguments\": {\"integer_list\": [1, 2, 3, 4, 5]}, \"label\": \"$var1\"}, {\"name\": \"normalize_string\", \"arguments\": {\"s\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n1_2_3_4_5\n\nNow solve:\nWhat will be the cost of building a fence around a square plot with area equal to 64 sq ft, if the price per foot of building the fence is Rs. 58?\n\nUse this API documentation for reference: [{\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 923,
    "text": "Example:\n\nInstruction:\nThe percentage profit earned by selling an article for Rs. 1920 is equal to the percentage loss incurred by selling the same article for Rs. 1280. At what price should the article be sold to make 15% profit?\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"circle_area\", \"description\": \"Calculate the area of a circle given its radius\", \"parameters\": {\"arg_0\": {\"description\": \"The circle radius\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the circle area\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"speed\", \"description\": \"Calculate speed given distance and time.\", \"parameters\": {\"arg_0\": {\"description\": \"distance\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"time\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the speed\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 15}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 100}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": 1920, \"arg_1\": 1280}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 2}}, {\"name\": \"multiply\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": \"$var_4.result$\"}}]\n\nGold Answer:\n1840.0\n\nNow solve:\nA trader marked the selling price of an article at 11% above the cost price. At the time of selling, he allows certain discount and suffers a loss of 1%. He allowed a discount of :\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"negate_prob\", \"description\": \"Calculate the probability of an event not occurring\", \"parameters\": {\"arg_0\": {\"description\": \"Probability of the event occurring\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Probability of the event not occurring\", \"type\": \"float\"}}}, {\"name\": \"max_number\", \"description\": \"Find the maximum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Maximum value\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 924,
    "text": "Example:\n\nInstruction:\nRaman mixed 24 kg of butter at Rs. 150 per kg with 36 kg butter at the rate of Rs. 125 per kg. At what price per kg should he sell the mixture to make a profit of 40% in the transaction?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"multiply\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 24, \"arg_1\": 150}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 36, \"arg_1\": 125}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"add\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": 36, \"arg_1\": 24}}, {\"name\": \"divide\", \"label\": \"$var_5\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": \"$var_4.result$\"}}, {\"name\": \"multiply\", \"label\": \"$var_6\", \"arguments\": {\"arg_0\": 24, \"arg_1\": 150}}, {\"name\": \"multiply\", \"label\": \"$var_7\", \"arguments\": {\"arg_0\": 36, \"arg_1\": 125}}, {\"name\": \"add\", \"label\": \"$var_8\", \"arguments\": {\"arg_0\": \"$var_6.result$\", \"arg_1\": \"$var_7.result$\"}}, {\"name\": \"add\", \"label\": \"$var_9\", \"arguments\": {\"arg_0\": 36, \"arg_1\": 24}}, {\"name\": \"divide\", \"label\": \"$var_10\", \"arguments\": {\"arg_0\": \"$var_8.result$\", \"arg_1\": \"$var_9.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_11\", \"arguments\": {\"arg_0\": 40, \"arg_1\": 100}}, {\"name\": \"multiply\", \"label\": \"$var_12\", \"arguments\": {\"arg_0\": \"$var_10.result$\", \"arg_1\": \"$var_11.result$\"}}, {\"name\": \"add\", \"label\": \"$var_13\", \"arguments\": {\"arg_0\": \"$var_5.result$\", \"arg_1\": \"$var_12.result$\"}}]\n\nGold Answer:\n189.0\n\nNow solve:\nA total of 520 players participated in a single tennis knock out tournament. What is the total number of matches played in the tournament? (Knockout means if a player loses, he is out of the tournament). No match ends in a tie.\n\nUse this API documentation for reference: [{\"name\": \"volume_sphere\", \"description\": \"Calculate the volume of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the sphere\", \"type\": \"float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 925,
    "text": "Example:\n\nInstruction:\nIf a 5 percent deposit that has been paid toward the purchase of a certain product is $70, how much more remains to be paid?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_perimeter\", \"description\": \"Calculate the perimeter of a rectangle\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"divide\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 100, \"arg_1\": 5}}, {\"name\": \"multiply\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 70, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"subtract\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 70}}]\n\nGold Answer:\n1330.0\n\nNow solve:\nReplace all occurrences of the word 'apple' with 'orange' in the madlib_transformer output, where the template is 'I like to eat _ on Sundays' and the words are ['apple', 'banana', 'pear'].\n\nUse this API documentation for reference: [{\"description\": \"Replaces all occurrences of a given substring in a string using regular expression matching.\", \"name\": \"string_replace\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"from_str\": {\"description\": \"The substring to be replaced in the input string.\", \"type\": \"string\"}, \"input_string\": {\"description\": \"A string containing the text where substring replacement should be performed.\", \"type\": \"string\"}, \"to_str\": {\"description\": \"The string to replace occurrences of `from_str` in the input string.\", \"type\": \"string\"}}, \"required\": [\"input_string\", \"from_str\", \"to_str\"], \"type\": \"object\"}}, {\"description\": \"Extracts the usernames from a JSON-formatted string containing user information.\", \"name\": \"get_all_users\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of usernames.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"data\": {\"description\": \"A JSON-formatted string containing user information.\", \"type\": \"string\"}}, \"required\": [\"data\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Computes the sum and difference of two given integers.\\nIf the sum is even, return the sum and difference, otherwise return the sum and the difference's absolute value.\\nForm the result as a tuple of the form (sum, difference).\", \"name\": \"sum_and_difference\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing the sum and difference or the sum and the difference's absolute value.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first integer.\", \"type\": \"integer\"}, \"b\": {\"description\": \"The second integer.\", \"type\": \"integer\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the sign of the product of two numbers.\", \"name\": \"product_sign\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The sign of the product of the two numbers.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first number.\", \"type\": [\"integer\", \"number\"]}, \"b\": {\"description\": \"The second number.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Converts a timestamp from the local timezone to the UTC timezone.\\nHandles any conversion errors and returns None when an exception occurs.\", \"name\": \"convert_local_to_utc\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"local_timestamp\": {\"description\": \"The timestamp in the local timezone.\", \"type\": \"object\"}}, \"required\": [\"local_timestamp\"], \"type\": \"object\"}}, {\"description\": \"Applies the Swish activation function element-wise to the input tensor.\", \"name\": \"swish_activation\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The output tensor after applying the Swish activation function.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"beta\": {\"description\": \"The slope of the sigmoid function.\", \"type\": \"number\"}, \"x\": {\"description\": \"The input tensor.\", \"type\": \"object\"}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Prefixes all keys in a dictionary with a given string.\", \"name\": \"prefix_dict_keys\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new dictionary with all keys prefixed by `prefix`.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"d\": {\"additionalProperties\": {\"type\": \"object\"}, \"description\": \"The dictionary to prefix the keys of.\", \"type\": \"object\"}, \"prefix\": {\"description\": \"The string to prefix the keys with.\", \"type\": \"string\"}}, \"required\": [\"d\", \"prefix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Combines the values of dictionaries with the same key into a list.\", \"name\": \"combine_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of dictionaries, each dictionary has a key and a list of combined values.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"A list of dictionaries, each dictionary has a key and a list of values.\", \"items\": {\"additionalProperties\": {\"type\": \"string\"}, \"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"input_list\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Fills in the blanks in a template string with words from a list.\", \"name\": \"madlib_transformer\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The filled-in template string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"template\": {\"description\": \"The template string containing underscores (_) denoting blanks to be filled in.\", \"type\": \"string\"}, \"words\": {\"description\": \"The list of words to fill in the blanks.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"template\", \"words\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the average length of a specified string attribute across all objects.\", \"name\": \"get_average_length_of_string_attribute\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"attribute_name\": {\"description\": \"The name of the string attribute.\", \"type\": \"string\"}, \"objects\": {\"description\": \"A list of objects.\", \"items\": {}, \"type\": \"array\"}}, \"required\": [\"objects\", \"attribute_name\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 926,
    "text": "Example:\n\nInstruction:\nA certain bag contains 100 balls \u00e2\u20ac\u201d 50 white, 25 green, 10 yellow, 7 red, and 8 purple. If a ball is to be chosen at random, what is the probability that the ball will be neither red nor purple?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"rectangle_area\", \"description\": \"Calculate the area of a rectangle given its length and width\", \"parameters\": {\"arg_0\": {\"description\": \"rectangle length\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"rectangle width\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the rectangle area\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"factorial\", \"description\": \" Calculate the factorial of a non-negative integer\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the factorial result\", \"type\": \"int\"}}}, {\"name\": \"cube_edge_by_volume\", \"description\": \"Calculate the edge length of a cube given its volume\", \"parameters\": {\"arg_0\": {\"description\": \"Volume of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the cube\", \"type\": \"float\"}}}, {\"name\": \"rhombus_area\", \"description\": \"Calculate the area of a rhombus\", \"parameters\": {\"arg_0\": {\"description\": \"Length of the first diagonal\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Length of the second diagonal\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Area of the rhombus\", \"type\": \"float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 7, \"arg_1\": 8}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 100, \"arg_1\": \"$var_1.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_2.result$\", \"arg_1\": 100}}]\n\nGold Answer:\n0.85\n\nNow solve:\nkavi spends 50 % of his monthly salary on food and saves 80 % of the remaining amount . if his monthly salary is rs . 19000 , how much money does he save every month ?\n\nUse this API documentation for reference: [{\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"negate\", \"description\": \"Return the negation of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"min_number\", \"description\": \"Find the minimum value among the given numbers\", \"parameters\": {\"arg_0\": {\"description\": \"A list of numbers\", \"type\": \"list of float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Minimum value\", \"type\": \"float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"permutation\", \"description\": \"Calculate the number of permutations of n items taken r at a time\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being arranged\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of permutations\", \"type\": \"int\"}}}, {\"name\": \"surface_sphere\", \"description\": \"Calculate the surface area of a sphere\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the sphere\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the sphere\", \"type\": \"float\"}}}, {\"name\": \"volume_cylinder\", \"description\": \"Calculate the volume of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cylinder\", \"type\": \"float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 927,
    "text": "Example:\n\nInstruction:\nI have a string \"Hello, World!\". I want to remove punctuation, convert it to lowercase, and then calculate the frequency of each word. Finally, I want to normalize the word frequencies to sum up to 1.\n\nUse this API documentation for reference: [{\"description\": \"Generates a string of Python code that represents the given data structure.\", \"name\": \"generate_code_from_data_structure\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string of Python code that represents the given data structure.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"data_structure\": {\"description\": \"A dictionary representing the data structure.\", \"type\": \"object\"}}, \"required\": [\"data_structure\"], \"type\": \"object\"}}, {\"description\": \"Checks if a string is a propositional variable.\\n\\nA propositional variable is a string that matches the regular expression\\n`[A-Z][a-z_0-9]*`, where the first character is a capital letter and the\\nremaining characters are lowercase letters, underscores, or digits.\", \"name\": \"is_propositional_variable\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the string is a propositional variable, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The string to check.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Converts a string into Base64.\", \"name\": \"convert_to_base64\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The string to be converted into Base64.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Removes punctuation from a string and converts it to lowercase.\", \"name\": \"remove_punctuation_and_lowercase\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new string with all punctuation removed and the text converted to lowercase.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Concatenates two inputs, `a` and `b`, into a single string, ignoring any trailing zeros in the second input, `b`.\", \"name\": \"concat_ignore_trailing_zeros\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The concatenated string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first input.\", \"type\": [\"integer\", \"string\"]}, \"b\": {\"description\": \"The second input.\", \"type\": [\"integer\", \"string\"]}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Simulates the cutting of cards in a deck.\\n\\nThe function takes a deck of cards represented as an array of integers, where the first element is the top card of the deck, and a cut position, and returns the new order of the deck after cutting. The function performs modular arithmetic to calculate the new position of each card after the cut.\", \"name\": \"cut_cards\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The new order of the deck after cutting.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"cards\": {\"description\": \"The deck of cards represented as an array of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"cut_position\": {\"description\": \"The position where the deck is cut.\", \"type\": \"integer\"}}, \"required\": [\"cards\", \"cut_position\"], \"type\": \"object\"}}, {\"description\": \"Normalizes a dictionary of counts to sum up to 1.\", \"name\": \"normalize_counts\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary with the same keys as the input dictionary and normalized\\n    counts as values.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"counts\": {\"additionalProperties\": {\"type\": \"number\"}, \"description\": \"A dictionary with strings as keys and counts as values.\", \"type\": \"object\"}}, \"required\": [\"counts\"], \"type\": \"object\"}}, {\"description\": \"Counts the frequency of a given attribute in a list of objects.\", \"name\": \"count_attribute\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the keys are the attribute values and the values are their frequencies.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"attribute\": {\"description\": \"The name of the attribute to count.\", \"type\": \"string\"}, \"objects\": {\"description\": \"A list of objects.\", \"items\": {}, \"type\": \"array\"}}, \"required\": [\"objects\", \"attribute\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Calculates the frequency of each word in a given string.\", \"name\": \"score_words\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where each key is a word from `s` and its corresponding value is the number of occurrences of that word in `s`.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"s\": {\"description\": \"The input string containing multiple words separated by spaces.\", \"type\": \"string\"}}, \"required\": [\"s\"], \"type\": \"object\"}}, {\"description\": \"Calculates the value of y based on the given mathematical formula.\", \"name\": \"y_calc\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": [\"integer\", \"number\"]}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The input value.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"This function takes a list of strings and returns a tuple of two elements.\\nThe first element is a list of all strings that contain the substring '777'.\\nThe second element is a dictionary where the keys are the strings that contain the substring '777' and the values are the lengths of the strings.\", \"name\": \"func_refactor\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A tuple containing a list of strings and a dictionary.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"strings\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"strings\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"remove_punctuation_and_lowercase\", \"arguments\": {\"string\": \"Hello, World!\"}, \"label\": \"$var1\"}, {\"name\": \"score_words\", \"arguments\": {\"s\": \"$var1.output_0$\"}, \"label\": \"$var2\"}, {\"name\": \"normalize_counts\", \"arguments\": {\"counts\": \"$var2.output_0$\"}, \"label\": \"$var3\"}]\n\nGold Answer:\n{'hello': 0.5, 'world': 0.5}\n\nNow solve:\nGiven a list of integers [1, 2, 3, 4, 5], calculate the average value and then calculate the hyperbolic sine of the average value.\n\nUse this API documentation for reference: [{\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Creates a temporary directory with a random name to hold a set of files.\", \"name\": \"create_temporary_directory\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The path to the directory.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {}, \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Returns the first `k` characters of the string `s`.\", \"name\": \"get_first_k_characters\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The first `k` characters of `s`, or `s` itself if its length is less than `k`.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"k\": {\"description\": \"The number of characters to extract from the beginning of `s`.\", \"type\": \"integer\"}, \"s\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"s\", \"k\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the average of a list of integers, rounded to the nearest integer.\\nIf the average value is a tie, returns the larger value of the two.\", \"name\": \"average_value\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The average of the values, rounded to the nearest integer.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"values\": {\"description\": \"A list of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"values\"], \"type\": \"object\"}}, {\"description\": \"Validates a machine learning model and determines whether it is accurate enough.\", \"name\": \"validate_model\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"model\": {\"description\": \"The accuracy of the machine learning model.\", \"type\": [\"integer\", \"number\"]}, \"threshold\": {\"description\": \"The minimum accuracy required for the model to be considered valid.\", \"type\": \"number\"}}, \"required\": [\"model\", \"threshold\"], \"type\": \"object\"}}, {\"description\": \"Calculates the hyperbolic sine of a number x.\", \"name\": \"sinh\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"x\": {\"description\": \"The number for which we want to calculate the hyperbolic sine.\", \"type\": \"number\"}}, \"required\": [\"x\"], \"type\": \"object\"}}, {\"description\": \"Flattens a list of lists and counts the occurrences of each value.\", \"name\": \"flatten_and_count_values\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of tuples, where each tuple consists of a value and its count.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"nested_list\": {\"description\": \"A list of lists containing integers.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"nested_list\"], \"type\": \"object\"}}, {\"description\": \"Normalizes a PyTorch tensor of unit vectors along the last dimension.\", \"name\": \"normalize_unit_vectors\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"tensor\": {\"description\": \"The tensor to be normalized.\", \"type\": \"object\"}}, \"required\": [\"tensor\"], \"type\": \"object\"}}, {\"description\": \"Checks if a given string is a valid IPv6 address.\", \"name\": \"is_ipv6\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the IP address is valid, False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"ip_address\": {\"description\": \"The IP address to check.\", \"type\": \"string\"}}, \"required\": [\"ip_address\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 928,
    "text": "Example:\n\nInstruction:\nGiven a string of comma-separated integers \"1,2,3,4,5\", sort them in ascending order and then compute the Schur product of the sorted list with itself.\n\nUse this API documentation for reference: [{\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Prints the list of names and ages in the specified format.\", \"name\": \"print_names_and_ages\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"seq\": {\"description\": \"A sequence of tuples of the form (name, age).\", \"items\": {\"prefixItems\": [{\"type\": \"string\"}, {\"type\": \"integer\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"seq\"], \"type\": \"object\"}}, {\"description\": \"Randomly selects a key from the dictionary with a probability proportional to the value of the corresponding key.\\nIf all keys have negative values, the function returns a random key.\", \"name\": \"random_key_with_probability\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"dictionary\": {\"additionalProperties\": {\"type\": \"number\"}, \"description\": \"A dictionary of string keys and numeric values.\", \"type\": \"object\"}}, \"required\": [\"dictionary\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Pads the input text with a specific binary character at both the beginning and end.\", \"name\": \"pad_with_binary_char\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"char\": {\"description\": \"The binary character used for padding.\", \"type\": [\"integer\", \"string\"]}, \"text\": {\"description\": \"The input string that needs to be padded.\", \"type\": \"string\"}}, \"required\": [\"text\", \"char\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Converts a given one-dimensional NumPy array into a PyTorch tensor.\", \"name\": \"convert_array_to_tensor\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A PyTorch tensor.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"array\": {\"description\": \"The input one-dimensional NumPy array.\", \"type\": \"object\"}}, \"required\": [\"array\"], \"type\": \"object\"}}, {\"description\": \"Checks if the second dictionary contains exactly one key with the same value as a list element in the first dictionary.\", \"name\": \"match_second_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the second dictionary contains exactly one key with the same value as a list element in the first dictionary. Otherwise, False.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"dict1\": {\"additionalProperties\": {\"type\": [\"array\", \"integer\"]}, \"description\": \"A dictionary mapping integers to lists of strings or integers.\", \"type\": \"object\"}, \"dict2\": {\"additionalProperties\": {\"type\": \"integer\"}, \"description\": \"A dictionary mapping integers to integers.\", \"type\": \"object\"}}, \"required\": [\"dict1\", \"dict2\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Calculates the Schur product (or Hadamard product) of two vectors.\\nThe Schur product for two vectors `a` and `b` is a vector `c` where each element is the product of the corresponding elements in `a` and `b`.\", \"name\": \"schur_product\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"a\": {\"description\": \"The first vector.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"b\": {\"description\": \"The second vector.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"a\", \"b\"], \"type\": \"object\"}}, {\"description\": \"Sorts a string of comma-separated integers in ascending order.\", \"name\": \"sort_string_of_ints\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of integers sorted in ascending order.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"A string of comma-separated integers.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Formats a list of strings according to different types.\", \"name\": \"format_with_type\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list with the formatted strings.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"The list of strings to format.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"type\": {\"description\": \"The type of format to apply.\", \"type\": \"string\"}}, \"required\": [\"input_list\", \"type\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Extracts all tags from a string input and returns a dictionary\\nwhere the keys are the tag names and the values are their frequencies.\", \"name\": \"create_tag_frequency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary where the keys are the tag names and the values are their frequencies.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"text\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"text\"], \"type\": \"object\"}}, {\"description\": \"Validates that a given HTML form field has a valid content type based on a given list of allowed content types.\", \"name\": \"validate_content_type\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"allowed_types\": {\"description\": \"A list of allowed content types.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"field\": {\"additionalProperties\": {\"type\": \"string\"}, \"description\": \"A dictionary containing the HTML form field.\", \"type\": \"object\"}}, \"required\": [\"field\", \"allowed_types\"], \"type\": \"object\"}}, {\"description\": \"Detects if a string contains the letters 'a', 'b', and 'c' in that order.\", \"name\": \"letters_in_order\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A boolean value indicating whether the string contains the letters 'a', 'b', and 'c' in that order.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Computes `x**y` with the specified precision. The default precision is 10.\", \"name\": \"pow_decimal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"number\"}}}, \"parameters\": {\"properties\": {\"precision\": {\"description\": \"The number of decimal places to round the result to. Default is 10.\", \"nullable\": true, \"type\": \"integer\"}, \"x\": {\"description\": \"The base number.\", \"type\": \"number\"}, \"y\": {\"description\": \"The exponent.\", \"type\": \"number\"}}, \"required\": [\"x\", \"y\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}]\n\nOutput:\n[{\"name\": \"sort_string_of_ints\", \"arguments\": {\"input_string\": \"1,2,3,4,5\"}, \"label\": \"$var1\"}, {\"name\": \"schur_product\", \"arguments\": {\"a\": \"$var1.output_0$\", \"b\": \"$var1.output_0$\"}, \"label\": \"$var2\"}]\n\nGold Answer:\n[1, 4, 9, 16, 25]\n\nNow solve:\nGiven a list of numbers [1, 2, 3, 4, 5], compute the cumulative sum and then convert the result to a printable string.\n\nUse this API documentation for reference: [{\"description\": \"Calculates the cumulative sum of a list of numbers.\", \"name\": \"compute_cumulative_sum\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list of the same length as `nums`, where the i-th element is the sum of the first i + 1 elements from `nums`.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"nums\": {\"description\": \"A list of numbers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"nums\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Sorts the array `arr` in ascending order based on the difference between the `i`th bit of each element and the `i`th bit of the largest element in the array.\", \"name\": \"sort_by_bit_difference\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The sorted array.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"arr\": {\"description\": \"The input array of integers.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"i\": {\"description\": \"The index of the bit to consider.\", \"type\": \"integer\"}}, \"required\": [\"arr\", \"i\"], \"type\": \"object\"}}, {\"description\": \"Converts a time string in the format `HH:MM:SS` to a number of seconds.\", \"name\": \"time_to_sec\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of seconds equivalent to the input time string.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"time_string\": {\"description\": \"The time string to convert.\", \"type\": \"string\"}}, \"required\": [\"time_string\"], \"type\": \"object\"}}, {\"description\": \"Generates numbers from 1 to 31, inclusive, and returns them in a list.\\nIf the optional `output_even` parameter is set to `True`, only even numbers are included in the list.\", \"name\": \"generate_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of numbers from 1 to 31, or a list of only the even numbers from 1 to 31.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"output_even\": {\"description\": \"If `True`, only even numbers are included in the list.\", \"type\": \"boolean\"}}, \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Calculates the centroid of a rectangle.\", \"name\": \"compute_centroid\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"rectangle\": {\"description\": \"A list of four points, where each point is a list of two numbers mapping the x and y coordinates of the corresponding point.\", \"items\": {\"prefixItems\": [{\"type\": \"number\"}, {\"type\": \"number\"}], \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"rectangle\"], \"type\": \"object\"}}, {\"description\": \"Replaces all contiguous whitespace in a string with a single space.\", \"name\": \"replace_multiple_spaces\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Finds the first index `i` where the string in `lst[i]` matches `target`.\", \"name\": \"find_target_string_in_list\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The first index `i` where the string in `lst[i]` matches `target`. If no such index exists, returns -1.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"A list, tuple, or string to search.\", \"type\": [\"object\", \"object\", \"string\"]}, \"target\": {\"description\": \"A string or integer to search for.\", \"type\": [\"integer\", \"string\"]}}, \"required\": [\"lst\", \"target\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Formats a log message with a list of words.\", \"name\": \"format_log_message\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"message\": {\"description\": \"The original message.\", \"type\": \"string\"}, \"words\": {\"description\": \"A list of words to insert into the message.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"message\", \"words\"], \"type\": \"object\"}}, {\"description\": \"Extracts the table names referenced in a SQL query string.\", \"name\": \"get_table_names_from_query\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of table names referenced in the query.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"sql_query\": {\"description\": \"The SQL query string.\", \"type\": \"string\"}}, \"required\": [\"sql_query\"], \"type\": \"object\"}}, {\"description\": \"Converts a list of numbers or strings to a printable string.\", \"name\": \"convert_to_printable_str\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string representation of the input list.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"input_list\": {\"description\": \"A list of numbers or strings.\", \"items\": {\"type\": [\"integer\", \"number\", \"string\"]}, \"type\": \"array\"}}, \"required\": [\"input_list\"], \"type\": \"object\"}}, {\"description\": \"Returns a dictionary of stock prices per day.\", \"name\": \"stock_prices_per_day\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of stock prices per day. If the prices for a given day are in a single timestamp,\\n    the value is that price. If there are multiple prices for a day, the value is an array of prices.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"stock_prices\": {\"additionalProperties\": {}, \"description\": \"A dictionary of stock prices at different timestamps.\", \"type\": \"object\"}}, \"required\": [\"stock_prices\"], \"type\": \"object\"}}, {\"description\": \"Converts a list of strings into a list of variable names.\", \"name\": \"to_vars\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of formatted variable names, with the prefix and a number (starting at 1) appended to each string.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"prefix\": {\"description\": \"An optional prefix for the variable names. Defaults to 'var'.\", \"type\": \"string\"}, \"strings\": {\"description\": \"A list of strings.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"strings\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}]",
    "category": "generic"
  },
  {
    "question_id": 929,
    "text": "Example:\n\nInstruction:\nThe ratio between the sale price and the cost price of an article is 8:5. What is the ratio between the profit and the cost price of that article?\n\nUse this API documentation for reference: [{\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"circumface\", \"description\": \"Calculate the circumference of a circle\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the circle\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Circumference of the circle\", \"type\": \"float\"}}}, {\"name\": \"volume_cone\", \"description\": \"Calculate the volume of a cone\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cone\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cone\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Volume of the cone\", \"type\": \"float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"floor\", \"description\": \"Return the largest integer less than or equal to x.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the flooring result\", \"type\": \"int\"}}}, {\"name\": \"choose\", \"description\": \"Calculate the number of ways to choose r items from n items without repetition and without order\", \"parameters\": {\"arg_0\": {\"description\": \"Total number of items\", \"type\": \"int\"}, \"arg_1\": {\"description\": \"Number of items being chosen\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"Number of combinations\", \"type\": \"int\"}}}]\n\nOutput:\n[{\"name\": \"subtract\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 8, \"arg_1\": 5}}, {\"name\": \"divide\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": 5}}]\n\nGold Answer:\n0.6\n\nNow solve:\nIf the sum of two numbers is 12 and the sum of their squares is 124, then the product of the numbers is\n\nUse this API documentation for reference: [{\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}, {\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cube\", \"description\": \"Calculate the surface area of a cube\", \"parameters\": {\"arg_0\": {\"description\": \"Length of a side of the cube\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cube\", \"type\": \"float\"}}}, {\"name\": \"square_edge_by_perimeter\", \"description\": \"Calculate the edge length of a square given its perimeter\", \"parameters\": {\"arg_0\": {\"description\": \"Perimeter of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"power\", \"description\": \"Raise a number to a power\", \"parameters\": {\"arg_0\": {\"description\": \"The base number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The exponent number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the power result\", \"type\": \"int or float\"}}}, {\"name\": \"log\", \"description\": \"Calculate the logarithm of x with the given base (default is natural log)\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The base\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"logarithm of provided number with the given base \", \"type\": \"int\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}]",
    "category": "generic"
  },
  {
    "question_id": 930,
    "text": "Example:\n\nInstruction:\nfind the average of all the number between 6 and 34 which are divisible by 5.\n\nUse this API documentation for reference: [{\"name\": \"inverse\", \"description\": \"Return the inverse (reciprocal) of a number\", \"parameters\": {\"arg_0\": {\"description\": \"The number to inverse\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The inverse result\", \"type\": \"int or float\"}}}, {\"name\": \"surface_cylinder\", \"description\": \"Calculate the surface area of a cylinder\", \"parameters\": {\"arg_0\": {\"description\": \"Radius of the base of the cylinder\", \"type\": \"float\"}, \"arg_1\": {\"description\": \"Height of the cylinder\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Surface area of the cylinder\", \"type\": \"float\"}}}, {\"name\": \"divide\", \"description\": \"divides two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The division result\", \"type\": \"int or float\"}}}, {\"name\": \"square_perimeter\", \"description\": \"Calculate the perimeter of a square given its side length\", \"parameters\": {\"arg_0\": {\"description\": \"side length\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square perimeter\", \"type\": \"int or float\"}}}, {\"name\": \"square_edge_by_area\", \"description\": \"Calculate the edge length of a square given its area\", \"parameters\": {\"arg_0\": {\"description\": \"Area of the square\", \"type\": \"float\"}}, \"output_parameter\": {\"result\": {\"description\": \"Edge length of the square\", \"type\": \"float\"}}}, {\"name\": \"sqrt\", \"description\": \"Calculate the square root of a non-negative number.\", \"parameters\": {\"arg_0\": {\"description\": \"The input number\", \"type\": \"int\"}}, \"output_parameter\": {\"result\": {\"description\": \"the square root of the provided number\", \"type\": \"int\"}}}, {\"name\": \"lcm\", \"description\": \"Calculate the least common multiple of two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"the least common multiple\", \"type\": \"int or float\"}}}, {\"name\": \"add\", \"description\": \"adds two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The addition result\", \"type\": \"int or float\"}}}, {\"name\": \"multiply\", \"description\": \"Multiplies two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The multiplication result\", \"type\": \"int or float\"}}}, {\"name\": \"subtract\", \"description\": \"subtract two numbers\", \"parameters\": {\"arg_0\": {\"description\": \"The first number\", \"type\": \"int or float\"}, \"arg_1\": {\"description\": \"The second number\", \"type\": \"int or float\"}}, \"output_parameter\": {\"result\": {\"description\": \"The subtraction result\", \"type\": \"int or float\"}}}]\n\nOutput:\n[{\"name\": \"add\", \"label\": \"$var_1\", \"arguments\": {\"arg_0\": 6, \"arg_1\": 4}}, {\"name\": \"subtract\", \"label\": \"$var_2\", \"arguments\": {\"arg_0\": 34, \"arg_1\": 4}}, {\"name\": \"add\", \"label\": \"$var_3\", \"arguments\": {\"arg_0\": \"$var_1.result$\", \"arg_1\": \"$var_2.result$\"}}, {\"name\": \"divide\", \"label\": \"$var_4\", \"arguments\": {\"arg_0\": \"$var_3.result$\", \"arg_1\": 2}}]\n\nGold Answer:\n20.0\n\nNow solve:\nI have a list of numbers [1, 2, 3, 4, 5] and I want to scale them linearly by a factor of 2. After that, I want to calculate the Euclidean distances between the scaled list and another list [6, 7, 8, 9, 10].\n\nUse this API documentation for reference: [{\"description\": \"Calculates the Euclidean distances between two vectors.\", \"name\": \"calc_vector_distances\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of distances, where each element in the list represents the distance between the corresponding elements in the two vectors.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"vector_a\": {\"description\": \"A list representing a vector in n-dimensional space.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"vector_b\": {\"description\": \"A list representing a vector in n-dimensional space.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"vector_a\", \"vector_b\"], \"type\": \"object\"}}, {\"description\": \"Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).\", \"name\": \"compute_degree\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"coefficients\": {\"description\": \"The coefficients of the polynomial in decreasing order of powers.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}}, \"required\": [\"coefficients\"], \"type\": \"object\"}}, {\"description\": \"Validates if a string represents a valid IP address.\", \"name\": \"validate_ip\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"True if the input represents a valid IP address, and False otherwise.\", \"type\": \"boolean\"}}}, \"parameters\": {\"properties\": {\"ip_str\": {\"description\": \"The string to validate.\", \"type\": \"string\"}}, \"required\": [\"ip_str\"], \"type\": \"object\"}}, {\"description\": \"Converts a list of cartesian coordinates to spherical coordinates.\", \"name\": \"convert_to_spherical\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of spherical coordinates in the format [r, theta, phi].\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"coordinates\": {\"description\": \"A list of cartesian coordinates in the format [x, y, z].\", \"type\": \"object\"}}, \"required\": [\"coordinates\"], \"type\": \"object\"}}, {\"description\": \"Concatenates two lists together.\", \"name\": \"my_concat\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A new list that contains the elements of the two input lists concatenated together.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"list1\": {\"description\": \"The first list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"list2\": {\"description\": \"The second list.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"list1\", \"list2\"], \"type\": \"object\"}}, {\"description\": \"Returns a string representing the sign of a number.\", \"name\": \"get_sign\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"n\": {\"description\": \"The number to check the sign of.\", \"type\": [\"integer\", \"number\"]}}, \"required\": [\"n\"], \"type\": \"object\"}}, {\"description\": \"Reads the data from a file with the format 'key -> value1, value2, value3'\\ninto a dictionary with the data structure { key1: [list of values], key2: [list of values], ... }\", \"name\": \"read_file_into_dict\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"file_path\": {\"description\": \"The path to the file to read.\", \"type\": \"string\"}}, \"required\": [\"file_path\"], \"type\": \"object\"}}, {\"description\": \"Calculates the saliency ratio for a given time series.\", \"name\": \"ratio_saliency\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats representing the saliency ratios.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"time_series\": {\"description\": \"A list of integers representing the time series.\", \"items\": {\"type\": \"integer\"}, \"type\": \"array\"}}, \"required\": [\"time_series\"], \"type\": \"object\"}}, {\"description\": \"Calculates the number of consecutive characters for each character in the input string.\", \"name\": \"consecutive_character_counts\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A string containing the character and its count for each character in the input string.\", \"type\": \"string\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Converts a string to a list of class names.\\n\\nEach word in the input string is treated as a separate class name. The first letter of each word is capitalized, and the suffix 'Class' is added.\", \"name\": \"convert_to_class_names\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of class names.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_string\": {\"description\": \"The input string to convert to class names.\", \"type\": \"string\"}}, \"required\": [\"input_string\"], \"type\": \"object\"}}, {\"description\": \"Parses a string representing a list of numbers (separated by commas) into a list of floats.\", \"name\": \"parse_list_of_numbers\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of floats.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"string\": {\"description\": \"The input string.\", \"type\": \"string\"}}, \"required\": [\"string\"], \"type\": \"object\"}}, {\"description\": \"Counts the words in a list of sentences.\", \"name\": \"count_words_from_sentences\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A dictionary of words and their corresponding counts.\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"sentences\": {\"description\": \"A list of sentences.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"sentences\"], \"type\": \"object\"}}, {\"description\": \"Returns a list of non-empty substrings that do not contain any whitespace characters.\", \"name\": \"non_whitespace_substrings\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"input_str\": {\"description\": \"A string containing multiple words separated by whitespace characters.\", \"type\": \"string\"}}, \"required\": [\"input_str\"], \"type\": \"object\"}}, {\"description\": \"Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.\", \"name\": \"traverse_diagonal\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"A list of the diagonal elements.\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"matrix\": {\"description\": \"A square matrix represented as a list of lists.\", \"items\": {\"items\": {\"type\": \"integer\"}, \"type\": \"array\"}, \"type\": \"array\"}}, \"required\": [\"matrix\"], \"type\": \"object\"}}, {\"description\": \"Counts the number of objects whose `name` attribute starts with 'A' or 'B'.\", \"name\": \"count_objects_with_name_starting_with_a_or_b\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"The number of objects whose `name` attribute starts with 'A' or 'B'.\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"objects\": {\"description\": \"A list of objects.\", \"items\": {\"type\": \"object\"}, \"type\": \"array\"}}, \"required\": [\"objects\"], \"type\": \"object\"}}, {\"description\": \"Calculates and returns the number of days in the given month of the given year.\\nIf the given month is invalid, the function returns None.\", \"name\": \"get_number_of_days_in_month\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"integer\"}}}, \"parameters\": {\"properties\": {\"month\": {\"description\": \"The given month.\", \"type\": \"integer\"}, \"year\": {\"description\": \"The given year.\", \"type\": \"integer\"}}, \"required\": [\"year\", \"month\"], \"type\": \"object\"}}, {\"description\": \"Returns a new dictionary with only the keys corresponding to the values from the list.\\nIf the key is not present in the dictionary, it should not be included in the result.\", \"name\": \"get_dict_from_keys\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"object\"}}}, \"parameters\": {\"properties\": {\"d\": {\"additionalProperties\": {\"type\": \"object\"}, \"description\": \"The dictionary to filter.\", \"type\": \"object\"}, \"l\": {\"description\": \"The list of keys to include in the result.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}}, \"required\": [\"d\", \"l\"], \"type\": \"object\"}}, {\"description\": \"Scales a list of numbers linearly by a given scale value.\", \"name\": \"scale_linearly\", \"output_parameters\": {\"properties\": {\"output_0\": {\"description\": \"\", \"type\": \"array\"}}}, \"parameters\": {\"properties\": {\"lst\": {\"description\": \"The list of numbers to be scaled.\", \"items\": {\"type\": \"number\"}, \"type\": \"array\"}, \"scale\": {\"description\": \"The scale value by which each number in the list is multiplied.\", \"type\": \"number\"}}, \"required\": [\"lst\", \"scale\"], \"type\": \"object\"}}]",
    "category": "generic"
  }
]